//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmileSIncident.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class IncidentEntities : DbContext
    {
        public IncidentEntities()
            : base("name=IncidentEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ProgramConfig> ProgramConfig { get; set; }
        public virtual DbSet<IncidentJob> IncidentJob { get; set; }
    
        public virtual ObjectResult<usp_IncidentAttachment_Insert_Result> usp_IncidentAttachment_Insert(Nullable<int> incidentMessageId, Nullable<int> createdByUserId)
        {
            var incidentMessageIdParameter = incidentMessageId.HasValue ?
                new ObjectParameter("IncidentMessageId", incidentMessageId) :
                new ObjectParameter("IncidentMessageId", typeof(int));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IncidentAttachment_Insert_Result>("usp_IncidentAttachment_Insert", incidentMessageIdParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_IncidentTask_Insert_Result> usp_IncidentTask_Insert(Nullable<int> createdByUserId)
        {
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IncidentTask_Insert_Result>("usp_IncidentTask_Insert", createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_IncidentTask_Update_Result> usp_IncidentTask_Update(Nullable<int> incidentTaskId, Nullable<int> incidentMessageId, Nullable<int> incidentTypeId, string incidentSubject, string message, Nullable<int> updatedByUserId)
        {
            var incidentTaskIdParameter = incidentTaskId.HasValue ?
                new ObjectParameter("IncidentTaskId", incidentTaskId) :
                new ObjectParameter("IncidentTaskId", typeof(int));
    
            var incidentMessageIdParameter = incidentMessageId.HasValue ?
                new ObjectParameter("IncidentMessageId", incidentMessageId) :
                new ObjectParameter("IncidentMessageId", typeof(int));
    
            var incidentTypeIdParameter = incidentTypeId.HasValue ?
                new ObjectParameter("IncidentTypeId", incidentTypeId) :
                new ObjectParameter("IncidentTypeId", typeof(int));
    
            var incidentSubjectParameter = incidentSubject != null ?
                new ObjectParameter("IncidentSubject", incidentSubject) :
                new ObjectParameter("IncidentSubject", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var updatedByUserIdParameter = updatedByUserId.HasValue ?
                new ObjectParameter("UpdatedByUserId", updatedByUserId) :
                new ObjectParameter("UpdatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IncidentTask_Update_Result>("usp_IncidentTask_Update", incidentTaskIdParameter, incidentMessageIdParameter, incidentTypeIdParameter, incidentSubjectParameter, messageParameter, updatedByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_IncidentType_Select_Result> usp_IncidentType_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IncidentType_Select_Result>("usp_IncidentType_Select");
        }
    
        public virtual ObjectResult<usp_IncidentAttachment_Select_Result> usp_IncidentAttachment_Select(Nullable<int> incidentMessageId, Nullable<int> incidentTaskId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var incidentMessageIdParameter = incidentMessageId.HasValue ?
                new ObjectParameter("IncidentMessageId", incidentMessageId) :
                new ObjectParameter("IncidentMessageId", typeof(int));
    
            var incidentTaskIdParameter = incidentTaskId.HasValue ?
                new ObjectParameter("IncidentTaskId", incidentTaskId) :
                new ObjectParameter("IncidentTaskId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IncidentAttachment_Select_Result>("usp_IncidentAttachment_Select", incidentMessageIdParameter, incidentTaskIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_IncidentTask_Select_Result> usp_IncidentTask_Select(Nullable<int> createdById, Nullable<int> statusTaskId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var createdByIdParameter = createdById.HasValue ?
                new ObjectParameter("CreatedById", createdById) :
                new ObjectParameter("CreatedById", typeof(int));
    
            var statusTaskIdParameter = statusTaskId.HasValue ?
                new ObjectParameter("StatusTaskId", statusTaskId) :
                new ObjectParameter("StatusTaskId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IncidentTask_Select_Result>("usp_IncidentTask_Select", createdByIdParameter, statusTaskIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_IncidentTask_SelectById_Result> usp_IncidentTask_SelectById(Nullable<int> incidentTaskId)
        {
            var incidentTaskIdParameter = incidentTaskId.HasValue ?
                new ObjectParameter("IncidentTaskId", incidentTaskId) :
                new ObjectParameter("IncidentTaskId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IncidentTask_SelectById_Result>("usp_IncidentTask_SelectById", incidentTaskIdParameter);
        }
    
        public virtual ObjectResult<usp_IncidentTaskStatus_Select_Result> usp_IncidentTaskStatus_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IncidentTaskStatus_Select_Result>("usp_IncidentTaskStatus_Select");
        }
    
        public virtual ObjectResult<usp_IncidentAttachment_Update_Result> usp_IncidentAttachment_Update(Nullable<int> attactmentId, string uRLPath, string physicalPath, string fileName, Nullable<int> updatedByUserId)
        {
            var attactmentIdParameter = attactmentId.HasValue ?
                new ObjectParameter("AttactmentId", attactmentId) :
                new ObjectParameter("AttactmentId", typeof(int));
    
            var uRLPathParameter = uRLPath != null ?
                new ObjectParameter("URLPath", uRLPath) :
                new ObjectParameter("URLPath", typeof(string));
    
            var physicalPathParameter = physicalPath != null ?
                new ObjectParameter("PhysicalPath", physicalPath) :
                new ObjectParameter("PhysicalPath", typeof(string));
    
            var fileNameParameter = fileName != null ?
                new ObjectParameter("FileName", fileName) :
                new ObjectParameter("FileName", typeof(string));
    
            var updatedByUserIdParameter = updatedByUserId.HasValue ?
                new ObjectParameter("UpdatedByUserId", updatedByUserId) :
                new ObjectParameter("UpdatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IncidentAttachment_Update_Result>("usp_IncidentAttachment_Update", attactmentIdParameter, uRLPathParameter, physicalPathParameter, fileNameParameter, updatedByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_IncidentAttachment_Delete_Result> usp_IncidentAttachment_Delete(Nullable<int> attachmentId, Nullable<int> deletedByUserId)
        {
            var attachmentIdParameter = attachmentId.HasValue ?
                new ObjectParameter("attachmentId", attachmentId) :
                new ObjectParameter("attachmentId", typeof(int));
    
            var deletedByUserIdParameter = deletedByUserId.HasValue ?
                new ObjectParameter("DeletedByUserId", deletedByUserId) :
                new ObjectParameter("DeletedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IncidentAttachment_Delete_Result>("usp_IncidentAttachment_Delete", attachmentIdParameter, deletedByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_IncidentMessage_Delete_Result> usp_IncidentMessage_Delete(Nullable<int> incidentMessageId, Nullable<int> updatedByUserId)
        {
            var incidentMessageIdParameter = incidentMessageId.HasValue ?
                new ObjectParameter("IncidentMessageId", incidentMessageId) :
                new ObjectParameter("IncidentMessageId", typeof(int));
    
            var updatedByUserIdParameter = updatedByUserId.HasValue ?
                new ObjectParameter("UpdatedByUserId", updatedByUserId) :
                new ObjectParameter("UpdatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IncidentMessage_Delete_Result>("usp_IncidentMessage_Delete", incidentMessageIdParameter, updatedByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_IncidentMessage_Insert_Result> usp_IncidentMessage_Insert(Nullable<int> incidentTaskId, Nullable<int> createdByUserId)
        {
            var incidentTaskIdParameter = incidentTaskId.HasValue ?
                new ObjectParameter("IncidentTaskId", incidentTaskId) :
                new ObjectParameter("IncidentTaskId", typeof(int));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IncidentMessage_Insert_Result>("usp_IncidentMessage_Insert", incidentTaskIdParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_IncidentMessage_Select_Result> usp_IncidentMessage_Select(Nullable<int> incidentTaskId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var incidentTaskIdParameter = incidentTaskId.HasValue ?
                new ObjectParameter("IncidentTaskId", incidentTaskId) :
                new ObjectParameter("IncidentTaskId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IncidentMessage_Select_Result>("usp_IncidentMessage_Select", incidentTaskIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_IncidentMessage_Update_Result> usp_IncidentMessage_Update(Nullable<int> incidentMessageId, string message, Nullable<int> updatedByUserId)
        {
            var incidentMessageIdParameter = incidentMessageId.HasValue ?
                new ObjectParameter("IncidentMessageId", incidentMessageId) :
                new ObjectParameter("IncidentMessageId", typeof(int));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var updatedByUserIdParameter = updatedByUserId.HasValue ?
                new ObjectParameter("UpdatedByUserId", updatedByUserId) :
                new ObjectParameter("UpdatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IncidentMessage_Update_Result>("usp_IncidentMessage_Update", incidentMessageIdParameter, messageParameter, updatedByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_IncidentJob_Insert_Result> usp_IncidentJob_Insert(Nullable<int> incidentTaskId, Nullable<int> actionByUserId, string description, string actionRemark, Nullable<int> rejectCaseId, Nullable<int> incidentJobStatusId, Nullable<int> createdByUserId)
        {
            var incidentTaskIdParameter = incidentTaskId.HasValue ?
                new ObjectParameter("IncidentTaskId", incidentTaskId) :
                new ObjectParameter("IncidentTaskId", typeof(int));
    
            var actionByUserIdParameter = actionByUserId.HasValue ?
                new ObjectParameter("ActionByUserId", actionByUserId) :
                new ObjectParameter("ActionByUserId", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var actionRemarkParameter = actionRemark != null ?
                new ObjectParameter("ActionRemark", actionRemark) :
                new ObjectParameter("ActionRemark", typeof(string));
    
            var rejectCaseIdParameter = rejectCaseId.HasValue ?
                new ObjectParameter("RejectCaseId", rejectCaseId) :
                new ObjectParameter("RejectCaseId", typeof(int));
    
            var incidentJobStatusIdParameter = incidentJobStatusId.HasValue ?
                new ObjectParameter("IncidentJobStatusId", incidentJobStatusId) :
                new ObjectParameter("IncidentJobStatusId", typeof(int));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IncidentJob_Insert_Result>("usp_IncidentJob_Insert", incidentTaskIdParameter, actionByUserIdParameter, descriptionParameter, actionRemarkParameter, rejectCaseIdParameter, incidentJobStatusIdParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_IncidentJob_Select_Result> usp_IncidentJob_Select(Nullable<int> incidentTaskId, Nullable<int> createdByUserId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var incidentTaskIdParameter = incidentTaskId.HasValue ?
                new ObjectParameter("IncidentTaskId", incidentTaskId) :
                new ObjectParameter("IncidentTaskId", typeof(int));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IncidentJob_Select_Result>("usp_IncidentJob_Select", incidentTaskIdParameter, createdByUserIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_IncidentJob_SelectById_Result> usp_IncidentJob_SelectById(Nullable<int> incidentJobId)
        {
            var incidentJobIdParameter = incidentJobId.HasValue ?
                new ObjectParameter("IncidentJobId", incidentJobId) :
                new ObjectParameter("IncidentJobId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IncidentJob_SelectById_Result>("usp_IncidentJob_SelectById", incidentJobIdParameter);
        }
    
        public virtual ObjectResult<usp_IncidentJobStatus_Select_Result> usp_IncidentJobStatus_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IncidentJobStatus_Select_Result>("usp_IncidentJobStatus_Select");
        }
    
        public virtual ObjectResult<usp_IncidentProject_Select_Result> usp_IncidentProject_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IncidentProject_Select_Result>("usp_IncidentProject_Select");
        }
    
        public virtual ObjectResult<usp_IncidentTask_Delete_Result> usp_IncidentTask_Delete(Nullable<int> incidentTaskId, Nullable<int> updateByUserId)
        {
            var incidentTaskIdParameter = incidentTaskId.HasValue ?
                new ObjectParameter("incidentTaskId", incidentTaskId) :
                new ObjectParameter("incidentTaskId", typeof(int));
    
            var updateByUserIdParameter = updateByUserId.HasValue ?
                new ObjectParameter("UpdateByUserId", updateByUserId) :
                new ObjectParameter("UpdateByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IncidentTask_Delete_Result>("usp_IncidentTask_Delete", incidentTaskIdParameter, updateByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_IncidentRejectCase_Select_Result> usp_IncidentRejectCase_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IncidentRejectCase_Select_Result>("usp_IncidentRejectCase_Select");
        }
    
        public virtual ObjectResult<usp_IncidentTag_Insert_Result> usp_IncidentTag_Insert(Nullable<int> incidentJobId, Nullable<int> incidentProjectId, Nullable<bool> isChecked, Nullable<int> createdByUserId)
        {
            var incidentJobIdParameter = incidentJobId.HasValue ?
                new ObjectParameter("IncidentJobId", incidentJobId) :
                new ObjectParameter("IncidentJobId", typeof(int));
    
            var incidentProjectIdParameter = incidentProjectId.HasValue ?
                new ObjectParameter("IncidentProjectId", incidentProjectId) :
                new ObjectParameter("IncidentProjectId", typeof(int));
    
            var isCheckedParameter = isChecked.HasValue ?
                new ObjectParameter("IsChecked", isChecked) :
                new ObjectParameter("IsChecked", typeof(bool));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IncidentTag_Insert_Result>("usp_IncidentTag_Insert", incidentJobIdParameter, incidentProjectIdParameter, isCheckedParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_IncidentTag_SelectById_Result> usp_IncidentTag_SelectById(Nullable<int> incidentJobId)
        {
            var incidentJobIdParameter = incidentJobId.HasValue ?
                new ObjectParameter("IncidentJobId", incidentJobId) :
                new ObjectParameter("IncidentJobId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IncidentTag_SelectById_Result>("usp_IncidentTag_SelectById", incidentJobIdParameter);
        }
    
        public virtual ObjectResult<usp_IncidentTag_Update_Result> usp_IncidentTag_Update(Nullable<int> incidentJobId, Nullable<int> incidentProjectId, Nullable<bool> isChecked, Nullable<int> createdByUserId)
        {
            var incidentJobIdParameter = incidentJobId.HasValue ?
                new ObjectParameter("IncidentJobId", incidentJobId) :
                new ObjectParameter("IncidentJobId", typeof(int));
    
            var incidentProjectIdParameter = incidentProjectId.HasValue ?
                new ObjectParameter("IncidentProjectId", incidentProjectId) :
                new ObjectParameter("IncidentProjectId", typeof(int));
    
            var isCheckedParameter = isChecked.HasValue ?
                new ObjectParameter("IsChecked", isChecked) :
                new ObjectParameter("IsChecked", typeof(bool));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IncidentTag_Update_Result>("usp_IncidentTag_Update", incidentJobIdParameter, incidentProjectIdParameter, isCheckedParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_IncidentJob_Update_Result> usp_IncidentJob_Update(Nullable<int> incidentJobId, Nullable<int> incidentJobStatusId, string description, string actionRemark, Nullable<int> rejectCaseId, Nullable<int> createdByUserId, Nullable<int> transferToUserId)
        {
            var incidentJobIdParameter = incidentJobId.HasValue ?
                new ObjectParameter("IncidentJobId", incidentJobId) :
                new ObjectParameter("IncidentJobId", typeof(int));
    
            var incidentJobStatusIdParameter = incidentJobStatusId.HasValue ?
                new ObjectParameter("IncidentJobStatusId", incidentJobStatusId) :
                new ObjectParameter("IncidentJobStatusId", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var actionRemarkParameter = actionRemark != null ?
                new ObjectParameter("ActionRemark", actionRemark) :
                new ObjectParameter("ActionRemark", typeof(string));
    
            var rejectCaseIdParameter = rejectCaseId.HasValue ?
                new ObjectParameter("RejectCaseId", rejectCaseId) :
                new ObjectParameter("RejectCaseId", typeof(int));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            var transferToUserIdParameter = transferToUserId.HasValue ?
                new ObjectParameter("TransferToUserId", transferToUserId) :
                new ObjectParameter("TransferToUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IncidentJob_Update_Result>("usp_IncidentJob_Update", incidentJobIdParameter, incidentJobStatusIdParameter, descriptionParameter, actionRemarkParameter, rejectCaseIdParameter, createdByUserIdParameter, transferToUserIdParameter);
        }
    
        public virtual ObjectResult<usp_IncidentTask_SelectCount_Result> usp_IncidentTask_SelectCount(Nullable<int> createdByUserId)
        {
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IncidentTask_SelectCount_Result>("usp_IncidentTask_SelectCount", createdByUserIdParameter);
        }
    
        public virtual int usp_ReadAndUnRead_Update(Nullable<int> taskId, Nullable<bool> isRead, Nullable<int> userId, Nullable<int> typeId)
        {
            var taskIdParameter = taskId.HasValue ?
                new ObjectParameter("TaskId", taskId) :
                new ObjectParameter("TaskId", typeof(int));
    
            var isReadParameter = isRead.HasValue ?
                new ObjectParameter("IsRead", isRead) :
                new ObjectParameter("IsRead", typeof(bool));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var typeIdParameter = typeId.HasValue ?
                new ObjectParameter("TypeId", typeId) :
                new ObjectParameter("TypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ReadAndUnRead_Update", taskIdParameter, isReadParameter, userIdParameter, typeIdParameter);
        }
    
        public virtual ObjectResult<usp_IncidentJob_SelectCount_Result> usp_IncidentJob_SelectCount(Nullable<int> actionByUserId)
        {
            var actionByUserIdParameter = actionByUserId.HasValue ?
                new ObjectParameter("ActionByUserId", actionByUserId) :
                new ObjectParameter("ActionByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IncidentJob_SelectCount_Result>("usp_IncidentJob_SelectCount", actionByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_IncidentFeedback_Insert_Result> usp_IncidentFeedback_Insert(Nullable<int> incidentTaskId, string incidentFeedback, Nullable<double> incidentFeedbackScore, Nullable<int> createdByUserId)
        {
            var incidentTaskIdParameter = incidentTaskId.HasValue ?
                new ObjectParameter("IncidentTaskId", incidentTaskId) :
                new ObjectParameter("IncidentTaskId", typeof(int));
    
            var incidentFeedbackParameter = incidentFeedback != null ?
                new ObjectParameter("IncidentFeedback", incidentFeedback) :
                new ObjectParameter("IncidentFeedback", typeof(string));
    
            var incidentFeedbackScoreParameter = incidentFeedbackScore.HasValue ?
                new ObjectParameter("IncidentFeedbackScore", incidentFeedbackScore) :
                new ObjectParameter("IncidentFeedbackScore", typeof(double));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IncidentFeedback_Insert_Result>("usp_IncidentFeedback_Insert", incidentTaskIdParameter, incidentFeedbackParameter, incidentFeedbackScoreParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_IncidentFeedback_Select_Result> usp_IncidentFeedback_Select(Nullable<int> incidentTaskId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var incidentTaskIdParameter = incidentTaskId.HasValue ?
                new ObjectParameter("IncidentTaskId", incidentTaskId) :
                new ObjectParameter("IncidentTaskId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IncidentFeedback_Select_Result>("usp_IncidentFeedback_Select", incidentTaskIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_IncidentFeedback_SelectById_Result> usp_IncidentFeedback_SelectById(Nullable<int> incidentTaskId)
        {
            var incidentTaskIdParameter = incidentTaskId.HasValue ?
                new ObjectParameter("IncidentTaskId", incidentTaskId) :
                new ObjectParameter("IncidentTaskId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IncidentFeedback_SelectById_Result>("usp_IncidentFeedback_SelectById", incidentTaskIdParameter);
        }
    
        public virtual ObjectResult<usp_IncidentFeedback_Update_Result> usp_IncidentFeedback_Update(Nullable<int> incidentFeedbackId, string incidentFeedback, Nullable<double> incidentFeedbackScore, Nullable<int> updateByUserId)
        {
            var incidentFeedbackIdParameter = incidentFeedbackId.HasValue ?
                new ObjectParameter("IncidentFeedbackId", incidentFeedbackId) :
                new ObjectParameter("IncidentFeedbackId", typeof(int));
    
            var incidentFeedbackParameter = incidentFeedback != null ?
                new ObjectParameter("IncidentFeedback", incidentFeedback) :
                new ObjectParameter("IncidentFeedback", typeof(string));
    
            var incidentFeedbackScoreParameter = incidentFeedbackScore.HasValue ?
                new ObjectParameter("IncidentFeedbackScore", incidentFeedbackScore) :
                new ObjectParameter("IncidentFeedbackScore", typeof(double));
    
            var updateByUserIdParameter = updateByUserId.HasValue ?
                new ObjectParameter("UpdateByUserId", updateByUserId) :
                new ObjectParameter("UpdateByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IncidentFeedback_Update_Result>("usp_IncidentFeedback_Update", incidentFeedbackIdParameter, incidentFeedbackParameter, incidentFeedbackScoreParameter, updateByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_IncidentJob_Monitor_Select_Result> usp_IncidentJob_Monitor_Select(string jobStatusIdList, string actionByUserIdList, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var jobStatusIdListParameter = jobStatusIdList != null ?
                new ObjectParameter("JobStatusIdList", jobStatusIdList) :
                new ObjectParameter("JobStatusIdList", typeof(string));
    
            var actionByUserIdListParameter = actionByUserIdList != null ?
                new ObjectParameter("ActionByUserIdList", actionByUserIdList) :
                new ObjectParameter("ActionByUserIdList", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IncidentJob_Monitor_Select_Result>("usp_IncidentJob_Monitor_Select", jobStatusIdListParameter, actionByUserIdListParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_IncidentJob_MonitorCount_Select_Result> usp_IncidentJob_MonitorCount_Select(string actionByUserIdList, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var actionByUserIdListParameter = actionByUserIdList != null ?
                new ObjectParameter("ActionByUserIdList", actionByUserIdList) :
                new ObjectParameter("ActionByUserIdList", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IncidentJob_MonitorCount_Select_Result>("usp_IncidentJob_MonitorCount_Select", actionByUserIdListParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_IncidentTask_Select_V2_Result> usp_IncidentTask_Select_V2(Nullable<int> createdById, Nullable<int> statusTaskId, Nullable<int> incidentGroupTypeId, Nullable<int> incidentTypeId, Nullable<int> p_Branch_Id, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail, Nullable<bool> isAdvSearch)
        {
            var createdByIdParameter = createdById.HasValue ?
                new ObjectParameter("CreatedById", createdById) :
                new ObjectParameter("CreatedById", typeof(int));
    
            var statusTaskIdParameter = statusTaskId.HasValue ?
                new ObjectParameter("StatusTaskId", statusTaskId) :
                new ObjectParameter("StatusTaskId", typeof(int));
    
            var incidentGroupTypeIdParameter = incidentGroupTypeId.HasValue ?
                new ObjectParameter("IncidentGroupTypeId", incidentGroupTypeId) :
                new ObjectParameter("IncidentGroupTypeId", typeof(int));
    
            var incidentTypeIdParameter = incidentTypeId.HasValue ?
                new ObjectParameter("IncidentTypeId", incidentTypeId) :
                new ObjectParameter("IncidentTypeId", typeof(int));
    
            var p_Branch_IdParameter = p_Branch_Id.HasValue ?
                new ObjectParameter("P_Branch_Id", p_Branch_Id) :
                new ObjectParameter("P_Branch_Id", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            var isAdvSearchParameter = isAdvSearch.HasValue ?
                new ObjectParameter("IsAdvSearch", isAdvSearch) :
                new ObjectParameter("IsAdvSearch", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IncidentTask_Select_V2_Result>("usp_IncidentTask_Select_V2", createdByIdParameter, statusTaskIdParameter, incidentGroupTypeIdParameter, incidentTypeIdParameter, p_Branch_IdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter, isAdvSearchParameter);
        }
    
        public virtual ObjectResult<usp_IncidentReport_Select_Result> usp_IncidentReport_Select(Nullable<System.DateTime> updateDateFrom, Nullable<System.DateTime> updateDateTo, Nullable<int> incidentGroupTypeId, Nullable<int> actionByUserid, Nullable<int> actionByUserDepartmentId, Nullable<int> incidentTaskStatusId, Nullable<int> incidentJobStatusId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var updateDateFromParameter = updateDateFrom.HasValue ?
                new ObjectParameter("UpdateDateFrom", updateDateFrom) :
                new ObjectParameter("UpdateDateFrom", typeof(System.DateTime));
    
            var updateDateToParameter = updateDateTo.HasValue ?
                new ObjectParameter("UpdateDateTo", updateDateTo) :
                new ObjectParameter("UpdateDateTo", typeof(System.DateTime));
    
            var incidentGroupTypeIdParameter = incidentGroupTypeId.HasValue ?
                new ObjectParameter("IncidentGroupTypeId", incidentGroupTypeId) :
                new ObjectParameter("IncidentGroupTypeId", typeof(int));
    
            var actionByUseridParameter = actionByUserid.HasValue ?
                new ObjectParameter("ActionByUserid", actionByUserid) :
                new ObjectParameter("ActionByUserid", typeof(int));
    
            var actionByUserDepartmentIdParameter = actionByUserDepartmentId.HasValue ?
                new ObjectParameter("ActionByUserDepartmentId", actionByUserDepartmentId) :
                new ObjectParameter("ActionByUserDepartmentId", typeof(int));
    
            var incidentTaskStatusIdParameter = incidentTaskStatusId.HasValue ?
                new ObjectParameter("IncidentTaskStatusId", incidentTaskStatusId) :
                new ObjectParameter("IncidentTaskStatusId", typeof(int));
    
            var incidentJobStatusIdParameter = incidentJobStatusId.HasValue ?
                new ObjectParameter("IncidentJobStatusId", incidentJobStatusId) :
                new ObjectParameter("IncidentJobStatusId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IncidentReport_Select_Result>("usp_IncidentReport_Select", updateDateFromParameter, updateDateToParameter, incidentGroupTypeIdParameter, actionByUseridParameter, actionByUserDepartmentIdParameter, incidentTaskStatusIdParameter, incidentJobStatusIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_NoticeReplyCount_Select(Nullable<int> createdById)
        {
            var createdByIdParameter = createdById.HasValue ?
                new ObjectParameter("CreatedById", createdById) :
                new ObjectParameter("CreatedById", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_NoticeReplyCount_Select", createdByIdParameter);
        }
    
        public virtual ObjectResult<usp_NoticeReplyDetail_Select_Result> usp_NoticeReplyDetail_Select(Nullable<int> createdById, Nullable<int> statusTaskId, Nullable<int> incidentTypeId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var createdByIdParameter = createdById.HasValue ?
                new ObjectParameter("CreatedById", createdById) :
                new ObjectParameter("CreatedById", typeof(int));
    
            var statusTaskIdParameter = statusTaskId.HasValue ?
                new ObjectParameter("StatusTaskId", statusTaskId) :
                new ObjectParameter("StatusTaskId", typeof(int));
    
            var incidentTypeIdParameter = incidentTypeId.HasValue ?
                new ObjectParameter("IncidentTypeId", incidentTypeId) :
                new ObjectParameter("IncidentTypeId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NoticeReplyDetail_Select_Result>("usp_NoticeReplyDetail_Select", createdByIdParameter, statusTaskIdParameter, incidentTypeIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_NoticeReplyRead_Update_Result> usp_NoticeReplyRead_Update(Nullable<int> incidentTaskId, Nullable<int> userId)
        {
            var incidentTaskIdParameter = incidentTaskId.HasValue ?
                new ObjectParameter("IncidentTaskId", incidentTaskId) :
                new ObjectParameter("IncidentTaskId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NoticeReplyRead_Update_Result>("usp_NoticeReplyRead_Update", incidentTaskIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<usp_IncidentTask_UpdateById_Result> usp_IncidentTask_UpdateById(Nullable<int> incidentTaskId, Nullable<int> incidentMessageId, Nullable<int> incidentTypeId, string incidentSubject, Nullable<int> incidentTaskStatusId, string message, Nullable<int> updatedByUserId)
        {
            var incidentTaskIdParameter = incidentTaskId.HasValue ?
                new ObjectParameter("IncidentTaskId", incidentTaskId) :
                new ObjectParameter("IncidentTaskId", typeof(int));
    
            var incidentMessageIdParameter = incidentMessageId.HasValue ?
                new ObjectParameter("IncidentMessageId", incidentMessageId) :
                new ObjectParameter("IncidentMessageId", typeof(int));
    
            var incidentTypeIdParameter = incidentTypeId.HasValue ?
                new ObjectParameter("IncidentTypeId", incidentTypeId) :
                new ObjectParameter("IncidentTypeId", typeof(int));
    
            var incidentSubjectParameter = incidentSubject != null ?
                new ObjectParameter("IncidentSubject", incidentSubject) :
                new ObjectParameter("IncidentSubject", typeof(string));
    
            var incidentTaskStatusIdParameter = incidentTaskStatusId.HasValue ?
                new ObjectParameter("IncidentTaskStatusId", incidentTaskStatusId) :
                new ObjectParameter("IncidentTaskStatusId", typeof(int));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var updatedByUserIdParameter = updatedByUserId.HasValue ?
                new ObjectParameter("UpdatedByUserId", updatedByUserId) :
                new ObjectParameter("UpdatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IncidentTask_UpdateById_Result>("usp_IncidentTask_UpdateById", incidentTaskIdParameter, incidentMessageIdParameter, incidentTypeIdParameter, incidentSubjectParameter, incidentTaskStatusIdParameter, messageParameter, updatedByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_Branch_Select_Result> usp_Branch_Select(Nullable<int> branchId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Branch_Select_Result>("usp_Branch_Select", branchIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<xusp_IncidentTask_SelectV2_Result> xusp_IncidentTask_SelectV2(Nullable<int> createdById, Nullable<int> statusTaskId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var createdByIdParameter = createdById.HasValue ?
                new ObjectParameter("CreatedById", createdById) :
                new ObjectParameter("CreatedById", typeof(int));
    
            var statusTaskIdParameter = statusTaskId.HasValue ?
                new ObjectParameter("StatusTaskId", statusTaskId) :
                new ObjectParameter("StatusTaskId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xusp_IncidentTask_SelectV2_Result>("xusp_IncidentTask_SelectV2", createdByIdParameter, statusTaskIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_IncidentGroupType_Select_Result> usp_IncidentGroupType_Select(Nullable<int> incidentGroupTypeId)
        {
            var incidentGroupTypeIdParameter = incidentGroupTypeId.HasValue ?
                new ObjectParameter("IncidentGroupTypeId", incidentGroupTypeId) :
                new ObjectParameter("IncidentGroupTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IncidentGroupType_Select_Result>("usp_IncidentGroupType_Select", incidentGroupTypeIdParameter);
        }
    
        public virtual ObjectResult<usp_IncidentTypeByGroupId_Select_Result> usp_IncidentTypeByGroupId_Select(Nullable<int> incidentGroupTypeId)
        {
            var incidentGroupTypeIdParameter = incidentGroupTypeId.HasValue ?
                new ObjectParameter("IncidentGroupTypeId", incidentGroupTypeId) :
                new ObjectParameter("IncidentGroupTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IncidentTypeByGroupId_Select_Result>("usp_IncidentTypeByGroupId_Select", incidentGroupTypeIdParameter);
        }
    
        public virtual ObjectResult<usp_Employee_Select_Result> usp_Employee_Select(Nullable<int> employeeId, string employeeCode, string listDepartmentId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            var listDepartmentIdParameter = listDepartmentId != null ?
                new ObjectParameter("ListDepartmentId", listDepartmentId) :
                new ObjectParameter("ListDepartmentId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Employee_Select_Result>("usp_Employee_Select", employeeIdParameter, employeeCodeParameter, listDepartmentIdParameter);
        }
    
        public virtual ObjectResult<usp_IncidentTaskType_Update_Result> usp_IncidentTaskType_Update(Nullable<int> incidentTaskId, Nullable<int> incidentTypeId, Nullable<int> updatedByUserId)
        {
            var incidentTaskIdParameter = incidentTaskId.HasValue ?
                new ObjectParameter("IncidentTaskId", incidentTaskId) :
                new ObjectParameter("IncidentTaskId", typeof(int));
    
            var incidentTypeIdParameter = incidentTypeId.HasValue ?
                new ObjectParameter("IncidentTypeId", incidentTypeId) :
                new ObjectParameter("IncidentTypeId", typeof(int));
    
            var updatedByUserIdParameter = updatedByUserId.HasValue ?
                new ObjectParameter("UpdatedByUserId", updatedByUserId) :
                new ObjectParameter("UpdatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IncidentTaskType_Update_Result>("usp_IncidentTaskType_Update", incidentTaskIdParameter, incidentTypeIdParameter, updatedByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_EmployeeByUserId_Select_Result> usp_EmployeeByUserId_Select(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_EmployeeByUserId_Select_Result>("usp_EmployeeByUserId_Select", userIdParameter);
        }
    }
}
