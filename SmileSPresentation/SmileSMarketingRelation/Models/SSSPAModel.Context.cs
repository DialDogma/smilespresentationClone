//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmileSMarketingRelation.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SSSPADBContext : DbContext
    {
        public SSSPADBContext()
            : base("name=SSSPADBContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<usp_GetClaimTypeByCodeGroup_Select_Result> usp_GetClaimTypeByCodeGroup_Select(string codeGroup_Id)
        {
            var codeGroup_IdParameter = codeGroup_Id != null ?
                new ObjectParameter("codeGroup_Id", codeGroup_Id) :
                new ObjectParameter("codeGroup_Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetClaimTypeByCodeGroup_Select_Result>("usp_GetClaimTypeByCodeGroup_Select", codeGroup_IdParameter);
        }
    
        public virtual ObjectResult<usp_ReportClaim_PA_Select_Result> usp_ReportClaim_PA_Select(string claimTypeIdList, Nullable<System.DateTime> createdDateFrom, Nullable<System.DateTime> createdDateTo)
        {
            var claimTypeIdListParameter = claimTypeIdList != null ?
                new ObjectParameter("ClaimTypeIdList", claimTypeIdList) :
                new ObjectParameter("ClaimTypeIdList", typeof(string));
    
            var createdDateFromParameter = createdDateFrom.HasValue ?
                new ObjectParameter("CreatedDateFrom", createdDateFrom) :
                new ObjectParameter("CreatedDateFrom", typeof(System.DateTime));
    
            var createdDateToParameter = createdDateTo.HasValue ?
                new ObjectParameter("CreatedDateTo", createdDateTo) :
                new ObjectParameter("CreatedDateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReportClaim_PA_Select_Result>("usp_ReportClaim_PA_Select", claimTypeIdListParameter, createdDateFromParameter, createdDateToParameter);
        }
    }
}
