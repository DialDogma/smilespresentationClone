//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmileSLogin.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DataCenterV1Entities : DbContext
    {
        public DataCenterV1Entities()
            : base("name=DataCenterV1Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AspNetToken> AspNetTokens { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
    
        public virtual ObjectResult<MenuListByRoles> usp_GetMenuByRoles(string roles, string projectName)
        {
            var rolesParameter = roles != null ?
                new ObjectParameter("Roles", roles) :
                new ObjectParameter("Roles", typeof(string));
    
            var projectNameParameter = projectName != null ?
                new ObjectParameter("ProjectName", projectName) :
                new ObjectParameter("ProjectName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MenuListByRoles>("usp_GetMenuByRoles", rolesParameter, projectNameParameter);
        }
    
        public virtual int usp_AddToken(string tokenDetail, Nullable<System.DateTime> expireDate, string userName)
        {
            var tokenDetailParameter = tokenDetail != null ?
                new ObjectParameter("TokenDetail", tokenDetail) :
                new ObjectParameter("TokenDetail", typeof(string));
    
            var expireDateParameter = expireDate.HasValue ?
                new ObjectParameter("ExpireDate", expireDate) :
                new ObjectParameter("ExpireDate", typeof(System.DateTime));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AddToken", tokenDetailParameter, expireDateParameter, userNameParameter);
        }
    
        public virtual int usp_DeleteToken(string tokenDetail)
        {
            var tokenDetailParameter = tokenDetail != null ?
                new ObjectParameter("TokenDetail", tokenDetail) :
                new ObjectParameter("TokenDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteToken", tokenDetailParameter);
        }
    
        public virtual int usp_DeleteToken_ByUserName(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteToken_ByUserName", userNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_ValidateToken(string tokenDetail)
        {
            var tokenDetailParameter = tokenDetail != null ?
                new ObjectParameter("TokenDetail", tokenDetail) :
                new ObjectParameter("TokenDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_ValidateToken", tokenDetailParameter);
        }
    
        public virtual ObjectResult<usp_GetUserRoles_Result> usp_GetUserRoles(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetUserRoles_Result>("usp_GetUserRoles", usernameParameter);
        }
    
        public virtual ObjectResult<usp_Branch_Select_Result> usp_Branch_Select(Nullable<int> branchID)
        {
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("branchID", branchID) :
                new ObjectParameter("branchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Branch_Select_Result>("usp_Branch_Select", branchIDParameter);
        }
    
        public virtual ObjectResult<usp_District_ByProvinceID_Select_Result> usp_District_ByProvinceID_Select(Nullable<int> provinceID)
        {
            var provinceIDParameter = provinceID.HasValue ?
                new ObjectParameter("ProvinceID", provinceID) :
                new ObjectParameter("ProvinceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_District_ByProvinceID_Select_Result>("usp_District_ByProvinceID_Select", provinceIDParameter);
        }
    
        public virtual ObjectResult<usp_District_Select_Result> usp_District_Select(Nullable<int> districtID)
        {
            var districtIDParameter = districtID.HasValue ?
                new ObjectParameter("DistrictID", districtID) :
                new ObjectParameter("DistrictID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_District_Select_Result>("usp_District_Select", districtIDParameter);
        }
    
        public virtual ObjectResult<usp_Province_Select_Result> usp_Province_Select(Nullable<int> province_ID)
        {
            var province_IDParameter = province_ID.HasValue ?
                new ObjectParameter("Province_ID", province_ID) :
                new ObjectParameter("Province_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Province_Select_Result>("usp_Province_Select", province_IDParameter);
        }
    
        public virtual ObjectResult<usp_Province2_Select_Result> usp_Province2_Select(Nullable<int> province_ID)
        {
            var province_IDParameter = province_ID.HasValue ?
                new ObjectParameter("Province_ID", province_ID) :
                new ObjectParameter("Province_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Province2_Select_Result>("usp_Province2_Select", province_IDParameter);
        }
    
        public virtual ObjectResult<usp_SubDistrict_ByDistrictID_Select_Result> usp_SubDistrict_ByDistrictID_Select(Nullable<int> districtID)
        {
            var districtIDParameter = districtID.HasValue ?
                new ObjectParameter("DistrictID", districtID) :
                new ObjectParameter("DistrictID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SubDistrict_ByDistrictID_Select_Result>("usp_SubDistrict_ByDistrictID_Select", districtIDParameter);
        }
    
        public virtual ObjectResult<usp_SubDistrict_Select_Result> usp_SubDistrict_Select(Nullable<int> subDistrictID)
        {
            var subDistrictIDParameter = subDistrictID.HasValue ?
                new ObjectParameter("SubDistrictID", subDistrictID) :
                new ObjectParameter("SubDistrictID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SubDistrict_Select_Result>("usp_SubDistrict_Select", subDistrictIDParameter);
        }
    
        public virtual ObjectResult<usp_Zebra_Select_Result> usp_Zebra_Select(Nullable<int> zebra_ID)
        {
            var zebra_IDParameter = zebra_ID.HasValue ?
                new ObjectParameter("Zebra_ID", zebra_ID) :
                new ObjectParameter("Zebra_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Zebra_Select_Result>("usp_Zebra_Select", zebra_IDParameter);
        }
    
        public virtual ObjectResult<usp_ChiefComplain_Select_Result> usp_ChiefComplain_Select(Nullable<int> chiefComplainID, Nullable<bool> isActive)
        {
            var chiefComplainIDParameter = chiefComplainID.HasValue ?
                new ObjectParameter("ChiefComplainID", chiefComplainID) :
                new ObjectParameter("ChiefComplainID", typeof(int));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ChiefComplain_Select_Result>("usp_ChiefComplain_Select", chiefComplainIDParameter, isActiveParameter);
        }
    
        public virtual ObjectResult<usp_ClaimAdmitType_Select_Result> usp_ClaimAdmitType_Select(Nullable<int> productGroupID, Nullable<int> claimTypeID, Nullable<bool> isActive)
        {
            var productGroupIDParameter = productGroupID.HasValue ?
                new ObjectParameter("ProductGroupID", productGroupID) :
                new ObjectParameter("ProductGroupID", typeof(int));
    
            var claimTypeIDParameter = claimTypeID.HasValue ?
                new ObjectParameter("ClaimTypeID", claimTypeID) :
                new ObjectParameter("ClaimTypeID", typeof(int));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ClaimAdmitType_Select_Result>("usp_ClaimAdmitType_Select", productGroupIDParameter, claimTypeIDParameter, isActiveParameter);
        }
    
        public virtual ObjectResult<usp_ClaimType_Select_Result> usp_ClaimType_Select(Nullable<int> productGroupID, Nullable<bool> isActive)
        {
            var productGroupIDParameter = productGroupID.HasValue ?
                new ObjectParameter("ProductGroupID", productGroupID) :
                new ObjectParameter("ProductGroupID", typeof(int));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ClaimType_Select_Result>("usp_ClaimType_Select", productGroupIDParameter, isActiveParameter);
        }
    
        public virtual ObjectResult<CheckProvince_Result> CheckProvince(string province)
        {
            var provinceParameter = province != null ?
                new ObjectParameter("province", province) :
                new ObjectParameter("province", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckProvince_Result>("CheckProvince", provinceParameter);
        }
    
        public virtual int usp_MasterConvertData_Insert(string province, string salesmanCode)
        {
            var provinceParameter = province != null ?
                new ObjectParameter("Province", province) :
                new ObjectParameter("Province", typeof(string));
    
            var salesmanCodeParameter = salesmanCode != null ?
                new ObjectParameter("SalesmanCode", salesmanCode) :
                new ObjectParameter("SalesmanCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MasterConvertData_Insert", provinceParameter, salesmanCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_Address_SSStoCRM_Insert()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_Address_SSStoCRM_Insert");
        }
    
        [DbFunction("DataCenterV1Entities", "func_EmployeeDetailByUserId_Select")]
        public virtual IQueryable<func_EmployeeDetailByUserId_Select_Result> func_EmployeeDetailByUserId_Select(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<func_EmployeeDetailByUserId_Select_Result>("[DataCenterV1Entities].[func_EmployeeDetailByUserId_Select](@UserId)", userIdParameter);
        }
    
        [DbFunction("DataCenterV1Entities", "func_SplitStringToTable")]
        public virtual IQueryable<func_SplitStringToTable_Result> func_SplitStringToTable(string stringToSplit, string delimiter)
        {
            var stringToSplitParameter = stringToSplit != null ?
                new ObjectParameter("StringToSplit", stringToSplit) :
                new ObjectParameter("StringToSplit", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("Delimiter", delimiter) :
                new ObjectParameter("Delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<func_SplitStringToTable_Result>("[DataCenterV1Entities].[func_SplitStringToTable](@StringToSplit, @Delimiter)", stringToSplitParameter, delimiterParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<usp_AspNetRoles_Select_Result> usp_AspNetRoles_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AspNetRoles_Select_Result>("usp_AspNetRoles_Select");
        }
    
        public virtual int usp_AspNetUserRoles_Insert(string userId, string roleId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var roleIdParameter = roleId != null ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AspNetUserRoles_Insert", userIdParameter, roleIdParameter);
        }
    
        public virtual ObjectResult<usp_AspNetUsers_Select_Result> usp_AspNetUsers_Select(string id, string userName)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AspNetUsers_Select_Result>("usp_AspNetUsers_Select", idParameter, userNameParameter);
        }
    
        public virtual int usp_ErrorLog_Insert(Nullable<int> eRROR_NUMBER, Nullable<int> eRROR_SEVERITY, Nullable<int> eRROR_LINE, Nullable<int> eRROR_STATE, string eRROR_PROCEDURE, string eRROR_MESSAGE, ObjectParameter errorLog_ID)
        {
            var eRROR_NUMBERParameter = eRROR_NUMBER.HasValue ?
                new ObjectParameter("ERROR_NUMBER", eRROR_NUMBER) :
                new ObjectParameter("ERROR_NUMBER", typeof(int));
    
            var eRROR_SEVERITYParameter = eRROR_SEVERITY.HasValue ?
                new ObjectParameter("ERROR_SEVERITY", eRROR_SEVERITY) :
                new ObjectParameter("ERROR_SEVERITY", typeof(int));
    
            var eRROR_LINEParameter = eRROR_LINE.HasValue ?
                new ObjectParameter("ERROR_LINE", eRROR_LINE) :
                new ObjectParameter("ERROR_LINE", typeof(int));
    
            var eRROR_STATEParameter = eRROR_STATE.HasValue ?
                new ObjectParameter("ERROR_STATE", eRROR_STATE) :
                new ObjectParameter("ERROR_STATE", typeof(int));
    
            var eRROR_PROCEDUREParameter = eRROR_PROCEDURE != null ?
                new ObjectParameter("ERROR_PROCEDURE", eRROR_PROCEDURE) :
                new ObjectParameter("ERROR_PROCEDURE", typeof(string));
    
            var eRROR_MESSAGEParameter = eRROR_MESSAGE != null ?
                new ObjectParameter("ERROR_MESSAGE", eRROR_MESSAGE) :
                new ObjectParameter("ERROR_MESSAGE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ErrorLog_Insert", eRROR_NUMBERParameter, eRROR_SEVERITYParameter, eRROR_LINEParameter, eRROR_STATEParameter, eRROR_PROCEDUREParameter, eRROR_MESSAGEParameter, errorLog_ID);
        }
    
        public virtual int usp_GenerateCode(string transactionCodeControlTypeDetail, ObjectParameter result)
        {
            var transactionCodeControlTypeDetailParameter = transactionCodeControlTypeDetail != null ?
                new ObjectParameter("TransactionCodeControlTypeDetail", transactionCodeControlTypeDetail) :
                new ObjectParameter("TransactionCodeControlTypeDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GenerateCode", transactionCodeControlTypeDetailParameter, result);
        }
    
        public virtual int usp_GenerateDictionary()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GenerateDictionary");
        }
    
        public virtual ObjectResult<usp_Menu_Datatable_Result> usp_Menu_Datatable(Nullable<int> pageStart, Nullable<int> pageSize, string sortField, string orderType, string search, string projectName)
        {
            var pageStartParameter = pageStart.HasValue ?
                new ObjectParameter("PageStart", pageStart) :
                new ObjectParameter("PageStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var projectNameParameter = projectName != null ?
                new ObjectParameter("ProjectName", projectName) :
                new ObjectParameter("ProjectName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Menu_Datatable_Result>("usp_Menu_Datatable", pageStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchParameter, projectNameParameter);
        }
    
        public virtual ObjectResult<usp_RoleTemplate_Select_Result> usp_RoleTemplate_Select(Nullable<int> roleTemplateId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string search)
        {
            var roleTemplateIdParameter = roleTemplateId.HasValue ?
                new ObjectParameter("RoleTemplateId", roleTemplateId) :
                new ObjectParameter("RoleTemplateId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RoleTemplate_Select_Result>("usp_RoleTemplate_Select", roleTemplateIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchParameter);
        }
    
        public virtual ObjectResult<usp_RoleTemplateXAspNetRoles_Insert_Result> usp_RoleTemplateXAspNetRoles_Insert(string roleTemplate, string aspNetRolesIdList, Nullable<int> createdByUserId)
        {
            var roleTemplateParameter = roleTemplate != null ?
                new ObjectParameter("RoleTemplate", roleTemplate) :
                new ObjectParameter("RoleTemplate", typeof(string));
    
            var aspNetRolesIdListParameter = aspNetRolesIdList != null ?
                new ObjectParameter("AspNetRolesIdList", aspNetRolesIdList) :
                new ObjectParameter("AspNetRolesIdList", typeof(string));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RoleTemplateXAspNetRoles_Insert_Result>("usp_RoleTemplateXAspNetRoles_Insert", roleTemplateParameter, aspNetRolesIdListParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_RoleTemplateXAspNetRoles_Select_Result> usp_RoleTemplateXAspNetRoles_Select(Nullable<int> roleTemplateId)
        {
            var roleTemplateIdParameter = roleTemplateId.HasValue ?
                new ObjectParameter("RoleTemplateId", roleTemplateId) :
                new ObjectParameter("RoleTemplateId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RoleTemplateXAspNetRoles_Select_Result>("usp_RoleTemplateXAspNetRoles_Select", roleTemplateIdParameter);
        }
    
        public virtual ObjectResult<usp_RoleTemplateXAspNetRoles_Update_Result> usp_RoleTemplateXAspNetRoles_Update(Nullable<int> roleTemplateId, string aspNetRolesIdList, Nullable<int> createdByUserId)
        {
            var roleTemplateIdParameter = roleTemplateId.HasValue ?
                new ObjectParameter("RoleTemplateId", roleTemplateId) :
                new ObjectParameter("RoleTemplateId", typeof(int));
    
            var aspNetRolesIdListParameter = aspNetRolesIdList != null ?
                new ObjectParameter("AspNetRolesIdList", aspNetRolesIdList) :
                new ObjectParameter("AspNetRolesIdList", typeof(string));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RoleTemplateXAspNetRoles_Update_Result>("usp_RoleTemplateXAspNetRoles_Update", roleTemplateIdParameter, aspNetRolesIdListParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_UserRole_Insert_Result> usp_UserRole_Insert(Nullable<int> userId, Nullable<int> roleTemplateId, string aspNetRoleList, Nullable<int> createdByUserId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var roleTemplateIdParameter = roleTemplateId.HasValue ?
                new ObjectParameter("RoleTemplateId", roleTemplateId) :
                new ObjectParameter("RoleTemplateId", typeof(int));
    
            var aspNetRoleListParameter = aspNetRoleList != null ?
                new ObjectParameter("AspNetRoleList", aspNetRoleList) :
                new ObjectParameter("AspNetRoleList", typeof(string));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UserRole_Insert_Result>("usp_UserRole_Insert", userIdParameter, roleTemplateIdParameter, aspNetRoleListParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_Employee_Select_Result> usp_Employee_Select(Nullable<int> employeeId, string employeeCode, Nullable<int> teamId, Nullable<int> positionId, Nullable<int> departmentId, Nullable<int> employeeStatusId, Nullable<int> branchId, Nullable<bool> isActive, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string search)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            var teamIdParameter = teamId.HasValue ?
                new ObjectParameter("TeamId", teamId) :
                new ObjectParameter("TeamId", typeof(int));
    
            var positionIdParameter = positionId.HasValue ?
                new ObjectParameter("PositionId", positionId) :
                new ObjectParameter("PositionId", typeof(int));
    
            var departmentIdParameter = departmentId.HasValue ?
                new ObjectParameter("DepartmentId", departmentId) :
                new ObjectParameter("DepartmentId", typeof(int));
    
            var employeeStatusIdParameter = employeeStatusId.HasValue ?
                new ObjectParameter("EmployeeStatusId", employeeStatusId) :
                new ObjectParameter("EmployeeStatusId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Employee_Select_Result>("usp_Employee_Select", employeeIdParameter, employeeCodeParameter, teamIdParameter, positionIdParameter, departmentIdParameter, employeeStatusIdParameter, branchIdParameter, isActiveParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchParameter);
        }
    
        public virtual ObjectResult<usp_Employee_SelectV2_Result> usp_Employee_SelectV2(Nullable<int> employeeId, string employeeCode, Nullable<int> teamId, Nullable<int> positionId, Nullable<int> departmentId, Nullable<int> employeeStatusId, Nullable<int> branchId, Nullable<bool> isActive, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string search)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            var teamIdParameter = teamId.HasValue ?
                new ObjectParameter("TeamId", teamId) :
                new ObjectParameter("TeamId", typeof(int));
    
            var positionIdParameter = positionId.HasValue ?
                new ObjectParameter("PositionId", positionId) :
                new ObjectParameter("PositionId", typeof(int));
    
            var departmentIdParameter = departmentId.HasValue ?
                new ObjectParameter("DepartmentId", departmentId) :
                new ObjectParameter("DepartmentId", typeof(int));
    
            var employeeStatusIdParameter = employeeStatusId.HasValue ?
                new ObjectParameter("EmployeeStatusId", employeeStatusId) :
                new ObjectParameter("EmployeeStatusId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Employee_SelectV2_Result>("usp_Employee_SelectV2", employeeIdParameter, employeeCodeParameter, teamIdParameter, positionIdParameter, departmentIdParameter, employeeStatusIdParameter, branchIdParameter, isActiveParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchParameter);
        }
    
        public virtual ObjectResult<usp_EmployeeCardByEmployeeCode_Select_Result> usp_EmployeeCardByEmployeeCode_Select(string employeeCode)
        {
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_EmployeeCardByEmployeeCode_Select_Result>("usp_EmployeeCardByEmployeeCode_Select", employeeCodeParameter);
        }
    
        public virtual ObjectResult<usp_EmployeeContactByEmployeeCode_Select_Result> usp_EmployeeContactByEmployeeCode_Select(string employeeCode)
        {
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_EmployeeContactByEmployeeCode_Select_Result>("usp_EmployeeContactByEmployeeCode_Select", employeeCodeParameter);
        }
    
        public virtual ObjectResult<usp_SiamSmileCompany_Select_Result> usp_SiamSmileCompany_Select(Nullable<int> siamSmileCompany_ID)
        {
            var siamSmileCompany_IDParameter = siamSmileCompany_ID.HasValue ?
                new ObjectParameter("SiamSmileCompany_ID", siamSmileCompany_ID) :
                new ObjectParameter("SiamSmileCompany_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SiamSmileCompany_Select_Result>("usp_SiamSmileCompany_Select", siamSmileCompany_IDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_UserIDByEmployeeCode_Select(string employeeCode)
        {
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_UserIDByEmployeeCode_Select", employeeCodeParameter);
        }
    
        public virtual ObjectResult<usp_Bank_Select_Result> usp_Bank_Select(Nullable<int> bank_ID)
        {
            var bank_IDParameter = bank_ID.HasValue ?
                new ObjectParameter("Bank_ID", bank_ID) :
                new ObjectParameter("Bank_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Bank_Select_Result>("usp_Bank_Select", bank_IDParameter);
        }
    
        public virtual ObjectResult<usp_BranchXBankAccount_Select_Result> usp_BranchXBankAccount_Select(Nullable<int> branchId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BranchXBankAccount_Select_Result>("usp_BranchXBankAccount_Select", branchIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_FinancialBank_Select_Result> usp_FinancialBank_Select(Nullable<int> bank_ID)
        {
            var bank_IDParameter = bank_ID.HasValue ?
                new ObjectParameter("Bank_ID", bank_ID) :
                new ObjectParameter("Bank_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_FinancialBank_Select_Result>("usp_FinancialBank_Select", bank_IDParameter);
        }
    
        public virtual ObjectResult<usp_PayMethodType_Select_Result> usp_PayMethodType_Select(Nullable<int> payMethodType_ID)
        {
            var payMethodType_IDParameter = payMethodType_ID.HasValue ?
                new ObjectParameter("PayMethodType_ID", payMethodType_ID) :
                new ObjectParameter("PayMethodType_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PayMethodType_Select_Result>("usp_PayMethodType_Select", payMethodType_IDParameter);
        }
    
        public virtual ObjectResult<usp_PeriodType_Select_Result> usp_PeriodType_Select(Nullable<int> periodType_ID)
        {
            var periodType_IDParameter = periodType_ID.HasValue ?
                new ObjectParameter("PeriodType_ID", periodType_ID) :
                new ObjectParameter("PeriodType_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PeriodType_Select_Result>("usp_PeriodType_Select", periodType_IDParameter);
        }
    
        public virtual int usp_Integrate_01_Area()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Integrate_01_Area");
        }
    
        public virtual int usp_Integrate_02_Branch()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Integrate_02_Branch");
        }
    
        public virtual int usp_Integrate_03_Province()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Integrate_03_Province");
        }
    
        public virtual int usp_Integrate_04_District()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Integrate_04_District");
        }
    
        public virtual int usp_Integrate_05_SubDistrict()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Integrate_05_SubDistrict");
        }
    
        public virtual int usp_Integrate_06_1_StudyArea()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Integrate_06_1_StudyArea");
        }
    
        public virtual int usp_Integrate_06_2_BranchStudyArea()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Integrate_06_2_BranchStudyArea");
        }
    
        public virtual int usp_Integrate_06_Department()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Integrate_06_Department");
        }
    
        public virtual int usp_Integrate_07_EmployeePosition()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Integrate_07_EmployeePosition");
        }
    
        public virtual int usp_Integrate_08_EmployeeStatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Integrate_08_EmployeeStatus");
        }
    
        public virtual int usp_Integrate_09_EmployeeTeam()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Integrate_09_EmployeeTeam");
        }
    
        public virtual int usp_Integrate_10_1_InsuranceCompany()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Integrate_10_1_InsuranceCompany");
        }
    
        public virtual int usp_Integrate_10_2_Hospital()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Integrate_10_2_Hospital");
        }
    
        public virtual int usp_Integrate_10_SiamSmileCompany()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Integrate_10_SiamSmileCompany");
        }
    
        public virtual int usp_Integrate_11_MaritalStatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Integrate_11_MaritalStatus");
        }
    
        public virtual int usp_Integrate_12_Title()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Integrate_12_Title");
        }
    
        public virtual int usp_Integrate_13_Bank()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Integrate_13_Bank");
        }
    
        public virtual int usp_Integrate_14_BranchArea()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Integrate_14_BranchArea");
        }
    
        public virtual int usp_Integrate_15_Employee()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Integrate_15_Employee");
        }
    
        public virtual int usp_Integrate_16_UpdateEmployeeAndPerson()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Integrate_16_UpdateEmployeeAndPerson");
        }
    
        public virtual int usp_Integrate_17_ZebraCar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Integrate_17_ZebraCar");
        }
    
        public virtual int usp_Integrate_EmpolyeeSub01_Person_Insert(Nullable<int> personType_ID, Nullable<int> title_ID, string firstName, string lastName, string nickName, Nullable<System.DateTime> birthDate, Nullable<double> weight, Nullable<double> height, Nullable<int> sex_ID, Nullable<int> maritalStatus_ID, Nullable<int> occupationLevel_ID, Nullable<int> createBy_ID, ObjectParameter person_ID)
        {
            var personType_IDParameter = personType_ID.HasValue ?
                new ObjectParameter("PersonType_ID", personType_ID) :
                new ObjectParameter("PersonType_ID", typeof(int));
    
            var title_IDParameter = title_ID.HasValue ?
                new ObjectParameter("Title_ID", title_ID) :
                new ObjectParameter("Title_ID", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var nickNameParameter = nickName != null ?
                new ObjectParameter("NickName", nickName) :
                new ObjectParameter("NickName", typeof(string));
    
            var birthDateParameter = birthDate.HasValue ?
                new ObjectParameter("BirthDate", birthDate) :
                new ObjectParameter("BirthDate", typeof(System.DateTime));
    
            var weightParameter = weight.HasValue ?
                new ObjectParameter("Weight", weight) :
                new ObjectParameter("Weight", typeof(double));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(double));
    
            var sex_IDParameter = sex_ID.HasValue ?
                new ObjectParameter("Sex_ID", sex_ID) :
                new ObjectParameter("Sex_ID", typeof(int));
    
            var maritalStatus_IDParameter = maritalStatus_ID.HasValue ?
                new ObjectParameter("MaritalStatus_ID", maritalStatus_ID) :
                new ObjectParameter("MaritalStatus_ID", typeof(int));
    
            var occupationLevel_IDParameter = occupationLevel_ID.HasValue ?
                new ObjectParameter("OccupationLevel_ID", occupationLevel_ID) :
                new ObjectParameter("OccupationLevel_ID", typeof(int));
    
            var createBy_IDParameter = createBy_ID.HasValue ?
                new ObjectParameter("CreateBy_ID", createBy_ID) :
                new ObjectParameter("CreateBy_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Integrate_EmpolyeeSub01_Person_Insert", personType_IDParameter, title_IDParameter, firstNameParameter, lastNameParameter, nickNameParameter, birthDateParameter, weightParameter, heightParameter, sex_IDParameter, maritalStatus_IDParameter, occupationLevel_IDParameter, createBy_IDParameter, person_ID);
        }
    
        public virtual int usp_Integrate_EmpolyeeSub02_PersonCard_Insert(Nullable<int> personCardType_ID, string personCardDetail, Nullable<int> person_ID, Nullable<int> createBy_ID, ObjectParameter personCard_ID)
        {
            var personCardType_IDParameter = personCardType_ID.HasValue ?
                new ObjectParameter("PersonCardType_ID", personCardType_ID) :
                new ObjectParameter("PersonCardType_ID", typeof(int));
    
            var personCardDetailParameter = personCardDetail != null ?
                new ObjectParameter("PersonCardDetail", personCardDetail) :
                new ObjectParameter("PersonCardDetail", typeof(string));
    
            var person_IDParameter = person_ID.HasValue ?
                new ObjectParameter("Person_ID", person_ID) :
                new ObjectParameter("Person_ID", typeof(int));
    
            var createBy_IDParameter = createBy_ID.HasValue ?
                new ObjectParameter("CreateBy_ID", createBy_ID) :
                new ObjectParameter("CreateBy_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Integrate_EmpolyeeSub02_PersonCard_Insert", personCardType_IDParameter, personCardDetailParameter, person_IDParameter, createBy_IDParameter, personCard_ID);
        }
    
        public virtual int usp_Integrate_EmpolyeeSub03_Contact_Insert(string contactDetail, Nullable<int> contactType_ID, Nullable<int> person_ID, Nullable<int> createBy_ID)
        {
            var contactDetailParameter = contactDetail != null ?
                new ObjectParameter("ContactDetail", contactDetail) :
                new ObjectParameter("ContactDetail", typeof(string));
    
            var contactType_IDParameter = contactType_ID.HasValue ?
                new ObjectParameter("ContactType_ID", contactType_ID) :
                new ObjectParameter("ContactType_ID", typeof(int));
    
            var person_IDParameter = person_ID.HasValue ?
                new ObjectParameter("Person_ID", person_ID) :
                new ObjectParameter("Person_ID", typeof(int));
    
            var createBy_IDParameter = createBy_ID.HasValue ?
                new ObjectParameter("CreateBy_ID", createBy_ID) :
                new ObjectParameter("CreateBy_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Integrate_EmpolyeeSub03_Contact_Insert", contactDetailParameter, contactType_IDParameter, person_IDParameter, createBy_IDParameter);
        }
    
        public virtual int usp_Integrate_EmpolyeeSub04_Address_Insert(string buildingName, string villageName, string no, string moo, string floor, string room, string soi, string road, string subDistrict_ID, Nullable<int> createBy_ID, ObjectParameter returnAddress_ID)
        {
            var buildingNameParameter = buildingName != null ?
                new ObjectParameter("BuildingName", buildingName) :
                new ObjectParameter("BuildingName", typeof(string));
    
            var villageNameParameter = villageName != null ?
                new ObjectParameter("VillageName", villageName) :
                new ObjectParameter("VillageName", typeof(string));
    
            var noParameter = no != null ?
                new ObjectParameter("No", no) :
                new ObjectParameter("No", typeof(string));
    
            var mooParameter = moo != null ?
                new ObjectParameter("Moo", moo) :
                new ObjectParameter("Moo", typeof(string));
    
            var floorParameter = floor != null ?
                new ObjectParameter("Floor", floor) :
                new ObjectParameter("Floor", typeof(string));
    
            var roomParameter = room != null ?
                new ObjectParameter("Room", room) :
                new ObjectParameter("Room", typeof(string));
    
            var soiParameter = soi != null ?
                new ObjectParameter("Soi", soi) :
                new ObjectParameter("Soi", typeof(string));
    
            var roadParameter = road != null ?
                new ObjectParameter("Road", road) :
                new ObjectParameter("Road", typeof(string));
    
            var subDistrict_IDParameter = subDistrict_ID != null ?
                new ObjectParameter("SubDistrict_ID", subDistrict_ID) :
                new ObjectParameter("SubDistrict_ID", typeof(string));
    
            var createBy_IDParameter = createBy_ID.HasValue ?
                new ObjectParameter("CreateBy_ID", createBy_ID) :
                new ObjectParameter("CreateBy_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Integrate_EmpolyeeSub04_Address_Insert", buildingNameParameter, villageNameParameter, noParameter, mooParameter, floorParameter, roomParameter, soiParameter, roadParameter, subDistrict_IDParameter, createBy_IDParameter, returnAddress_ID);
        }
    
        public virtual int usp_Integrate_EmpolyeeSub05_Address_Update(Nullable<int> address_ID, string buildingName, string villageName, string no, string moo, string floor, string room, string soi, string road, string subDistrict_ID, Nullable<int> updateBy_ID)
        {
            var address_IDParameter = address_ID.HasValue ?
                new ObjectParameter("Address_ID", address_ID) :
                new ObjectParameter("Address_ID", typeof(int));
    
            var buildingNameParameter = buildingName != null ?
                new ObjectParameter("BuildingName", buildingName) :
                new ObjectParameter("BuildingName", typeof(string));
    
            var villageNameParameter = villageName != null ?
                new ObjectParameter("VillageName", villageName) :
                new ObjectParameter("VillageName", typeof(string));
    
            var noParameter = no != null ?
                new ObjectParameter("No", no) :
                new ObjectParameter("No", typeof(string));
    
            var mooParameter = moo != null ?
                new ObjectParameter("Moo", moo) :
                new ObjectParameter("Moo", typeof(string));
    
            var floorParameter = floor != null ?
                new ObjectParameter("Floor", floor) :
                new ObjectParameter("Floor", typeof(string));
    
            var roomParameter = room != null ?
                new ObjectParameter("Room", room) :
                new ObjectParameter("Room", typeof(string));
    
            var soiParameter = soi != null ?
                new ObjectParameter("Soi", soi) :
                new ObjectParameter("Soi", typeof(string));
    
            var roadParameter = road != null ?
                new ObjectParameter("Road", road) :
                new ObjectParameter("Road", typeof(string));
    
            var subDistrict_IDParameter = subDistrict_ID != null ?
                new ObjectParameter("SubDistrict_ID", subDistrict_ID) :
                new ObjectParameter("SubDistrict_ID", typeof(string));
    
            var updateBy_IDParameter = updateBy_ID.HasValue ?
                new ObjectParameter("UpdateBy_ID", updateBy_ID) :
                new ObjectParameter("UpdateBy_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Integrate_EmpolyeeSub05_Address_Update", address_IDParameter, buildingNameParameter, villageNameParameter, noParameter, mooParameter, floorParameter, roomParameter, soiParameter, roadParameter, subDistrict_IDParameter, updateBy_IDParameter);
        }
    
        public virtual int usp_Integrate_EmpolyeeSub06_PersonAddress_Insert(Nullable<int> person_ID, Nullable<int> address_ID, Nullable<int> addressType_ID, Nullable<int> createBy_ID)
        {
            var person_IDParameter = person_ID.HasValue ?
                new ObjectParameter("Person_ID", person_ID) :
                new ObjectParameter("Person_ID", typeof(int));
    
            var address_IDParameter = address_ID.HasValue ?
                new ObjectParameter("Address_ID", address_ID) :
                new ObjectParameter("Address_ID", typeof(int));
    
            var addressType_IDParameter = addressType_ID.HasValue ?
                new ObjectParameter("AddressType_ID", addressType_ID) :
                new ObjectParameter("AddressType_ID", typeof(int));
    
            var createBy_IDParameter = createBy_ID.HasValue ?
                new ObjectParameter("CreateBy_ID", createBy_ID) :
                new ObjectParameter("CreateBy_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Integrate_EmpolyeeSub06_PersonAddress_Insert", person_IDParameter, address_IDParameter, addressType_IDParameter, createBy_IDParameter);
        }
    
        public virtual int usp_Integrate_EmpolyeeSub07_PersonBankAccount_Insert(Nullable<int> person_ID, Nullable<int> bank_id, string personBankAccountName, string personBankAccountNo, ObjectParameter returnPersonBankAccount_ID)
        {
            var person_IDParameter = person_ID.HasValue ?
                new ObjectParameter("Person_ID", person_ID) :
                new ObjectParameter("Person_ID", typeof(int));
    
            var bank_idParameter = bank_id.HasValue ?
                new ObjectParameter("Bank_id", bank_id) :
                new ObjectParameter("Bank_id", typeof(int));
    
            var personBankAccountNameParameter = personBankAccountName != null ?
                new ObjectParameter("PersonBankAccountName", personBankAccountName) :
                new ObjectParameter("PersonBankAccountName", typeof(string));
    
            var personBankAccountNoParameter = personBankAccountNo != null ?
                new ObjectParameter("PersonBankAccountNo", personBankAccountNo) :
                new ObjectParameter("PersonBankAccountNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Integrate_EmpolyeeSub07_PersonBankAccount_Insert", person_IDParameter, bank_idParameter, personBankAccountNameParameter, personBankAccountNoParameter, returnPersonBankAccount_ID);
        }
    
        public virtual int usp_Integrate_EmpolyeeSub20_Person(Nullable<int> personType_ID, Nullable<int> title_ID, string firstName, string lastName, string nickName, Nullable<System.DateTime> birthDate, Nullable<double> weight, Nullable<double> height, Nullable<int> sex_ID, Nullable<int> maritalStatus_ID, Nullable<int> occupationLevel_ID, string personCardDetail_identityCard, string personCardDetail_Passport, string personCardDetail_TaxIdentityNumber, string contactDetail_Tel, string contactDetail_Mobile, string buildingName, string villageName, string no, string moo, string floor, string room, string soi, string road, string subDistrict_ID, Nullable<int> createBy_ID, ObjectParameter resultPerson_ID, Nullable<int> bank_ID, string personBankAccountNo, ObjectParameter resultPersonBankAccount_ID)
        {
            var personType_IDParameter = personType_ID.HasValue ?
                new ObjectParameter("PersonType_ID", personType_ID) :
                new ObjectParameter("PersonType_ID", typeof(int));
    
            var title_IDParameter = title_ID.HasValue ?
                new ObjectParameter("Title_ID", title_ID) :
                new ObjectParameter("Title_ID", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var nickNameParameter = nickName != null ?
                new ObjectParameter("NickName", nickName) :
                new ObjectParameter("NickName", typeof(string));
    
            var birthDateParameter = birthDate.HasValue ?
                new ObjectParameter("BirthDate", birthDate) :
                new ObjectParameter("BirthDate", typeof(System.DateTime));
    
            var weightParameter = weight.HasValue ?
                new ObjectParameter("Weight", weight) :
                new ObjectParameter("Weight", typeof(double));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(double));
    
            var sex_IDParameter = sex_ID.HasValue ?
                new ObjectParameter("Sex_ID", sex_ID) :
                new ObjectParameter("Sex_ID", typeof(int));
    
            var maritalStatus_IDParameter = maritalStatus_ID.HasValue ?
                new ObjectParameter("MaritalStatus_ID", maritalStatus_ID) :
                new ObjectParameter("MaritalStatus_ID", typeof(int));
    
            var occupationLevel_IDParameter = occupationLevel_ID.HasValue ?
                new ObjectParameter("OccupationLevel_ID", occupationLevel_ID) :
                new ObjectParameter("OccupationLevel_ID", typeof(int));
    
            var personCardDetail_identityCardParameter = personCardDetail_identityCard != null ?
                new ObjectParameter("PersonCardDetail_identityCard", personCardDetail_identityCard) :
                new ObjectParameter("PersonCardDetail_identityCard", typeof(string));
    
            var personCardDetail_PassportParameter = personCardDetail_Passport != null ?
                new ObjectParameter("PersonCardDetail_Passport", personCardDetail_Passport) :
                new ObjectParameter("PersonCardDetail_Passport", typeof(string));
    
            var personCardDetail_TaxIdentityNumberParameter = personCardDetail_TaxIdentityNumber != null ?
                new ObjectParameter("PersonCardDetail_TaxIdentityNumber", personCardDetail_TaxIdentityNumber) :
                new ObjectParameter("PersonCardDetail_TaxIdentityNumber", typeof(string));
    
            var contactDetail_TelParameter = contactDetail_Tel != null ?
                new ObjectParameter("ContactDetail_Tel", contactDetail_Tel) :
                new ObjectParameter("ContactDetail_Tel", typeof(string));
    
            var contactDetail_MobileParameter = contactDetail_Mobile != null ?
                new ObjectParameter("ContactDetail_Mobile", contactDetail_Mobile) :
                new ObjectParameter("ContactDetail_Mobile", typeof(string));
    
            var buildingNameParameter = buildingName != null ?
                new ObjectParameter("BuildingName", buildingName) :
                new ObjectParameter("BuildingName", typeof(string));
    
            var villageNameParameter = villageName != null ?
                new ObjectParameter("VillageName", villageName) :
                new ObjectParameter("VillageName", typeof(string));
    
            var noParameter = no != null ?
                new ObjectParameter("No", no) :
                new ObjectParameter("No", typeof(string));
    
            var mooParameter = moo != null ?
                new ObjectParameter("Moo", moo) :
                new ObjectParameter("Moo", typeof(string));
    
            var floorParameter = floor != null ?
                new ObjectParameter("Floor", floor) :
                new ObjectParameter("Floor", typeof(string));
    
            var roomParameter = room != null ?
                new ObjectParameter("Room", room) :
                new ObjectParameter("Room", typeof(string));
    
            var soiParameter = soi != null ?
                new ObjectParameter("Soi", soi) :
                new ObjectParameter("Soi", typeof(string));
    
            var roadParameter = road != null ?
                new ObjectParameter("Road", road) :
                new ObjectParameter("Road", typeof(string));
    
            var subDistrict_IDParameter = subDistrict_ID != null ?
                new ObjectParameter("SubDistrict_ID", subDistrict_ID) :
                new ObjectParameter("SubDistrict_ID", typeof(string));
    
            var createBy_IDParameter = createBy_ID.HasValue ?
                new ObjectParameter("CreateBy_ID", createBy_ID) :
                new ObjectParameter("CreateBy_ID", typeof(int));
    
            var bank_IDParameter = bank_ID.HasValue ?
                new ObjectParameter("Bank_ID", bank_ID) :
                new ObjectParameter("Bank_ID", typeof(int));
    
            var personBankAccountNoParameter = personBankAccountNo != null ?
                new ObjectParameter("PersonBankAccountNo", personBankAccountNo) :
                new ObjectParameter("PersonBankAccountNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Integrate_EmpolyeeSub20_Person", personType_IDParameter, title_IDParameter, firstNameParameter, lastNameParameter, nickNameParameter, birthDateParameter, weightParameter, heightParameter, sex_IDParameter, maritalStatus_IDParameter, occupationLevel_IDParameter, personCardDetail_identityCardParameter, personCardDetail_PassportParameter, personCardDetail_TaxIdentityNumberParameter, contactDetail_TelParameter, contactDetail_MobileParameter, buildingNameParameter, villageNameParameter, noParameter, mooParameter, floorParameter, roomParameter, soiParameter, roadParameter, subDistrict_IDParameter, createBy_IDParameter, resultPerson_ID, bank_IDParameter, personBankAccountNoParameter, resultPersonBankAccount_ID);
        }
    
        public virtual int usp_Integrate_EmpolyeeSub21_Employee(string employeeCode, ObjectParameter person_ID, ObjectParameter employee_ID)
        {
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Integrate_EmpolyeeSub21_Employee", employeeCodeParameter, person_ID, employee_ID);
        }
    
        public virtual int usp_Integrate_SSSToDataCenterV1_Daily()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Integrate_SSSToDataCenterV1_Daily");
        }
    
        public virtual ObjectResult<usp_ProjectXMemoType_Select_Result> usp_ProjectXMemoType_Select(Nullable<int> projectId, Nullable<int> memoTypeId, Nullable<int> memoGroupTypeId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(int));
    
            var memoTypeIdParameter = memoTypeId.HasValue ?
                new ObjectParameter("MemoTypeId", memoTypeId) :
                new ObjectParameter("MemoTypeId", typeof(int));
    
            var memoGroupTypeIdParameter = memoGroupTypeId.HasValue ?
                new ObjectParameter("MemoGroupTypeId", memoGroupTypeId) :
                new ObjectParameter("MemoGroupTypeId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProjectXMemoType_Select_Result>("usp_ProjectXMemoType_Select", projectIdParameter, memoTypeIdParameter, memoGroupTypeIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_AddressType_Select_Result> usp_AddressType_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AddressType_Select_Result>("usp_AddressType_Select");
        }
    
        public virtual ObjectResult<usp_AgentProfile_Select_Result> usp_AgentProfile_Select(Nullable<int> branchID, string keyWord, Nullable<int> userID, Nullable<int> pageSize, Nullable<int> pageStart, string sortField, string orderType)
        {
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(int));
    
            var keyWordParameter = keyWord != null ?
                new ObjectParameter("KeyWord", keyWord) :
                new ObjectParameter("KeyWord", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageStartParameter = pageStart.HasValue ?
                new ObjectParameter("PageStart", pageStart) :
                new ObjectParameter("PageStart", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AgentProfile_Select_Result>("usp_AgentProfile_Select", branchIDParameter, keyWordParameter, userIDParameter, pageSizeParameter, pageStartParameter, sortFieldParameter, orderTypeParameter);
        }
    
        public virtual ObjectResult<usp_BloodType_Select_Result> usp_BloodType_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BloodType_Select_Result>("usp_BloodType_Select");
        }
    
        public virtual ObjectResult<usp_CollectSource_Select_Result> usp_CollectSource_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CollectSource_Select_Result>("usp_CollectSource_Select");
        }
    
        public virtual int usp_Employee_Profile_Insert(string pEmpCode, string pMobile, string pEmail, string pFacebook, string pLineID)
        {
            var pEmpCodeParameter = pEmpCode != null ?
                new ObjectParameter("pEmpCode", pEmpCode) :
                new ObjectParameter("pEmpCode", typeof(string));
    
            var pMobileParameter = pMobile != null ?
                new ObjectParameter("pMobile", pMobile) :
                new ObjectParameter("pMobile", typeof(string));
    
            var pEmailParameter = pEmail != null ?
                new ObjectParameter("pEmail", pEmail) :
                new ObjectParameter("pEmail", typeof(string));
    
            var pFacebookParameter = pFacebook != null ?
                new ObjectParameter("pFacebook", pFacebook) :
                new ObjectParameter("pFacebook", typeof(string));
    
            var pLineIDParameter = pLineID != null ?
                new ObjectParameter("pLineID", pLineID) :
                new ObjectParameter("pLineID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Employee_Profile_Insert", pEmpCodeParameter, pMobileParameter, pEmailParameter, pFacebookParameter, pLineIDParameter);
        }
    
        public virtual int usp_Employee_Profile_Update(string pEmpCode, string pMobile, string pEmail, string pFacebook, string pLineID)
        {
            var pEmpCodeParameter = pEmpCode != null ?
                new ObjectParameter("pEmpCode", pEmpCode) :
                new ObjectParameter("pEmpCode", typeof(string));
    
            var pMobileParameter = pMobile != null ?
                new ObjectParameter("pMobile", pMobile) :
                new ObjectParameter("pMobile", typeof(string));
    
            var pEmailParameter = pEmail != null ?
                new ObjectParameter("pEmail", pEmail) :
                new ObjectParameter("pEmail", typeof(string));
    
            var pFacebookParameter = pFacebook != null ?
                new ObjectParameter("pFacebook", pFacebook) :
                new ObjectParameter("pFacebook", typeof(string));
    
            var pLineIDParameter = pLineID != null ?
                new ObjectParameter("pLineID", pLineID) :
                new ObjectParameter("pLineID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Employee_Profile_Update", pEmpCodeParameter, pMobileParameter, pEmailParameter, pFacebookParameter, pLineIDParameter);
        }
    
        public virtual ObjectResult<usp_Employee_Select1_Result> usp_Employee_Select1(string employeeCode)
        {
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Employee_Select1_Result>("usp_Employee_Select1", employeeCodeParameter);
        }
    
        public virtual ObjectResult<usp_EmployeeList_Select_Result> usp_EmployeeList_Select(string keyWord, Nullable<int> userID, Nullable<int> pageSize, Nullable<int> indexStart, string sortField, string orderType)
        {
            var keyWordParameter = keyWord != null ?
                new ObjectParameter("KeyWord", keyWord) :
                new ObjectParameter("KeyWord", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_EmployeeList_Select_Result>("usp_EmployeeList_Select", keyWordParameter, userIDParameter, pageSizeParameter, indexStartParameter, sortFieldParameter, orderTypeParameter);
        }
    
        public virtual ObjectResult<usp_EmployeeProfile_Select_Result> usp_EmployeeProfile_Select(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_EmployeeProfile_Select_Result>("usp_EmployeeProfile_Select", userIDParameter);
        }
    
        public virtual ObjectResult<usp_FinancialBank_Select1_Result> usp_FinancialBank_Select1(Nullable<bool> isSignature, Nullable<bool> isAdditionalCustomer)
        {
            var isSignatureParameter = isSignature.HasValue ?
                new ObjectParameter("IsSignature", isSignature) :
                new ObjectParameter("IsSignature", typeof(bool));
    
            var isAdditionalCustomerParameter = isAdditionalCustomer.HasValue ?
                new ObjectParameter("IsAdditionalCustomer", isAdditionalCustomer) :
                new ObjectParameter("IsAdditionalCustomer", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_FinancialBank_Select1_Result>("usp_FinancialBank_Select1", isSignatureParameter, isAdditionalCustomerParameter);
        }
    
        public virtual ObjectResult<usp_GetBranch_Select_Result> usp_GetBranch_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetBranch_Select_Result>("usp_GetBranch_Select");
        }
    
        public virtual ObjectResult<usp_HospitalDetail_Select_Result> usp_HospitalDetail_Select(string provinceID, string districtID, string subDistrictID, string keyWord, Nullable<int> userId, Nullable<int> pageSize, Nullable<int> indexStart, string sortField, string orderType)
        {
            var provinceIDParameter = provinceID != null ?
                new ObjectParameter("ProvinceID", provinceID) :
                new ObjectParameter("ProvinceID", typeof(string));
    
            var districtIDParameter = districtID != null ?
                new ObjectParameter("DistrictID", districtID) :
                new ObjectParameter("DistrictID", typeof(string));
    
            var subDistrictIDParameter = subDistrictID != null ?
                new ObjectParameter("SubDistrictID", subDistrictID) :
                new ObjectParameter("SubDistrictID", typeof(string));
    
            var keyWordParameter = keyWord != null ?
                new ObjectParameter("KeyWord", keyWord) :
                new ObjectParameter("KeyWord", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HospitalDetail_Select_Result>("usp_HospitalDetail_Select", provinceIDParameter, districtIDParameter, subDistrictIDParameter, keyWordParameter, userIdParameter, pageSizeParameter, indexStartParameter, sortFieldParameter, orderTypeParameter);
        }
    
        public virtual ObjectResult<usp_HospitalDetail_SelectV2_Result> usp_HospitalDetail_SelectV2(string provinceID, string districtID, string subDistrictID, string keyWord, Nullable<int> userId, Nullable<int> pageSize, Nullable<int> indexStart, string sortField, string orderType)
        {
            var provinceIDParameter = provinceID != null ?
                new ObjectParameter("ProvinceID", provinceID) :
                new ObjectParameter("ProvinceID", typeof(string));
    
            var districtIDParameter = districtID != null ?
                new ObjectParameter("DistrictID", districtID) :
                new ObjectParameter("DistrictID", typeof(string));
    
            var subDistrictIDParameter = subDistrictID != null ?
                new ObjectParameter("SubDistrictID", subDistrictID) :
                new ObjectParameter("SubDistrictID", typeof(string));
    
            var keyWordParameter = keyWord != null ?
                new ObjectParameter("KeyWord", keyWord) :
                new ObjectParameter("KeyWord", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HospitalDetail_SelectV2_Result>("usp_HospitalDetail_SelectV2", provinceIDParameter, districtIDParameter, subDistrictIDParameter, keyWordParameter, userIdParameter, pageSizeParameter, indexStartParameter, sortFieldParameter, orderTypeParameter);
        }
    
        public virtual ObjectResult<usp_LocationDetail_Select_Result> usp_LocationDetail_Select(Nullable<int> locationTypeId, string areaCategory, string keyWord, Nullable<int> userId, Nullable<int> pageSize, Nullable<int> indexStart, string sortField, string orderType)
        {
            var locationTypeIdParameter = locationTypeId.HasValue ?
                new ObjectParameter("LocationTypeId", locationTypeId) :
                new ObjectParameter("LocationTypeId", typeof(int));
    
            var areaCategoryParameter = areaCategory != null ?
                new ObjectParameter("AreaCategory", areaCategory) :
                new ObjectParameter("AreaCategory", typeof(string));
    
            var keyWordParameter = keyWord != null ?
                new ObjectParameter("KeyWord", keyWord) :
                new ObjectParameter("KeyWord", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LocationDetail_Select_Result>("usp_LocationDetail_Select", locationTypeIdParameter, areaCategoryParameter, keyWordParameter, userIdParameter, pageSizeParameter, indexStartParameter, sortFieldParameter, orderTypeParameter);
        }
    
        public virtual ObjectResult<usp_MaritalStatus_Select_Result> usp_MaritalStatus_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MaritalStatus_Select_Result>("usp_MaritalStatus_Select");
        }
    
        public virtual ObjectResult<usp_Occupation_Select_Result> usp_Occupation_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Occupation_Select_Result>("usp_Occupation_Select");
        }
    
        public virtual ObjectResult<usp_OccupationLevel_Select_Result> usp_OccupationLevel_Select(string occupationCode)
        {
            var occupationCodeParameter = occupationCode != null ?
                new ObjectParameter("OccupationCode", occupationCode) :
                new ObjectParameter("OccupationCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_OccupationLevel_Select_Result>("usp_OccupationLevel_Select", occupationCodeParameter);
        }
    
        public virtual ObjectResult<usp_PayMethodType_Select1_Result> usp_PayMethodType_Select1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PayMethodType_Select1_Result>("usp_PayMethodType_Select1");
        }
    
        public virtual ObjectResult<usp_PersonRelationType_Select_Result> usp_PersonRelationType_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonRelationType_Select_Result>("usp_PersonRelationType_Select");
        }
    
        public virtual ObjectResult<usp_Product_Select_Result> usp_Product_Select(string productTypeCode)
        {
            var productTypeCodeParameter = productTypeCode != null ?
                new ObjectParameter("ProductTypeCode", productTypeCode) :
                new ObjectParameter("ProductTypeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Product_Select_Result>("usp_Product_Select", productTypeCodeParameter);
        }
    
        public virtual ObjectResult<usp_Sex_Select_Result> usp_Sex_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Sex_Select_Result>("usp_Sex_Select");
        }
    
        public virtual ObjectResult<usp_ZebraCar_Select_Result> usp_ZebraCar_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ZebraCar_Select_Result>("usp_ZebraCar_Select");
        }
    
        public virtual ObjectResult<usp_CollectSource_Select1_Result> usp_CollectSource_Select1(Nullable<int> organize_ID)
        {
            var organize_IDParameter = organize_ID.HasValue ?
                new ObjectParameter("Organize_ID", organize_ID) :
                new ObjectParameter("Organize_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CollectSource_Select1_Result>("usp_CollectSource_Select1", organize_IDParameter);
        }
    
        public virtual ObjectResult<usp_Hospital_Select_Result> usp_Hospital_Select(string keyWord, string provinceID, string districtID, string subDistrictID, Nullable<int> pageSize, Nullable<int> indexStart, string sortField, string orderType)
        {
            var keyWordParameter = keyWord != null ?
                new ObjectParameter("KeyWord", keyWord) :
                new ObjectParameter("KeyWord", typeof(string));
    
            var provinceIDParameter = provinceID != null ?
                new ObjectParameter("ProvinceID", provinceID) :
                new ObjectParameter("ProvinceID", typeof(string));
    
            var districtIDParameter = districtID != null ?
                new ObjectParameter("DistrictID", districtID) :
                new ObjectParameter("DistrictID", typeof(string));
    
            var subDistrictIDParameter = subDistrictID != null ?
                new ObjectParameter("SubDistrictID", subDistrictID) :
                new ObjectParameter("SubDistrictID", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("indexStart", indexStart) :
                new ObjectParameter("indexStart", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Hospital_Select_Result>("usp_Hospital_Select", keyWordParameter, provinceIDParameter, districtIDParameter, subDistrictIDParameter, pageSizeParameter, indexStartParameter, sortFieldParameter, orderTypeParameter);
        }
    
        public virtual ObjectResult<usp_Insurance_Select_Result> usp_Insurance_Select(Nullable<int> insuranceId)
        {
            var insuranceIdParameter = insuranceId.HasValue ?
                new ObjectParameter("InsuranceId", insuranceId) :
                new ObjectParameter("InsuranceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Insurance_Select_Result>("usp_Insurance_Select", insuranceIdParameter);
        }
    
        public virtual ObjectResult<usp_Organize_Select_Result> usp_Organize_Select(Nullable<int> organizeTypeId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string search)
        {
            var organizeTypeIdParameter = organizeTypeId.HasValue ?
                new ObjectParameter("OrganizeTypeId", organizeTypeId) :
                new ObjectParameter("OrganizeTypeId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Organize_Select_Result>("usp_Organize_Select", organizeTypeIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchParameter);
        }
    
        public virtual int usp_Address_ByDT_Insert(Nullable<int> addressType_ID, ObjectParameter returnAddress_ID)
        {
            var addressType_IDParameter = addressType_ID.HasValue ?
                new ObjectParameter("AddressType_ID", addressType_ID) :
                new ObjectParameter("AddressType_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Address_ByDT_Insert", addressType_IDParameter, returnAddress_ID);
        }
    
        public virtual int usp_Address_ByDT_Update(Nullable<int> address_ID, Nullable<int> addressType_ID)
        {
            var address_IDParameter = address_ID.HasValue ?
                new ObjectParameter("Address_ID", address_ID) :
                new ObjectParameter("Address_ID", typeof(int));
    
            var addressType_IDParameter = addressType_ID.HasValue ?
                new ObjectParameter("AddressType_ID", addressType_ID) :
                new ObjectParameter("AddressType_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Address_ByDT_Update", address_IDParameter, addressType_IDParameter);
        }
    
        public virtual int usp_Address_Delete(Nullable<int> address_ID, Nullable<int> deleteBy_ID)
        {
            var address_IDParameter = address_ID.HasValue ?
                new ObjectParameter("Address_ID", address_ID) :
                new ObjectParameter("Address_ID", typeof(int));
    
            var deleteBy_IDParameter = deleteBy_ID.HasValue ?
                new ObjectParameter("DeleteBy_ID", deleteBy_ID) :
                new ObjectParameter("DeleteBy_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Address_Delete", address_IDParameter, deleteBy_IDParameter);
        }
    
        public virtual ObjectResult<usp_Address_Insert_Result> usp_Address_Insert(string buildingName, string villageName, string no, string moo, string floor, string room, string soi, string road, string subDistrict_ID, Nullable<int> createBy_ID, ObjectParameter returnAddress_ID)
        {
            var buildingNameParameter = buildingName != null ?
                new ObjectParameter("BuildingName", buildingName) :
                new ObjectParameter("BuildingName", typeof(string));
    
            var villageNameParameter = villageName != null ?
                new ObjectParameter("VillageName", villageName) :
                new ObjectParameter("VillageName", typeof(string));
    
            var noParameter = no != null ?
                new ObjectParameter("No", no) :
                new ObjectParameter("No", typeof(string));
    
            var mooParameter = moo != null ?
                new ObjectParameter("Moo", moo) :
                new ObjectParameter("Moo", typeof(string));
    
            var floorParameter = floor != null ?
                new ObjectParameter("Floor", floor) :
                new ObjectParameter("Floor", typeof(string));
    
            var roomParameter = room != null ?
                new ObjectParameter("Room", room) :
                new ObjectParameter("Room", typeof(string));
    
            var soiParameter = soi != null ?
                new ObjectParameter("Soi", soi) :
                new ObjectParameter("Soi", typeof(string));
    
            var roadParameter = road != null ?
                new ObjectParameter("Road", road) :
                new ObjectParameter("Road", typeof(string));
    
            var subDistrict_IDParameter = subDistrict_ID != null ?
                new ObjectParameter("SubDistrict_ID", subDistrict_ID) :
                new ObjectParameter("SubDistrict_ID", typeof(string));
    
            var createBy_IDParameter = createBy_ID.HasValue ?
                new ObjectParameter("CreateBy_ID", createBy_ID) :
                new ObjectParameter("CreateBy_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Address_Insert_Result>("usp_Address_Insert", buildingNameParameter, villageNameParameter, noParameter, mooParameter, floorParameter, roomParameter, soiParameter, roadParameter, subDistrict_IDParameter, createBy_IDParameter, returnAddress_ID);
        }
    
        public virtual ObjectResult<usp_Address_Select_Result> usp_Address_Select(Nullable<int> address_ID)
        {
            var address_IDParameter = address_ID.HasValue ?
                new ObjectParameter("Address_ID", address_ID) :
                new ObjectParameter("Address_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Address_Select_Result>("usp_Address_Select", address_IDParameter);
        }
    
        public virtual ObjectResult<usp_Address_Update_Result> usp_Address_Update(Nullable<int> address_ID, string buildingName, string villageName, string no, string moo, string floor, string room, string soi, string road, string subDistrict_ID, Nullable<int> updateBy_ID)
        {
            var address_IDParameter = address_ID.HasValue ?
                new ObjectParameter("Address_ID", address_ID) :
                new ObjectParameter("Address_ID", typeof(int));
    
            var buildingNameParameter = buildingName != null ?
                new ObjectParameter("BuildingName", buildingName) :
                new ObjectParameter("BuildingName", typeof(string));
    
            var villageNameParameter = villageName != null ?
                new ObjectParameter("VillageName", villageName) :
                new ObjectParameter("VillageName", typeof(string));
    
            var noParameter = no != null ?
                new ObjectParameter("No", no) :
                new ObjectParameter("No", typeof(string));
    
            var mooParameter = moo != null ?
                new ObjectParameter("Moo", moo) :
                new ObjectParameter("Moo", typeof(string));
    
            var floorParameter = floor != null ?
                new ObjectParameter("Floor", floor) :
                new ObjectParameter("Floor", typeof(string));
    
            var roomParameter = room != null ?
                new ObjectParameter("Room", room) :
                new ObjectParameter("Room", typeof(string));
    
            var soiParameter = soi != null ?
                new ObjectParameter("Soi", soi) :
                new ObjectParameter("Soi", typeof(string));
    
            var roadParameter = road != null ?
                new ObjectParameter("Road", road) :
                new ObjectParameter("Road", typeof(string));
    
            var subDistrict_IDParameter = subDistrict_ID != null ?
                new ObjectParameter("SubDistrict_ID", subDistrict_ID) :
                new ObjectParameter("SubDistrict_ID", typeof(string));
    
            var updateBy_IDParameter = updateBy_ID.HasValue ?
                new ObjectParameter("UpdateBy_ID", updateBy_ID) :
                new ObjectParameter("UpdateBy_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Address_Update_Result>("usp_Address_Update", address_IDParameter, buildingNameParameter, villageNameParameter, noParameter, mooParameter, floorParameter, roomParameter, soiParameter, roadParameter, subDistrict_IDParameter, updateBy_IDParameter);
        }
    
        public virtual int usp_AddressHistory_Insert(Nullable<int> address_ID, Nullable<int> personTransaction_ID)
        {
            var address_IDParameter = address_ID.HasValue ?
                new ObjectParameter("Address_ID", address_ID) :
                new ObjectParameter("Address_ID", typeof(int));
    
            var personTransaction_IDParameter = personTransaction_ID.HasValue ?
                new ObjectParameter("PersonTransaction_ID", personTransaction_ID) :
                new ObjectParameter("PersonTransaction_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AddressHistory_Insert", address_IDParameter, personTransaction_IDParameter);
        }
    
        public virtual int usp_Application_Corporate_Insert(Nullable<int> title_ID, string firstName, string personCardDetail_TaxIdentityNumber, string contactDetail_Tel, string contactDetail_Mobile, Nullable<int> createBy_ID, ObjectParameter resultPerson_ID)
        {
            var title_IDParameter = title_ID.HasValue ?
                new ObjectParameter("Title_ID", title_ID) :
                new ObjectParameter("Title_ID", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var personCardDetail_TaxIdentityNumberParameter = personCardDetail_TaxIdentityNumber != null ?
                new ObjectParameter("PersonCardDetail_TaxIdentityNumber", personCardDetail_TaxIdentityNumber) :
                new ObjectParameter("PersonCardDetail_TaxIdentityNumber", typeof(string));
    
            var contactDetail_TelParameter = contactDetail_Tel != null ?
                new ObjectParameter("ContactDetail_Tel", contactDetail_Tel) :
                new ObjectParameter("ContactDetail_Tel", typeof(string));
    
            var contactDetail_MobileParameter = contactDetail_Mobile != null ?
                new ObjectParameter("ContactDetail_Mobile", contactDetail_Mobile) :
                new ObjectParameter("ContactDetail_Mobile", typeof(string));
    
            var createBy_IDParameter = createBy_ID.HasValue ?
                new ObjectParameter("CreateBy_ID", createBy_ID) :
                new ObjectParameter("CreateBy_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Application_Corporate_Insert", title_IDParameter, firstNameParameter, personCardDetail_TaxIdentityNumberParameter, contactDetail_TelParameter, contactDetail_MobileParameter, createBy_IDParameter, resultPerson_ID);
        }
    
        public virtual int usp_Application_Corporate_Update(Nullable<int> person_ID, Nullable<int> title_ID, string firstName, string personCardDetail_TaxIdentityNumber, string contactDetail_Tel, string contactDetail_Mobile, Nullable<int> updateBy_ID)
        {
            var person_IDParameter = person_ID.HasValue ?
                new ObjectParameter("Person_ID", person_ID) :
                new ObjectParameter("Person_ID", typeof(int));
    
            var title_IDParameter = title_ID.HasValue ?
                new ObjectParameter("Title_ID", title_ID) :
                new ObjectParameter("Title_ID", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var personCardDetail_TaxIdentityNumberParameter = personCardDetail_TaxIdentityNumber != null ?
                new ObjectParameter("PersonCardDetail_TaxIdentityNumber", personCardDetail_TaxIdentityNumber) :
                new ObjectParameter("PersonCardDetail_TaxIdentityNumber", typeof(string));
    
            var contactDetail_TelParameter = contactDetail_Tel != null ?
                new ObjectParameter("ContactDetail_Tel", contactDetail_Tel) :
                new ObjectParameter("ContactDetail_Tel", typeof(string));
    
            var contactDetail_MobileParameter = contactDetail_Mobile != null ?
                new ObjectParameter("ContactDetail_Mobile", contactDetail_Mobile) :
                new ObjectParameter("ContactDetail_Mobile", typeof(string));
    
            var updateBy_IDParameter = updateBy_ID.HasValue ?
                new ObjectParameter("UpdateBy_ID", updateBy_ID) :
                new ObjectParameter("UpdateBy_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Application_Corporate_Update", person_IDParameter, title_IDParameter, firstNameParameter, personCardDetail_TaxIdentityNumberParameter, contactDetail_TelParameter, contactDetail_MobileParameter, updateBy_IDParameter);
        }
    
        public virtual int usp_Application_Person_Insert(Nullable<int> personType_ID, Nullable<int> title_ID, string firstName, string lastName, string nickName, Nullable<System.DateTime> birthDate, Nullable<double> weight, Nullable<double> height, Nullable<int> sex_ID, Nullable<int> maritalStatus_ID, Nullable<int> occupationLevel_ID, string personCardDetail_identityCard, string personCardDetail_Passport, string personCardDetail_TaxIdentityNumber, string contactDetail_Tel, string contactDetail_Mobile, Nullable<int> createBy_ID, ObjectParameter resultPerson_ID)
        {
            var personType_IDParameter = personType_ID.HasValue ?
                new ObjectParameter("PersonType_ID", personType_ID) :
                new ObjectParameter("PersonType_ID", typeof(int));
    
            var title_IDParameter = title_ID.HasValue ?
                new ObjectParameter("Title_ID", title_ID) :
                new ObjectParameter("Title_ID", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var nickNameParameter = nickName != null ?
                new ObjectParameter("NickName", nickName) :
                new ObjectParameter("NickName", typeof(string));
    
            var birthDateParameter = birthDate.HasValue ?
                new ObjectParameter("BirthDate", birthDate) :
                new ObjectParameter("BirthDate", typeof(System.DateTime));
    
            var weightParameter = weight.HasValue ?
                new ObjectParameter("Weight", weight) :
                new ObjectParameter("Weight", typeof(double));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(double));
    
            var sex_IDParameter = sex_ID.HasValue ?
                new ObjectParameter("Sex_ID", sex_ID) :
                new ObjectParameter("Sex_ID", typeof(int));
    
            var maritalStatus_IDParameter = maritalStatus_ID.HasValue ?
                new ObjectParameter("MaritalStatus_ID", maritalStatus_ID) :
                new ObjectParameter("MaritalStatus_ID", typeof(int));
    
            var occupationLevel_IDParameter = occupationLevel_ID.HasValue ?
                new ObjectParameter("OccupationLevel_ID", occupationLevel_ID) :
                new ObjectParameter("OccupationLevel_ID", typeof(int));
    
            var personCardDetail_identityCardParameter = personCardDetail_identityCard != null ?
                new ObjectParameter("PersonCardDetail_identityCard", personCardDetail_identityCard) :
                new ObjectParameter("PersonCardDetail_identityCard", typeof(string));
    
            var personCardDetail_PassportParameter = personCardDetail_Passport != null ?
                new ObjectParameter("PersonCardDetail_Passport", personCardDetail_Passport) :
                new ObjectParameter("PersonCardDetail_Passport", typeof(string));
    
            var personCardDetail_TaxIdentityNumberParameter = personCardDetail_TaxIdentityNumber != null ?
                new ObjectParameter("PersonCardDetail_TaxIdentityNumber", personCardDetail_TaxIdentityNumber) :
                new ObjectParameter("PersonCardDetail_TaxIdentityNumber", typeof(string));
    
            var contactDetail_TelParameter = contactDetail_Tel != null ?
                new ObjectParameter("ContactDetail_Tel", contactDetail_Tel) :
                new ObjectParameter("ContactDetail_Tel", typeof(string));
    
            var contactDetail_MobileParameter = contactDetail_Mobile != null ?
                new ObjectParameter("ContactDetail_Mobile", contactDetail_Mobile) :
                new ObjectParameter("ContactDetail_Mobile", typeof(string));
    
            var createBy_IDParameter = createBy_ID.HasValue ?
                new ObjectParameter("CreateBy_ID", createBy_ID) :
                new ObjectParameter("CreateBy_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Application_Person_Insert", personType_IDParameter, title_IDParameter, firstNameParameter, lastNameParameter, nickNameParameter, birthDateParameter, weightParameter, heightParameter, sex_IDParameter, maritalStatus_IDParameter, occupationLevel_IDParameter, personCardDetail_identityCardParameter, personCardDetail_PassportParameter, personCardDetail_TaxIdentityNumberParameter, contactDetail_TelParameter, contactDetail_MobileParameter, createBy_IDParameter, resultPerson_ID);
        }
    
        public virtual int usp_Application_Person_Update(Nullable<int> person_ID, Nullable<int> personType_ID, Nullable<int> title_ID, string firstName, string lastName, string nickName, Nullable<System.DateTime> birthDate, Nullable<double> weight, Nullable<double> height, Nullable<int> sex_ID, Nullable<int> maritalStatus_ID, Nullable<int> occupationLevel_ID, string personCardDetail_identityCard, string personCardDetail_Passport, string personCardDetail_TaxIdentityNumber, string contactDetail_Tel, string contactDetail_Mobile, Nullable<int> updateBy_ID)
        {
            var person_IDParameter = person_ID.HasValue ?
                new ObjectParameter("Person_ID", person_ID) :
                new ObjectParameter("Person_ID", typeof(int));
    
            var personType_IDParameter = personType_ID.HasValue ?
                new ObjectParameter("PersonType_ID", personType_ID) :
                new ObjectParameter("PersonType_ID", typeof(int));
    
            var title_IDParameter = title_ID.HasValue ?
                new ObjectParameter("Title_ID", title_ID) :
                new ObjectParameter("Title_ID", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var nickNameParameter = nickName != null ?
                new ObjectParameter("NickName", nickName) :
                new ObjectParameter("NickName", typeof(string));
    
            var birthDateParameter = birthDate.HasValue ?
                new ObjectParameter("BirthDate", birthDate) :
                new ObjectParameter("BirthDate", typeof(System.DateTime));
    
            var weightParameter = weight.HasValue ?
                new ObjectParameter("Weight", weight) :
                new ObjectParameter("Weight", typeof(double));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(double));
    
            var sex_IDParameter = sex_ID.HasValue ?
                new ObjectParameter("Sex_ID", sex_ID) :
                new ObjectParameter("Sex_ID", typeof(int));
    
            var maritalStatus_IDParameter = maritalStatus_ID.HasValue ?
                new ObjectParameter("MaritalStatus_ID", maritalStatus_ID) :
                new ObjectParameter("MaritalStatus_ID", typeof(int));
    
            var occupationLevel_IDParameter = occupationLevel_ID.HasValue ?
                new ObjectParameter("OccupationLevel_ID", occupationLevel_ID) :
                new ObjectParameter("OccupationLevel_ID", typeof(int));
    
            var personCardDetail_identityCardParameter = personCardDetail_identityCard != null ?
                new ObjectParameter("PersonCardDetail_identityCard", personCardDetail_identityCard) :
                new ObjectParameter("PersonCardDetail_identityCard", typeof(string));
    
            var personCardDetail_PassportParameter = personCardDetail_Passport != null ?
                new ObjectParameter("PersonCardDetail_Passport", personCardDetail_Passport) :
                new ObjectParameter("PersonCardDetail_Passport", typeof(string));
    
            var personCardDetail_TaxIdentityNumberParameter = personCardDetail_TaxIdentityNumber != null ?
                new ObjectParameter("PersonCardDetail_TaxIdentityNumber", personCardDetail_TaxIdentityNumber) :
                new ObjectParameter("PersonCardDetail_TaxIdentityNumber", typeof(string));
    
            var contactDetail_TelParameter = contactDetail_Tel != null ?
                new ObjectParameter("ContactDetail_Tel", contactDetail_Tel) :
                new ObjectParameter("ContactDetail_Tel", typeof(string));
    
            var contactDetail_MobileParameter = contactDetail_Mobile != null ?
                new ObjectParameter("ContactDetail_Mobile", contactDetail_Mobile) :
                new ObjectParameter("ContactDetail_Mobile", typeof(string));
    
            var updateBy_IDParameter = updateBy_ID.HasValue ?
                new ObjectParameter("UpdateBy_ID", updateBy_ID) :
                new ObjectParameter("UpdateBy_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Application_Person_Update", person_IDParameter, personType_IDParameter, title_IDParameter, firstNameParameter, lastNameParameter, nickNameParameter, birthDateParameter, weightParameter, heightParameter, sex_IDParameter, maritalStatus_IDParameter, occupationLevel_IDParameter, personCardDetail_identityCardParameter, personCardDetail_PassportParameter, personCardDetail_TaxIdentityNumberParameter, contactDetail_TelParameter, contactDetail_MobileParameter, updateBy_IDParameter);
        }
    
        public virtual ObjectResult<usp_Contact_Insert_Result> usp_Contact_Insert(string contactDetail, Nullable<int> contactType_ID, Nullable<int> person_ID, Nullable<int> createBy_ID)
        {
            var contactDetailParameter = contactDetail != null ?
                new ObjectParameter("ContactDetail", contactDetail) :
                new ObjectParameter("ContactDetail", typeof(string));
    
            var contactType_IDParameter = contactType_ID.HasValue ?
                new ObjectParameter("ContactType_ID", contactType_ID) :
                new ObjectParameter("ContactType_ID", typeof(int));
    
            var person_IDParameter = person_ID.HasValue ?
                new ObjectParameter("Person_ID", person_ID) :
                new ObjectParameter("Person_ID", typeof(int));
    
            var createBy_IDParameter = createBy_ID.HasValue ?
                new ObjectParameter("CreateBy_ID", createBy_ID) :
                new ObjectParameter("CreateBy_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Contact_Insert_Result>("usp_Contact_Insert", contactDetailParameter, contactType_IDParameter, person_IDParameter, createBy_IDParameter);
        }
    
        public virtual ObjectResult<usp_Contact_Update_Result> usp_Contact_Update(Nullable<int> contact_ID, string contactDetail, Nullable<int> contactType_ID, Nullable<int> person_ID, Nullable<int> updateBy_ID)
        {
            var contact_IDParameter = contact_ID.HasValue ?
                new ObjectParameter("Contact_ID", contact_ID) :
                new ObjectParameter("Contact_ID", typeof(int));
    
            var contactDetailParameter = contactDetail != null ?
                new ObjectParameter("ContactDetail", contactDetail) :
                new ObjectParameter("ContactDetail", typeof(string));
    
            var contactType_IDParameter = contactType_ID.HasValue ?
                new ObjectParameter("ContactType_ID", contactType_ID) :
                new ObjectParameter("ContactType_ID", typeof(int));
    
            var person_IDParameter = person_ID.HasValue ?
                new ObjectParameter("Person_ID", person_ID) :
                new ObjectParameter("Person_ID", typeof(int));
    
            var updateBy_IDParameter = updateBy_ID.HasValue ?
                new ObjectParameter("UpdateBy_ID", updateBy_ID) :
                new ObjectParameter("UpdateBy_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Contact_Update_Result>("usp_Contact_Update", contact_IDParameter, contactDetailParameter, contactType_IDParameter, person_IDParameter, updateBy_IDParameter);
        }
    
        public virtual ObjectResult<usp_Employee_ByBranch_Select_Result> usp_Employee_ByBranch_Select(Nullable<int> branch_ID)
        {
            var branch_IDParameter = branch_ID.HasValue ?
                new ObjectParameter("Branch_ID", branch_ID) :
                new ObjectParameter("Branch_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Employee_ByBranch_Select_Result>("usp_Employee_ByBranch_Select", branch_IDParameter);
        }
    
        public virtual ObjectResult<usp_Employee_Select2_Result> usp_Employee_Select2(Nullable<int> employee_ID)
        {
            var employee_IDParameter = employee_ID.HasValue ?
                new ObjectParameter("Employee_ID", employee_ID) :
                new ObjectParameter("Employee_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Employee_Select2_Result>("usp_Employee_Select2", employee_IDParameter);
        }
    
        public virtual ObjectResult<usp_EmployeeByEmployeeCode_Select_Result> usp_EmployeeByEmployeeCode_Select(string employeeCode)
        {
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_EmployeeByEmployeeCode_Select_Result>("usp_EmployeeByEmployeeCode_Select", employeeCodeParameter);
        }
    
        public virtual ObjectResult<usp_EmployeeSearch_Select_Result> usp_EmployeeSearch_Select(string criteria)
        {
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_EmployeeSearch_Select_Result>("usp_EmployeeSearch_Select", criteriaParameter);
        }
    
        public virtual ObjectResult<usp_ForImport_00_Person_Result> usp_ForImport_00_Person(Nullable<int> personType_ID, Nullable<int> title_ID, string firstName, string lastName, string nickName, Nullable<System.DateTime> birthDate, Nullable<double> weight, Nullable<double> height, Nullable<int> sex_ID, Nullable<int> maritalStatus_ID, Nullable<int> occupationLevel_ID, string personCardDetail_identityCard, string personCardDetail_Passport, string personCardDetail_TaxIdentityNumber, string contactDetail_Tel, string contactDetail_Mobile, string buildingName, string villageName, string no, string moo, string floor, string room, string soi, string road, string subDistrict_ID, Nullable<int> createBy_ID, ObjectParameter resultPerson_ID, Nullable<int> bank_ID, string personBankAccountNo, ObjectParameter resultPersonBankAccount_ID)
        {
            var personType_IDParameter = personType_ID.HasValue ?
                new ObjectParameter("PersonType_ID", personType_ID) :
                new ObjectParameter("PersonType_ID", typeof(int));
    
            var title_IDParameter = title_ID.HasValue ?
                new ObjectParameter("Title_ID", title_ID) :
                new ObjectParameter("Title_ID", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var nickNameParameter = nickName != null ?
                new ObjectParameter("NickName", nickName) :
                new ObjectParameter("NickName", typeof(string));
    
            var birthDateParameter = birthDate.HasValue ?
                new ObjectParameter("BirthDate", birthDate) :
                new ObjectParameter("BirthDate", typeof(System.DateTime));
    
            var weightParameter = weight.HasValue ?
                new ObjectParameter("Weight", weight) :
                new ObjectParameter("Weight", typeof(double));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(double));
    
            var sex_IDParameter = sex_ID.HasValue ?
                new ObjectParameter("Sex_ID", sex_ID) :
                new ObjectParameter("Sex_ID", typeof(int));
    
            var maritalStatus_IDParameter = maritalStatus_ID.HasValue ?
                new ObjectParameter("MaritalStatus_ID", maritalStatus_ID) :
                new ObjectParameter("MaritalStatus_ID", typeof(int));
    
            var occupationLevel_IDParameter = occupationLevel_ID.HasValue ?
                new ObjectParameter("OccupationLevel_ID", occupationLevel_ID) :
                new ObjectParameter("OccupationLevel_ID", typeof(int));
    
            var personCardDetail_identityCardParameter = personCardDetail_identityCard != null ?
                new ObjectParameter("PersonCardDetail_identityCard", personCardDetail_identityCard) :
                new ObjectParameter("PersonCardDetail_identityCard", typeof(string));
    
            var personCardDetail_PassportParameter = personCardDetail_Passport != null ?
                new ObjectParameter("PersonCardDetail_Passport", personCardDetail_Passport) :
                new ObjectParameter("PersonCardDetail_Passport", typeof(string));
    
            var personCardDetail_TaxIdentityNumberParameter = personCardDetail_TaxIdentityNumber != null ?
                new ObjectParameter("PersonCardDetail_TaxIdentityNumber", personCardDetail_TaxIdentityNumber) :
                new ObjectParameter("PersonCardDetail_TaxIdentityNumber", typeof(string));
    
            var contactDetail_TelParameter = contactDetail_Tel != null ?
                new ObjectParameter("ContactDetail_Tel", contactDetail_Tel) :
                new ObjectParameter("ContactDetail_Tel", typeof(string));
    
            var contactDetail_MobileParameter = contactDetail_Mobile != null ?
                new ObjectParameter("ContactDetail_Mobile", contactDetail_Mobile) :
                new ObjectParameter("ContactDetail_Mobile", typeof(string));
    
            var buildingNameParameter = buildingName != null ?
                new ObjectParameter("BuildingName", buildingName) :
                new ObjectParameter("BuildingName", typeof(string));
    
            var villageNameParameter = villageName != null ?
                new ObjectParameter("VillageName", villageName) :
                new ObjectParameter("VillageName", typeof(string));
    
            var noParameter = no != null ?
                new ObjectParameter("No", no) :
                new ObjectParameter("No", typeof(string));
    
            var mooParameter = moo != null ?
                new ObjectParameter("Moo", moo) :
                new ObjectParameter("Moo", typeof(string));
    
            var floorParameter = floor != null ?
                new ObjectParameter("Floor", floor) :
                new ObjectParameter("Floor", typeof(string));
    
            var roomParameter = room != null ?
                new ObjectParameter("Room", room) :
                new ObjectParameter("Room", typeof(string));
    
            var soiParameter = soi != null ?
                new ObjectParameter("Soi", soi) :
                new ObjectParameter("Soi", typeof(string));
    
            var roadParameter = road != null ?
                new ObjectParameter("Road", road) :
                new ObjectParameter("Road", typeof(string));
    
            var subDistrict_IDParameter = subDistrict_ID != null ?
                new ObjectParameter("SubDistrict_ID", subDistrict_ID) :
                new ObjectParameter("SubDistrict_ID", typeof(string));
    
            var createBy_IDParameter = createBy_ID.HasValue ?
                new ObjectParameter("CreateBy_ID", createBy_ID) :
                new ObjectParameter("CreateBy_ID", typeof(int));
    
            var bank_IDParameter = bank_ID.HasValue ?
                new ObjectParameter("Bank_ID", bank_ID) :
                new ObjectParameter("Bank_ID", typeof(int));
    
            var personBankAccountNoParameter = personBankAccountNo != null ?
                new ObjectParameter("PersonBankAccountNo", personBankAccountNo) :
                new ObjectParameter("PersonBankAccountNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ForImport_00_Person_Result>("usp_ForImport_00_Person", personType_IDParameter, title_IDParameter, firstNameParameter, lastNameParameter, nickNameParameter, birthDateParameter, weightParameter, heightParameter, sex_IDParameter, maritalStatus_IDParameter, occupationLevel_IDParameter, personCardDetail_identityCardParameter, personCardDetail_PassportParameter, personCardDetail_TaxIdentityNumberParameter, contactDetail_TelParameter, contactDetail_MobileParameter, buildingNameParameter, villageNameParameter, noParameter, mooParameter, floorParameter, roomParameter, soiParameter, roadParameter, subDistrict_IDParameter, createBy_IDParameter, resultPerson_ID, bank_IDParameter, personBankAccountNoParameter, resultPersonBankAccount_ID);
        }
    
        public virtual ObjectResult<usp_ForImport_01_Employee_Result> usp_ForImport_01_Employee(string employeeCode, ObjectParameter person_ID, ObjectParameter employee_ID)
        {
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ForImport_01_Employee_Result>("usp_ForImport_01_Employee", employeeCodeParameter, person_ID, employee_ID);
        }
    
        public virtual ObjectResult<usp_ForImport_02_PersonImport_Result> usp_ForImport_02_PersonImport(Nullable<int> running, ObjectParameter person_ID, ObjectParameter personAccount_ID)
        {
            var runningParameter = running.HasValue ?
                new ObjectParameter("running", running) :
                new ObjectParameter("running", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ForImport_02_PersonImport_Result>("usp_ForImport_02_PersonImport", runningParameter, person_ID, personAccount_ID);
        }
    
        public virtual int usp_ForImport_03_PersonBankAccount(Nullable<int> person_ID, Nullable<int> bank_id, string personBankAccountName, string personBankAccountNo, ObjectParameter returnPersonBankAccount_ID)
        {
            var person_IDParameter = person_ID.HasValue ?
                new ObjectParameter("Person_ID", person_ID) :
                new ObjectParameter("Person_ID", typeof(int));
    
            var bank_idParameter = bank_id.HasValue ?
                new ObjectParameter("Bank_id", bank_id) :
                new ObjectParameter("Bank_id", typeof(int));
    
            var personBankAccountNameParameter = personBankAccountName != null ?
                new ObjectParameter("PersonBankAccountName", personBankAccountName) :
                new ObjectParameter("PersonBankAccountName", typeof(string));
    
            var personBankAccountNoParameter = personBankAccountNo != null ?
                new ObjectParameter("PersonBankAccountNo", personBankAccountNo) :
                new ObjectParameter("PersonBankAccountNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ForImport_03_PersonBankAccount", person_IDParameter, bank_idParameter, personBankAccountNameParameter, personBankAccountNoParameter, returnPersonBankAccount_ID);
        }
    
        public virtual int usp_ForImport_10_OrganizeBankAccount(Nullable<int> organize_ID, Nullable<int> bank_id, string organizeBankAccountName, string organizeBankAccountNO, ObjectParameter returnOrganizeBankAccount_ID)
        {
            var organize_IDParameter = organize_ID.HasValue ?
                new ObjectParameter("Organize_ID", organize_ID) :
                new ObjectParameter("Organize_ID", typeof(int));
    
            var bank_idParameter = bank_id.HasValue ?
                new ObjectParameter("Bank_id", bank_id) :
                new ObjectParameter("Bank_id", typeof(int));
    
            var organizeBankAccountNameParameter = organizeBankAccountName != null ?
                new ObjectParameter("OrganizeBankAccountName", organizeBankAccountName) :
                new ObjectParameter("OrganizeBankAccountName", typeof(string));
    
            var organizeBankAccountNOParameter = organizeBankAccountNO != null ?
                new ObjectParameter("OrganizeBankAccountNO", organizeBankAccountNO) :
                new ObjectParameter("OrganizeBankAccountNO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ForImport_10_OrganizeBankAccount", organize_IDParameter, bank_idParameter, organizeBankAccountNameParameter, organizeBankAccountNOParameter, returnOrganizeBankAccount_ID);
        }
    
        public virtual int usp_ForImport_13_Organize(Nullable<int> insertRow, string companyGroup_ID)
        {
            var insertRowParameter = insertRow.HasValue ?
                new ObjectParameter("InsertRow", insertRow) :
                new ObjectParameter("InsertRow", typeof(int));
    
            var companyGroup_IDParameter = companyGroup_ID != null ?
                new ObjectParameter("CompanyGroup_ID", companyGroup_ID) :
                new ObjectParameter("CompanyGroup_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ForImport_13_Organize", insertRowParameter, companyGroup_IDParameter);
        }
    
        public virtual int usp_ForImport_21_ImportOrganize(Nullable<int> insertRow, string companyGroup_ID)
        {
            var insertRowParameter = insertRow.HasValue ?
                new ObjectParameter("InsertRow", insertRow) :
                new ObjectParameter("InsertRow", typeof(int));
    
            var companyGroup_IDParameter = companyGroup_ID != null ?
                new ObjectParameter("CompanyGroup_ID", companyGroup_ID) :
                new ObjectParameter("CompanyGroup_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ForImport_21_ImportOrganize", insertRowParameter, companyGroup_IDParameter);
        }
    
        public virtual ObjectResult<usp_ForImport_22_ImportEmployee_Result> usp_ForImport_22_ImportEmployee(Nullable<int> insertRow)
        {
            var insertRowParameter = insertRow.HasValue ?
                new ObjectParameter("InsertRow", insertRow) :
                new ObjectParameter("InsertRow", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ForImport_22_ImportEmployee_Result>("usp_ForImport_22_ImportEmployee", insertRowParameter);
        }
    
        public virtual ObjectResult<usp_ForImport_23_ImportPerson_Result> usp_ForImport_23_ImportPerson(Nullable<int> insertRow)
        {
            var insertRowParameter = insertRow.HasValue ?
                new ObjectParameter("InsertRow", insertRow) :
                new ObjectParameter("InsertRow", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ForImport_23_ImportPerson_Result>("usp_ForImport_23_ImportPerson", insertRowParameter);
        }
    
        public virtual ObjectResult<usp_MaritalStatus_Select1_Result> usp_MaritalStatus_Select1(Nullable<int> maritalStatus_ID)
        {
            var maritalStatus_IDParameter = maritalStatus_ID.HasValue ?
                new ObjectParameter("MaritalStatus_ID", maritalStatus_ID) :
                new ObjectParameter("MaritalStatus_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MaritalStatus_Select1_Result>("usp_MaritalStatus_Select1", maritalStatus_IDParameter);
        }
    
        public virtual ObjectResult<usp_Occupation_Select1_Result> usp_Occupation_Select1(Nullable<int> occupation_ID)
        {
            var occupation_IDParameter = occupation_ID.HasValue ?
                new ObjectParameter("Occupation_ID", occupation_ID) :
                new ObjectParameter("Occupation_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Occupation_Select1_Result>("usp_Occupation_Select1", occupation_IDParameter);
        }
    
        public virtual ObjectResult<usp_OccupationLevel_ByOccupationID_Select_Result> usp_OccupationLevel_ByOccupationID_Select(Nullable<int> occupation_ID)
        {
            var occupation_IDParameter = occupation_ID.HasValue ?
                new ObjectParameter("Occupation_ID", occupation_ID) :
                new ObjectParameter("Occupation_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_OccupationLevel_ByOccupationID_Select_Result>("usp_OccupationLevel_ByOccupationID_Select", occupation_IDParameter);
        }
    
        public virtual ObjectResult<usp_OccupationLevel_Select1_Result> usp_OccupationLevel_Select1(Nullable<int> occupationLevel_ID)
        {
            var occupationLevel_IDParameter = occupationLevel_ID.HasValue ?
                new ObjectParameter("OccupationLevel_ID", occupationLevel_ID) :
                new ObjectParameter("OccupationLevel_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_OccupationLevel_Select1_Result>("usp_OccupationLevel_Select1", occupationLevel_IDParameter);
        }
    
        public virtual ObjectResult<usp_OrganizePerson_Insert_Result> usp_OrganizePerson_Insert(Nullable<int> title_ID, string firstName, string lastName, string nickName, Nullable<System.DateTime> birthDate, Nullable<double> weight, Nullable<double> height, Nullable<int> sex_ID, Nullable<int> maritalStatus_ID, Nullable<int> occupationLevel_ID, string personCardDetail_identityCard, string personCardDetail_Passport, string personCardDetail_TaxIdentityNumber, string contactDetail_Tel, string contactDetail_Mobile, string buildingName, string villageName, string no, string moo, string floor, string room, string soi, string road, string subDistrict_ID, string zipCode, Nullable<int> organizeId, Nullable<int> createdByUserId, ObjectParameter resultPerson_ID)
        {
            var title_IDParameter = title_ID.HasValue ?
                new ObjectParameter("Title_ID", title_ID) :
                new ObjectParameter("Title_ID", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var nickNameParameter = nickName != null ?
                new ObjectParameter("NickName", nickName) :
                new ObjectParameter("NickName", typeof(string));
    
            var birthDateParameter = birthDate.HasValue ?
                new ObjectParameter("BirthDate", birthDate) :
                new ObjectParameter("BirthDate", typeof(System.DateTime));
    
            var weightParameter = weight.HasValue ?
                new ObjectParameter("Weight", weight) :
                new ObjectParameter("Weight", typeof(double));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(double));
    
            var sex_IDParameter = sex_ID.HasValue ?
                new ObjectParameter("Sex_ID", sex_ID) :
                new ObjectParameter("Sex_ID", typeof(int));
    
            var maritalStatus_IDParameter = maritalStatus_ID.HasValue ?
                new ObjectParameter("MaritalStatus_ID", maritalStatus_ID) :
                new ObjectParameter("MaritalStatus_ID", typeof(int));
    
            var occupationLevel_IDParameter = occupationLevel_ID.HasValue ?
                new ObjectParameter("OccupationLevel_ID", occupationLevel_ID) :
                new ObjectParameter("OccupationLevel_ID", typeof(int));
    
            var personCardDetail_identityCardParameter = personCardDetail_identityCard != null ?
                new ObjectParameter("PersonCardDetail_identityCard", personCardDetail_identityCard) :
                new ObjectParameter("PersonCardDetail_identityCard", typeof(string));
    
            var personCardDetail_PassportParameter = personCardDetail_Passport != null ?
                new ObjectParameter("PersonCardDetail_Passport", personCardDetail_Passport) :
                new ObjectParameter("PersonCardDetail_Passport", typeof(string));
    
            var personCardDetail_TaxIdentityNumberParameter = personCardDetail_TaxIdentityNumber != null ?
                new ObjectParameter("PersonCardDetail_TaxIdentityNumber", personCardDetail_TaxIdentityNumber) :
                new ObjectParameter("PersonCardDetail_TaxIdentityNumber", typeof(string));
    
            var contactDetail_TelParameter = contactDetail_Tel != null ?
                new ObjectParameter("ContactDetail_Tel", contactDetail_Tel) :
                new ObjectParameter("ContactDetail_Tel", typeof(string));
    
            var contactDetail_MobileParameter = contactDetail_Mobile != null ?
                new ObjectParameter("ContactDetail_Mobile", contactDetail_Mobile) :
                new ObjectParameter("ContactDetail_Mobile", typeof(string));
    
            var buildingNameParameter = buildingName != null ?
                new ObjectParameter("BuildingName", buildingName) :
                new ObjectParameter("BuildingName", typeof(string));
    
            var villageNameParameter = villageName != null ?
                new ObjectParameter("VillageName", villageName) :
                new ObjectParameter("VillageName", typeof(string));
    
            var noParameter = no != null ?
                new ObjectParameter("No", no) :
                new ObjectParameter("No", typeof(string));
    
            var mooParameter = moo != null ?
                new ObjectParameter("Moo", moo) :
                new ObjectParameter("Moo", typeof(string));
    
            var floorParameter = floor != null ?
                new ObjectParameter("Floor", floor) :
                new ObjectParameter("Floor", typeof(string));
    
            var roomParameter = room != null ?
                new ObjectParameter("Room", room) :
                new ObjectParameter("Room", typeof(string));
    
            var soiParameter = soi != null ?
                new ObjectParameter("Soi", soi) :
                new ObjectParameter("Soi", typeof(string));
    
            var roadParameter = road != null ?
                new ObjectParameter("Road", road) :
                new ObjectParameter("Road", typeof(string));
    
            var subDistrict_IDParameter = subDistrict_ID != null ?
                new ObjectParameter("SubDistrict_ID", subDistrict_ID) :
                new ObjectParameter("SubDistrict_ID", typeof(string));
    
            var zipCodeParameter = zipCode != null ?
                new ObjectParameter("ZipCode", zipCode) :
                new ObjectParameter("ZipCode", typeof(string));
    
            var organizeIdParameter = organizeId.HasValue ?
                new ObjectParameter("OrganizeId", organizeId) :
                new ObjectParameter("OrganizeId", typeof(int));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_OrganizePerson_Insert_Result>("usp_OrganizePerson_Insert", title_IDParameter, firstNameParameter, lastNameParameter, nickNameParameter, birthDateParameter, weightParameter, heightParameter, sex_IDParameter, maritalStatus_IDParameter, occupationLevel_IDParameter, personCardDetail_identityCardParameter, personCardDetail_PassportParameter, personCardDetail_TaxIdentityNumberParameter, contactDetail_TelParameter, contactDetail_MobileParameter, buildingNameParameter, villageNameParameter, noParameter, mooParameter, floorParameter, roomParameter, soiParameter, roadParameter, subDistrict_IDParameter, zipCodeParameter, organizeIdParameter, createdByUserIdParameter, resultPerson_ID);
        }
    
        public virtual ObjectResult<usp_Person_Insert_Result> usp_Person_Insert(Nullable<int> personType_ID, Nullable<int> title_ID, string firstName, string lastName, string nickName, Nullable<System.DateTime> birthDate, Nullable<double> weight, Nullable<double> height, Nullable<int> sex_ID, Nullable<int> maritalStatus_ID, Nullable<int> occupationLevel_ID, Nullable<int> createBy_ID, ObjectParameter person_ID)
        {
            var personType_IDParameter = personType_ID.HasValue ?
                new ObjectParameter("PersonType_ID", personType_ID) :
                new ObjectParameter("PersonType_ID", typeof(int));
    
            var title_IDParameter = title_ID.HasValue ?
                new ObjectParameter("Title_ID", title_ID) :
                new ObjectParameter("Title_ID", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var nickNameParameter = nickName != null ?
                new ObjectParameter("NickName", nickName) :
                new ObjectParameter("NickName", typeof(string));
    
            var birthDateParameter = birthDate.HasValue ?
                new ObjectParameter("BirthDate", birthDate) :
                new ObjectParameter("BirthDate", typeof(System.DateTime));
    
            var weightParameter = weight.HasValue ?
                new ObjectParameter("Weight", weight) :
                new ObjectParameter("Weight", typeof(double));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(double));
    
            var sex_IDParameter = sex_ID.HasValue ?
                new ObjectParameter("Sex_ID", sex_ID) :
                new ObjectParameter("Sex_ID", typeof(int));
    
            var maritalStatus_IDParameter = maritalStatus_ID.HasValue ?
                new ObjectParameter("MaritalStatus_ID", maritalStatus_ID) :
                new ObjectParameter("MaritalStatus_ID", typeof(int));
    
            var occupationLevel_IDParameter = occupationLevel_ID.HasValue ?
                new ObjectParameter("OccupationLevel_ID", occupationLevel_ID) :
                new ObjectParameter("OccupationLevel_ID", typeof(int));
    
            var createBy_IDParameter = createBy_ID.HasValue ?
                new ObjectParameter("CreateBy_ID", createBy_ID) :
                new ObjectParameter("CreateBy_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Person_Insert_Result>("usp_Person_Insert", personType_IDParameter, title_IDParameter, firstNameParameter, lastNameParameter, nickNameParameter, birthDateParameter, weightParameter, heightParameter, sex_IDParameter, maritalStatus_IDParameter, occupationLevel_IDParameter, createBy_IDParameter, person_ID);
        }
    
        public virtual ObjectResult<usp_Person_Select_Result> usp_Person_Select(Nullable<int> person_ID)
        {
            var person_IDParameter = person_ID.HasValue ?
                new ObjectParameter("Person_ID", person_ID) :
                new ObjectParameter("Person_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Person_Select_Result>("usp_Person_Select", person_IDParameter);
        }
    
        public virtual ObjectResult<usp_Person_Update_Result> usp_Person_Update(Nullable<int> person_ID, Nullable<int> personType_ID, Nullable<int> title_ID, string firstName, string lastName, string nickName, Nullable<System.DateTime> birthDate, Nullable<double> weight, Nullable<double> height, Nullable<int> sex_ID, Nullable<int> maritalStatus_ID, Nullable<int> occupationLevel_ID, Nullable<int> createBy_ID)
        {
            var person_IDParameter = person_ID.HasValue ?
                new ObjectParameter("Person_ID", person_ID) :
                new ObjectParameter("Person_ID", typeof(int));
    
            var personType_IDParameter = personType_ID.HasValue ?
                new ObjectParameter("PersonType_ID", personType_ID) :
                new ObjectParameter("PersonType_ID", typeof(int));
    
            var title_IDParameter = title_ID.HasValue ?
                new ObjectParameter("Title_ID", title_ID) :
                new ObjectParameter("Title_ID", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var nickNameParameter = nickName != null ?
                new ObjectParameter("NickName", nickName) :
                new ObjectParameter("NickName", typeof(string));
    
            var birthDateParameter = birthDate.HasValue ?
                new ObjectParameter("BirthDate", birthDate) :
                new ObjectParameter("BirthDate", typeof(System.DateTime));
    
            var weightParameter = weight.HasValue ?
                new ObjectParameter("Weight", weight) :
                new ObjectParameter("Weight", typeof(double));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(double));
    
            var sex_IDParameter = sex_ID.HasValue ?
                new ObjectParameter("Sex_ID", sex_ID) :
                new ObjectParameter("Sex_ID", typeof(int));
    
            var maritalStatus_IDParameter = maritalStatus_ID.HasValue ?
                new ObjectParameter("MaritalStatus_ID", maritalStatus_ID) :
                new ObjectParameter("MaritalStatus_ID", typeof(int));
    
            var occupationLevel_IDParameter = occupationLevel_ID.HasValue ?
                new ObjectParameter("OccupationLevel_ID", occupationLevel_ID) :
                new ObjectParameter("OccupationLevel_ID", typeof(int));
    
            var createBy_IDParameter = createBy_ID.HasValue ?
                new ObjectParameter("CreateBy_ID", createBy_ID) :
                new ObjectParameter("CreateBy_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Person_Update_Result>("usp_Person_Update", person_IDParameter, personType_IDParameter, title_IDParameter, firstNameParameter, lastNameParameter, nickNameParameter, birthDateParameter, weightParameter, heightParameter, sex_IDParameter, maritalStatus_IDParameter, occupationLevel_IDParameter, createBy_IDParameter);
        }
    
        public virtual int usp_PersonAddress_Delete(Nullable<int> personAddress_ID, Nullable<int> deleteBy_ID)
        {
            var personAddress_IDParameter = personAddress_ID.HasValue ?
                new ObjectParameter("PersonAddress_ID", personAddress_ID) :
                new ObjectParameter("PersonAddress_ID", typeof(int));
    
            var deleteBy_IDParameter = deleteBy_ID.HasValue ?
                new ObjectParameter("DeleteBy_ID", deleteBy_ID) :
                new ObjectParameter("DeleteBy_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PersonAddress_Delete", personAddress_IDParameter, deleteBy_IDParameter);
        }
    
        public virtual ObjectResult<usp_PersonAddress_Insert_Result> usp_PersonAddress_Insert(Nullable<int> person_ID, Nullable<int> address_ID, Nullable<int> addressType_ID, Nullable<int> createBy_ID)
        {
            var person_IDParameter = person_ID.HasValue ?
                new ObjectParameter("Person_ID", person_ID) :
                new ObjectParameter("Person_ID", typeof(int));
    
            var address_IDParameter = address_ID.HasValue ?
                new ObjectParameter("Address_ID", address_ID) :
                new ObjectParameter("Address_ID", typeof(int));
    
            var addressType_IDParameter = addressType_ID.HasValue ?
                new ObjectParameter("AddressType_ID", addressType_ID) :
                new ObjectParameter("AddressType_ID", typeof(int));
    
            var createBy_IDParameter = createBy_ID.HasValue ?
                new ObjectParameter("CreateBy_ID", createBy_ID) :
                new ObjectParameter("CreateBy_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonAddress_Insert_Result>("usp_PersonAddress_Insert", person_IDParameter, address_IDParameter, addressType_IDParameter, createBy_IDParameter);
        }
    
        public virtual ObjectResult<usp_PersonAddress_Select_Result> usp_PersonAddress_Select(Nullable<int> personAddress_ID)
        {
            var personAddress_IDParameter = personAddress_ID.HasValue ?
                new ObjectParameter("PersonAddress_ID", personAddress_ID) :
                new ObjectParameter("PersonAddress_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonAddress_Select_Result>("usp_PersonAddress_Select", personAddress_IDParameter);
        }
    
        public virtual ObjectResult<usp_PersonAddress_Update_Result> usp_PersonAddress_Update(Nullable<int> personAddress_ID, Nullable<int> person_ID, Nullable<int> address_ID, Nullable<int> addressType_ID, Nullable<int> updateBy_ID)
        {
            var personAddress_IDParameter = personAddress_ID.HasValue ?
                new ObjectParameter("PersonAddress_ID", personAddress_ID) :
                new ObjectParameter("PersonAddress_ID", typeof(int));
    
            var person_IDParameter = person_ID.HasValue ?
                new ObjectParameter("Person_ID", person_ID) :
                new ObjectParameter("Person_ID", typeof(int));
    
            var address_IDParameter = address_ID.HasValue ?
                new ObjectParameter("Address_ID", address_ID) :
                new ObjectParameter("Address_ID", typeof(int));
    
            var addressType_IDParameter = addressType_ID.HasValue ?
                new ObjectParameter("AddressType_ID", addressType_ID) :
                new ObjectParameter("AddressType_ID", typeof(int));
    
            var updateBy_IDParameter = updateBy_ID.HasValue ?
                new ObjectParameter("UpdateBy_ID", updateBy_ID) :
                new ObjectParameter("UpdateBy_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonAddress_Update_Result>("usp_PersonAddress_Update", personAddress_IDParameter, person_IDParameter, address_IDParameter, addressType_IDParameter, updateBy_IDParameter);
        }
    
        public virtual ObjectResult<usp_PersonAddressByPerson_Select_Result> usp_PersonAddressByPerson_Select(Nullable<int> person_ID, Nullable<int> addressType_ID)
        {
            var person_IDParameter = person_ID.HasValue ?
                new ObjectParameter("Person_ID", person_ID) :
                new ObjectParameter("Person_ID", typeof(int));
    
            var addressType_IDParameter = addressType_ID.HasValue ?
                new ObjectParameter("AddressType_ID", addressType_ID) :
                new ObjectParameter("AddressType_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonAddressByPerson_Select_Result>("usp_PersonAddressByPerson_Select", person_IDParameter, addressType_IDParameter);
        }
    
        public virtual int usp_PersonBankAccount_Delete(Nullable<int> personBankAccount_ID, Nullable<int> deleteBy_ID)
        {
            var personBankAccount_IDParameter = personBankAccount_ID.HasValue ?
                new ObjectParameter("PersonBankAccount_ID", personBankAccount_ID) :
                new ObjectParameter("PersonBankAccount_ID", typeof(int));
    
            var deleteBy_IDParameter = deleteBy_ID.HasValue ?
                new ObjectParameter("DeleteBy_ID", deleteBy_ID) :
                new ObjectParameter("DeleteBy_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PersonBankAccount_Delete", personBankAccount_IDParameter, deleteBy_IDParameter);
        }
    
        public virtual ObjectResult<usp_PersonBankAccount_Insert_Result> usp_PersonBankAccount_Insert(string personBankAccountName, string personBankAccountNo, Nullable<int> person_ID, Nullable<int> bank_ID, Nullable<int> createBy_ID)
        {
            var personBankAccountNameParameter = personBankAccountName != null ?
                new ObjectParameter("PersonBankAccountName", personBankAccountName) :
                new ObjectParameter("PersonBankAccountName", typeof(string));
    
            var personBankAccountNoParameter = personBankAccountNo != null ?
                new ObjectParameter("PersonBankAccountNo", personBankAccountNo) :
                new ObjectParameter("PersonBankAccountNo", typeof(string));
    
            var person_IDParameter = person_ID.HasValue ?
                new ObjectParameter("Person_ID", person_ID) :
                new ObjectParameter("Person_ID", typeof(int));
    
            var bank_IDParameter = bank_ID.HasValue ?
                new ObjectParameter("Bank_ID", bank_ID) :
                new ObjectParameter("Bank_ID", typeof(int));
    
            var createBy_IDParameter = createBy_ID.HasValue ?
                new ObjectParameter("CreateBy_ID", createBy_ID) :
                new ObjectParameter("CreateBy_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonBankAccount_Insert_Result>("usp_PersonBankAccount_Insert", personBankAccountNameParameter, personBankAccountNoParameter, person_IDParameter, bank_IDParameter, createBy_IDParameter);
        }
    
        public virtual ObjectResult<usp_PersonBankAccount_Select_Result> usp_PersonBankAccount_Select(Nullable<int> person_ID, Nullable<int> bank_ID, string personBankAccountNo, Nullable<bool> isActive, Nullable<int> personBankAccount_ID, Nullable<int> productGroup_ID)
        {
            var person_IDParameter = person_ID.HasValue ?
                new ObjectParameter("Person_ID", person_ID) :
                new ObjectParameter("Person_ID", typeof(int));
    
            var bank_IDParameter = bank_ID.HasValue ?
                new ObjectParameter("Bank_ID", bank_ID) :
                new ObjectParameter("Bank_ID", typeof(int));
    
            var personBankAccountNoParameter = personBankAccountNo != null ?
                new ObjectParameter("PersonBankAccountNo", personBankAccountNo) :
                new ObjectParameter("PersonBankAccountNo", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var personBankAccount_IDParameter = personBankAccount_ID.HasValue ?
                new ObjectParameter("PersonBankAccount_ID", personBankAccount_ID) :
                new ObjectParameter("PersonBankAccount_ID", typeof(int));
    
            var productGroup_IDParameter = productGroup_ID.HasValue ?
                new ObjectParameter("ProductGroup_ID", productGroup_ID) :
                new ObjectParameter("ProductGroup_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonBankAccount_Select_Result>("usp_PersonBankAccount_Select", person_IDParameter, bank_IDParameter, personBankAccountNoParameter, isActiveParameter, personBankAccount_IDParameter, productGroup_IDParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> usp_PersonBirthDateByPerson_select(Nullable<int> person_ID)
        {
            var person_IDParameter = person_ID.HasValue ?
                new ObjectParameter("Person_ID", person_ID) :
                new ObjectParameter("Person_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("usp_PersonBirthDateByPerson_select", person_IDParameter);
        }
    
        public virtual ObjectResult<usp_PersonCard_Insert_Result> usp_PersonCard_Insert(Nullable<int> personCardType_ID, string personCardDetail, Nullable<int> person_ID, Nullable<int> createBy_ID, ObjectParameter personCard_ID)
        {
            var personCardType_IDParameter = personCardType_ID.HasValue ?
                new ObjectParameter("PersonCardType_ID", personCardType_ID) :
                new ObjectParameter("PersonCardType_ID", typeof(int));
    
            var personCardDetailParameter = personCardDetail != null ?
                new ObjectParameter("PersonCardDetail", personCardDetail) :
                new ObjectParameter("PersonCardDetail", typeof(string));
    
            var person_IDParameter = person_ID.HasValue ?
                new ObjectParameter("Person_ID", person_ID) :
                new ObjectParameter("Person_ID", typeof(int));
    
            var createBy_IDParameter = createBy_ID.HasValue ?
                new ObjectParameter("CreateBy_ID", createBy_ID) :
                new ObjectParameter("CreateBy_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonCard_Insert_Result>("usp_PersonCard_Insert", personCardType_IDParameter, personCardDetailParameter, person_IDParameter, createBy_IDParameter, personCard_ID);
        }
    
        public virtual ObjectResult<usp_PersonCard_Update_Result> usp_PersonCard_Update(Nullable<int> personCard_ID, Nullable<int> personCardType_ID, string personCardDetail, Nullable<int> person_ID, Nullable<int> updateBy_ID)
        {
            var personCard_IDParameter = personCard_ID.HasValue ?
                new ObjectParameter("PersonCard_ID", personCard_ID) :
                new ObjectParameter("PersonCard_ID", typeof(int));
    
            var personCardType_IDParameter = personCardType_ID.HasValue ?
                new ObjectParameter("PersonCardType_ID", personCardType_ID) :
                new ObjectParameter("PersonCardType_ID", typeof(int));
    
            var personCardDetailParameter = personCardDetail != null ?
                new ObjectParameter("PersonCardDetail", personCardDetail) :
                new ObjectParameter("PersonCardDetail", typeof(string));
    
            var person_IDParameter = person_ID.HasValue ?
                new ObjectParameter("Person_ID", person_ID) :
                new ObjectParameter("Person_ID", typeof(int));
    
            var updateBy_IDParameter = updateBy_ID.HasValue ?
                new ObjectParameter("UpdateBy_ID", updateBy_ID) :
                new ObjectParameter("UpdateBy_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonCard_Update_Result>("usp_PersonCard_Update", personCard_IDParameter, personCardType_IDParameter, personCardDetailParameter, person_IDParameter, updateBy_IDParameter);
        }
    
        public virtual ObjectResult<usp_PersonCardByPerson_Select_Result> usp_PersonCardByPerson_Select(Nullable<int> person_ID)
        {
            var person_IDParameter = person_ID.HasValue ?
                new ObjectParameter("Person_ID", person_ID) :
                new ObjectParameter("Person_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonCardByPerson_Select_Result>("usp_PersonCardByPerson_Select", person_IDParameter);
        }
    
        public virtual int usp_PersonCardIsActive_Update(Nullable<int> personCard_ID)
        {
            var personCard_IDParameter = personCard_ID.HasValue ?
                new ObjectParameter("PersonCard_ID", personCard_ID) :
                new ObjectParameter("PersonCard_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PersonCardIsActive_Update", personCard_IDParameter);
        }
    
        public virtual ObjectResult<usp_PersonContactByPerson_Select_Result> usp_PersonContactByPerson_Select(Nullable<int> person_ID)
        {
            var person_IDParameter = person_ID.HasValue ?
                new ObjectParameter("Person_ID", person_ID) :
                new ObjectParameter("Person_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonContactByPerson_Select_Result>("usp_PersonContactByPerson_Select", person_IDParameter);
        }
    
        public virtual ObjectResult<usp_PersonFullDetail_Select_Result> usp_PersonFullDetail_Select(Nullable<int> person_ID)
        {
            var person_IDParameter = person_ID.HasValue ?
                new ObjectParameter("Person_ID", person_ID) :
                new ObjectParameter("Person_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonFullDetail_Select_Result>("usp_PersonFullDetail_Select", person_IDParameter);
        }
    
        public virtual int usp_PersonHistory_Insert(Nullable<int> person_ID, Nullable<int> personTransaction_ID)
        {
            var person_IDParameter = person_ID.HasValue ?
                new ObjectParameter("Person_ID", person_ID) :
                new ObjectParameter("Person_ID", typeof(int));
    
            var personTransaction_IDParameter = personTransaction_ID.HasValue ?
                new ObjectParameter("PersonTransaction_ID", personTransaction_ID) :
                new ObjectParameter("PersonTransaction_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PersonHistory_Insert", person_IDParameter, personTransaction_IDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_PersonIDSearchByCard_Select(string personCardDetail, Nullable<int> personCardType_ID)
        {
            var personCardDetailParameter = personCardDetail != null ?
                new ObjectParameter("PersonCardDetail", personCardDetail) :
                new ObjectParameter("PersonCardDetail", typeof(string));
    
            var personCardType_IDParameter = personCardType_ID.HasValue ?
                new ObjectParameter("PersonCardType_ID", personCardType_ID) :
                new ObjectParameter("PersonCardType_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_PersonIDSearchByCard_Select", personCardDetailParameter, personCardType_IDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_PersonIDSearchByCardV2_Select(string personCardDetail, Nullable<int> personCardType_ID)
        {
            var personCardDetailParameter = personCardDetail != null ?
                new ObjectParameter("PersonCardDetail", personCardDetail) :
                new ObjectParameter("PersonCardDetail", typeof(string));
    
            var personCardType_IDParameter = personCardType_ID.HasValue ?
                new ObjectParameter("PersonCardType_ID", personCardType_ID) :
                new ObjectParameter("PersonCardType_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_PersonIDSearchByCardV2_Select", personCardDetailParameter, personCardType_IDParameter);
        }
    
        public virtual ObjectResult<usp_PersonMotorApplication_ValidateForEdit_Select_Result> usp_PersonMotorApplication_ValidateForEdit_Select(Nullable<int> motorApplication_id, Nullable<int> person_id, Nullable<int> loginUserID)
        {
            var motorApplication_idParameter = motorApplication_id.HasValue ?
                new ObjectParameter("MotorApplication_id", motorApplication_id) :
                new ObjectParameter("MotorApplication_id", typeof(int));
    
            var person_idParameter = person_id.HasValue ?
                new ObjectParameter("Person_id", person_id) :
                new ObjectParameter("Person_id", typeof(int));
    
            var loginUserIDParameter = loginUserID.HasValue ?
                new ObjectParameter("LoginUserID", loginUserID) :
                new ObjectParameter("LoginUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonMotorApplication_ValidateForEdit_Select_Result>("usp_PersonMotorApplication_ValidateForEdit_Select", motorApplication_idParameter, person_idParameter, loginUserIDParameter);
        }
    
        public virtual ObjectResult<usp_PersonRelation_Insert_Result> usp_PersonRelation_Insert(Nullable<int> personRelationType_ID, Nullable<int> person_ID, Nullable<int> relationWithPerson_ID, Nullable<int> createBy_ID)
        {
            var personRelationType_IDParameter = personRelationType_ID.HasValue ?
                new ObjectParameter("PersonRelationType_ID", personRelationType_ID) :
                new ObjectParameter("PersonRelationType_ID", typeof(int));
    
            var person_IDParameter = person_ID.HasValue ?
                new ObjectParameter("Person_ID", person_ID) :
                new ObjectParameter("Person_ID", typeof(int));
    
            var relationWithPerson_IDParameter = relationWithPerson_ID.HasValue ?
                new ObjectParameter("RelationWithPerson_ID", relationWithPerson_ID) :
                new ObjectParameter("RelationWithPerson_ID", typeof(int));
    
            var createBy_IDParameter = createBy_ID.HasValue ?
                new ObjectParameter("CreateBy_ID", createBy_ID) :
                new ObjectParameter("CreateBy_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonRelation_Insert_Result>("usp_PersonRelation_Insert", personRelationType_IDParameter, person_IDParameter, relationWithPerson_IDParameter, createBy_IDParameter);
        }
    
        public virtual ObjectResult<usp_PersonRelation_Select_Result> usp_PersonRelation_Select(Nullable<int> person_ID, Nullable<int> relationWithPerson_ID)
        {
            var person_IDParameter = person_ID.HasValue ?
                new ObjectParameter("Person_ID", person_ID) :
                new ObjectParameter("Person_ID", typeof(int));
    
            var relationWithPerson_IDParameter = relationWithPerson_ID.HasValue ?
                new ObjectParameter("RelationWithPerson_ID", relationWithPerson_ID) :
                new ObjectParameter("RelationWithPerson_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonRelation_Select_Result>("usp_PersonRelation_Select", person_IDParameter, relationWithPerson_IDParameter);
        }
    
        public virtual ObjectResult<usp_PersonRelation_Update_Result> usp_PersonRelation_Update(Nullable<int> personRelation_ID, Nullable<int> personRelationType_ID, Nullable<int> person_ID, Nullable<int> relationWithPerson_ID, Nullable<int> updateBy_ID)
        {
            var personRelation_IDParameter = personRelation_ID.HasValue ?
                new ObjectParameter("PersonRelation_ID", personRelation_ID) :
                new ObjectParameter("PersonRelation_ID", typeof(int));
    
            var personRelationType_IDParameter = personRelationType_ID.HasValue ?
                new ObjectParameter("PersonRelationType_ID", personRelationType_ID) :
                new ObjectParameter("PersonRelationType_ID", typeof(int));
    
            var person_IDParameter = person_ID.HasValue ?
                new ObjectParameter("Person_ID", person_ID) :
                new ObjectParameter("Person_ID", typeof(int));
    
            var relationWithPerson_IDParameter = relationWithPerson_ID.HasValue ?
                new ObjectParameter("RelationWithPerson_ID", relationWithPerson_ID) :
                new ObjectParameter("RelationWithPerson_ID", typeof(int));
    
            var updateBy_IDParameter = updateBy_ID.HasValue ?
                new ObjectParameter("UpdateBy_ID", updateBy_ID) :
                new ObjectParameter("UpdateBy_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonRelation_Update_Result>("usp_PersonRelation_Update", personRelation_IDParameter, personRelationType_IDParameter, person_IDParameter, relationWithPerson_IDParameter, updateBy_IDParameter);
        }
    
        public virtual ObjectResult<usp_PersonRelationType_Select1_Result> usp_PersonRelationType_Select1(Nullable<int> personRelationType_ID)
        {
            var personRelationType_IDParameter = personRelationType_ID.HasValue ?
                new ObjectParameter("PersonRelationType_ID", personRelationType_ID) :
                new ObjectParameter("PersonRelationType_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonRelationType_Select1_Result>("usp_PersonRelationType_Select1", personRelationType_IDParameter);
        }
    
        public virtual ObjectResult<usp_PersonSearch_Select_Result> usp_PersonSearch_Select(string criteria)
        {
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonSearch_Select_Result>("usp_PersonSearch_Select", criteriaParameter);
        }
    
        public virtual ObjectResult<usp_PersonSearch_SelectV2_Result> usp_PersonSearch_SelectV2(Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string search)
        {
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonSearch_SelectV2_Result>("usp_PersonSearch_SelectV2", indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchParameter);
        }
    
        public virtual ObjectResult<usp_PersonSearchByCard_Select_Result> usp_PersonSearchByCard_Select(string personCardDetail, Nullable<int> personCardType_ID, Nullable<int> personType_ID)
        {
            var personCardDetailParameter = personCardDetail != null ?
                new ObjectParameter("PersonCardDetail", personCardDetail) :
                new ObjectParameter("PersonCardDetail", typeof(string));
    
            var personCardType_IDParameter = personCardType_ID.HasValue ?
                new ObjectParameter("PersonCardType_ID", personCardType_ID) :
                new ObjectParameter("PersonCardType_ID", typeof(int));
    
            var personType_IDParameter = personType_ID.HasValue ?
                new ObjectParameter("PersonType_ID", personType_ID) :
                new ObjectParameter("PersonType_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonSearchByCard_Select_Result>("usp_PersonSearchByCard_Select", personCardDetailParameter, personCardType_IDParameter, personType_IDParameter);
        }
    
        public virtual int usp_PersonTransaction_Insert(Nullable<int> person_ID, Nullable<int> transactionType_ID, Nullable<int> createdBy_ID, string remark, ObjectParameter personTransaction_ID)
        {
            var person_IDParameter = person_ID.HasValue ?
                new ObjectParameter("Person_ID", person_ID) :
                new ObjectParameter("Person_ID", typeof(int));
    
            var transactionType_IDParameter = transactionType_ID.HasValue ?
                new ObjectParameter("TransactionType_ID", transactionType_ID) :
                new ObjectParameter("TransactionType_ID", typeof(int));
    
            var createdBy_IDParameter = createdBy_ID.HasValue ?
                new ObjectParameter("CreatedBy_ID", createdBy_ID) :
                new ObjectParameter("CreatedBy_ID", typeof(int));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PersonTransaction_Insert", person_IDParameter, transactionType_IDParameter, createdBy_IDParameter, remarkParameter, personTransaction_ID);
        }
    
        public virtual ObjectResult<usp_PersonTransaction_Select_Result> usp_PersonTransaction_Select(Nullable<int> person_ID)
        {
            var person_IDParameter = person_ID.HasValue ?
                new ObjectParameter("Person_ID", person_ID) :
                new ObjectParameter("Person_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonTransaction_Select_Result>("usp_PersonTransaction_Select", person_IDParameter);
        }
    
        public virtual ObjectResult<usp_PersonTransactionDetail_Select_Result> usp_PersonTransactionDetail_Select(Nullable<int> personTransactionHeader_ID)
        {
            var personTransactionHeader_IDParameter = personTransactionHeader_ID.HasValue ?
                new ObjectParameter("PersonTransactionHeader_ID", personTransactionHeader_ID) :
                new ObjectParameter("PersonTransactionHeader_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonTransactionDetail_Select_Result>("usp_PersonTransactionDetail_Select", personTransactionHeader_IDParameter);
        }
    
        public virtual ObjectResult<usp_PersonType_Select_Result> usp_PersonType_Select(Nullable<int> personType_ID)
        {
            var personType_IDParameter = personType_ID.HasValue ?
                new ObjectParameter("PersonType_ID", personType_ID) :
                new ObjectParameter("PersonType_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonType_Select_Result>("usp_PersonType_Select", personType_IDParameter);
        }
    
        public virtual int usp_PersonUser_Delete(Nullable<int> user_ID, Nullable<int> deleteBy_ID)
        {
            var user_IDParameter = user_ID.HasValue ?
                new ObjectParameter("User_ID", user_ID) :
                new ObjectParameter("User_ID", typeof(int));
    
            var deleteBy_IDParameter = deleteBy_ID.HasValue ?
                new ObjectParameter("DeleteBy_ID", deleteBy_ID) :
                new ObjectParameter("DeleteBy_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PersonUser_Delete", user_IDParameter, deleteBy_IDParameter);
        }
    
        public virtual ObjectResult<usp_PersonUser_Insert_Result> usp_PersonUser_Insert(string user_ID, Nullable<int> person_ID, Nullable<int> employee_ID, Nullable<int> createBy_ID)
        {
            var user_IDParameter = user_ID != null ?
                new ObjectParameter("User_ID", user_ID) :
                new ObjectParameter("User_ID", typeof(string));
    
            var person_IDParameter = person_ID.HasValue ?
                new ObjectParameter("Person_ID", person_ID) :
                new ObjectParameter("Person_ID", typeof(int));
    
            var employee_IDParameter = employee_ID.HasValue ?
                new ObjectParameter("Employee_ID", employee_ID) :
                new ObjectParameter("Employee_ID", typeof(int));
    
            var createBy_IDParameter = createBy_ID.HasValue ?
                new ObjectParameter("CreateBy_ID", createBy_ID) :
                new ObjectParameter("CreateBy_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonUser_Insert_Result>("usp_PersonUser_Insert", user_IDParameter, person_IDParameter, employee_IDParameter, createBy_IDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_PersonUser_Select(Nullable<int> user_ID)
        {
            var user_IDParameter = user_ID.HasValue ?
                new ObjectParameter("User_ID", user_ID) :
                new ObjectParameter("User_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_PersonUser_Select", user_IDParameter);
        }
    
        public virtual ObjectResult<usp_Sex_Select1_Result> usp_Sex_Select1(Nullable<int> sex_ID)
        {
            var sex_IDParameter = sex_ID.HasValue ?
                new ObjectParameter("Sex_ID", sex_ID) :
                new ObjectParameter("Sex_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Sex_Select1_Result>("usp_Sex_Select1", sex_IDParameter);
        }
    
        public virtual ObjectResult<usp_Title_Select_Result> usp_Title_Select(Nullable<int> title_ID, Nullable<int> personType_ID)
        {
            var title_IDParameter = title_ID.HasValue ?
                new ObjectParameter("Title_ID", title_ID) :
                new ObjectParameter("Title_ID", typeof(int));
    
            var personType_IDParameter = personType_ID.HasValue ?
                new ObjectParameter("PersonType_ID", personType_ID) :
                new ObjectParameter("PersonType_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Title_Select_Result>("usp_Title_Select", title_IDParameter, personType_IDParameter);
        }
    
        public virtual int usp_Benefit_Delete(Nullable<int> benefit_ID, Nullable<int> deleteBy_ID)
        {
            var benefit_IDParameter = benefit_ID.HasValue ?
                new ObjectParameter("Benefit_ID", benefit_ID) :
                new ObjectParameter("Benefit_ID", typeof(int));
    
            var deleteBy_IDParameter = deleteBy_ID.HasValue ?
                new ObjectParameter("DeleteBy_ID", deleteBy_ID) :
                new ObjectParameter("DeleteBy_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Benefit_Delete", benefit_IDParameter, deleteBy_IDParameter);
        }
    
        public virtual ObjectResult<usp_Benefit_Insert_Result> usp_Benefit_Insert(string benefitDetail, Nullable<int> createBy_ID)
        {
            var benefitDetailParameter = benefitDetail != null ?
                new ObjectParameter("BenefitDetail", benefitDetail) :
                new ObjectParameter("BenefitDetail", typeof(string));
    
            var createBy_IDParameter = createBy_ID.HasValue ?
                new ObjectParameter("CreateBy_ID", createBy_ID) :
                new ObjectParameter("CreateBy_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Benefit_Insert_Result>("usp_Benefit_Insert", benefitDetailParameter, createBy_IDParameter);
        }
    
        public virtual ObjectResult<usp_Benefit_Select_Result> usp_Benefit_Select(Nullable<int> benefit_ID)
        {
            var benefit_IDParameter = benefit_ID.HasValue ?
                new ObjectParameter("Benefit_ID", benefit_ID) :
                new ObjectParameter("Benefit_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Benefit_Select_Result>("usp_Benefit_Select", benefit_IDParameter);
        }
    
        public virtual ObjectResult<usp_Benefit_Update_Result> usp_Benefit_Update(Nullable<int> benefit_ID, string benefitDetail, Nullable<int> updateBy_ID)
        {
            var benefit_IDParameter = benefit_ID.HasValue ?
                new ObjectParameter("Benefit_ID", benefit_ID) :
                new ObjectParameter("Benefit_ID", typeof(int));
    
            var benefitDetailParameter = benefitDetail != null ?
                new ObjectParameter("BenefitDetail", benefitDetail) :
                new ObjectParameter("BenefitDetail", typeof(string));
    
            var updateBy_IDParameter = updateBy_ID.HasValue ?
                new ObjectParameter("UpdateBy_ID", updateBy_ID) :
                new ObjectParameter("UpdateBy_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Benefit_Update_Result>("usp_Benefit_Update", benefit_IDParameter, benefitDetailParameter, updateBy_IDParameter);
        }
    
        public virtual ObjectResult<usp_BenefitByProductType_Select_Result> usp_BenefitByProductType_Select(Nullable<int> productType_ID)
        {
            var productType_IDParameter = productType_ID.HasValue ?
                new ObjectParameter("ProductType_ID", productType_ID) :
                new ObjectParameter("ProductType_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BenefitByProductType_Select_Result>("usp_BenefitByProductType_Select", productType_IDParameter);
        }
    
        public virtual ObjectResult<usp_InsuranceCompany_Select_Result> usp_InsuranceCompany_Select(Nullable<int> insuranceCompany_ID, Nullable<bool> isActive)
        {
            var insuranceCompany_IDParameter = insuranceCompany_ID.HasValue ?
                new ObjectParameter("InsuranceCompany_ID", insuranceCompany_ID) :
                new ObjectParameter("InsuranceCompany_ID", typeof(int));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_InsuranceCompany_Select_Result>("usp_InsuranceCompany_Select", insuranceCompany_IDParameter, isActiveParameter);
        }
    
        public virtual ObjectResult<usp_Product_ByProductTypeIDAndInsuranceCompanyID_Select_Result> usp_Product_ByProductTypeIDAndInsuranceCompanyID_Select(Nullable<int> productTypeID, Nullable<int> insuranceCompany, Nullable<bool> isActive)
        {
            var productTypeIDParameter = productTypeID.HasValue ?
                new ObjectParameter("ProductTypeID", productTypeID) :
                new ObjectParameter("ProductTypeID", typeof(int));
    
            var insuranceCompanyParameter = insuranceCompany.HasValue ?
                new ObjectParameter("InsuranceCompany", insuranceCompany) :
                new ObjectParameter("InsuranceCompany", typeof(int));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Product_ByProductTypeIDAndInsuranceCompanyID_Select_Result>("usp_Product_ByProductTypeIDAndInsuranceCompanyID_Select", productTypeIDParameter, insuranceCompanyParameter, isActiveParameter);
        }
    
        public virtual int usp_Product_Delete(Nullable<int> product_ID, Nullable<int> deleteBy_ID)
        {
            var product_IDParameter = product_ID.HasValue ?
                new ObjectParameter("Product_ID", product_ID) :
                new ObjectParameter("Product_ID", typeof(int));
    
            var deleteBy_IDParameter = deleteBy_ID.HasValue ?
                new ObjectParameter("DeleteBy_ID", deleteBy_ID) :
                new ObjectParameter("DeleteBy_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Product_Delete", product_IDParameter, deleteBy_IDParameter);
        }
    
        public virtual ObjectResult<usp_Product_Insert_Result> usp_Product_Insert(string productDetail, Nullable<int> insuranceCompany_ID, Nullable<int> productType_ID, Nullable<double> premiumPerYear, Nullable<double> premiumPerMonth, Nullable<int> createBy_ID)
        {
            var productDetailParameter = productDetail != null ?
                new ObjectParameter("ProductDetail", productDetail) :
                new ObjectParameter("ProductDetail", typeof(string));
    
            var insuranceCompany_IDParameter = insuranceCompany_ID.HasValue ?
                new ObjectParameter("InsuranceCompany_ID", insuranceCompany_ID) :
                new ObjectParameter("InsuranceCompany_ID", typeof(int));
    
            var productType_IDParameter = productType_ID.HasValue ?
                new ObjectParameter("ProductType_ID", productType_ID) :
                new ObjectParameter("ProductType_ID", typeof(int));
    
            var premiumPerYearParameter = premiumPerYear.HasValue ?
                new ObjectParameter("PremiumPerYear", premiumPerYear) :
                new ObjectParameter("PremiumPerYear", typeof(double));
    
            var premiumPerMonthParameter = premiumPerMonth.HasValue ?
                new ObjectParameter("PremiumPerMonth", premiumPerMonth) :
                new ObjectParameter("PremiumPerMonth", typeof(double));
    
            var createBy_IDParameter = createBy_ID.HasValue ?
                new ObjectParameter("CreateBy_ID", createBy_ID) :
                new ObjectParameter("CreateBy_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Product_Insert_Result>("usp_Product_Insert", productDetailParameter, insuranceCompany_IDParameter, productType_IDParameter, premiumPerYearParameter, premiumPerMonthParameter, createBy_IDParameter);
        }
    
        public virtual ObjectResult<usp_Product_Select1_Result> usp_Product_Select1(Nullable<int> product_ID, Nullable<bool> isActive)
        {
            var product_IDParameter = product_ID.HasValue ?
                new ObjectParameter("Product_ID", product_ID) :
                new ObjectParameter("Product_ID", typeof(int));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Product_Select1_Result>("usp_Product_Select1", product_IDParameter, isActiveParameter);
        }
    
        public virtual ObjectResult<usp_Product_Update_Result> usp_Product_Update(Nullable<int> product_ID, string productDetail, Nullable<int> insuranceCompany_ID, Nullable<int> productType_ID, Nullable<double> premiumPerYear, Nullable<double> premiumPerMonth, Nullable<int> updateBy_ID)
        {
            var product_IDParameter = product_ID.HasValue ?
                new ObjectParameter("Product_ID", product_ID) :
                new ObjectParameter("Product_ID", typeof(int));
    
            var productDetailParameter = productDetail != null ?
                new ObjectParameter("ProductDetail", productDetail) :
                new ObjectParameter("ProductDetail", typeof(string));
    
            var insuranceCompany_IDParameter = insuranceCompany_ID.HasValue ?
                new ObjectParameter("InsuranceCompany_ID", insuranceCompany_ID) :
                new ObjectParameter("InsuranceCompany_ID", typeof(int));
    
            var productType_IDParameter = productType_ID.HasValue ?
                new ObjectParameter("ProductType_ID", productType_ID) :
                new ObjectParameter("ProductType_ID", typeof(int));
    
            var premiumPerYearParameter = premiumPerYear.HasValue ?
                new ObjectParameter("PremiumPerYear", premiumPerYear) :
                new ObjectParameter("PremiumPerYear", typeof(double));
    
            var premiumPerMonthParameter = premiumPerMonth.HasValue ?
                new ObjectParameter("PremiumPerMonth", premiumPerMonth) :
                new ObjectParameter("PremiumPerMonth", typeof(double));
    
            var updateBy_IDParameter = updateBy_ID.HasValue ?
                new ObjectParameter("UpdateBy_ID", updateBy_ID) :
                new ObjectParameter("UpdateBy_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Product_Update_Result>("usp_Product_Update", product_IDParameter, productDetailParameter, insuranceCompany_IDParameter, productType_IDParameter, premiumPerYearParameter, premiumPerMonthParameter, updateBy_IDParameter);
        }
    
        public virtual ObjectResult<usp_ProductBenefit_ByProductID_Select_Result> usp_ProductBenefit_ByProductID_Select(Nullable<int> product_ID)
        {
            var product_IDParameter = product_ID.HasValue ?
                new ObjectParameter("Product_ID", product_ID) :
                new ObjectParameter("Product_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProductBenefit_ByProductID_Select_Result>("usp_ProductBenefit_ByProductID_Select", product_IDParameter);
        }
    
        public virtual ObjectResult<usp_ProductGroup_Select_Result> usp_ProductGroup_Select(Nullable<int> productGroup_ID)
        {
            var productGroup_IDParameter = productGroup_ID.HasValue ?
                new ObjectParameter("ProductGroup_ID", productGroup_ID) :
                new ObjectParameter("ProductGroup_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProductGroup_Select_Result>("usp_ProductGroup_Select", productGroup_IDParameter);
        }
    
        public virtual ObjectResult<usp_ProductGroupBankConfig_Select_Result> usp_ProductGroupBankConfig_Select(Nullable<int> productGroup_ID)
        {
            var productGroup_IDParameter = productGroup_ID.HasValue ?
                new ObjectParameter("ProductGroup_ID", productGroup_ID) :
                new ObjectParameter("ProductGroup_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProductGroupBankConfig_Select_Result>("usp_ProductGroupBankConfig_Select", productGroup_IDParameter);
        }
    
        public virtual ObjectResult<usp_ProductType_Select_Result> usp_ProductType_Select(Nullable<int> productType_ID, Nullable<bool> isActive)
        {
            var productType_IDParameter = productType_ID.HasValue ?
                new ObjectParameter("ProductType_ID", productType_ID) :
                new ObjectParameter("ProductType_ID", typeof(int));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProductType_Select_Result>("usp_ProductType_Select", productType_IDParameter, isActiveParameter);
        }
    
        public virtual ObjectResult<usp_AspNetRoles_Datatable_Result> usp_AspNetRoles_Datatable(Nullable<int> pageStart, Nullable<int> pageSize, string sortField, string orderType, string search)
        {
            var pageStartParameter = pageStart.HasValue ?
                new ObjectParameter("PageStart", pageStart) :
                new ObjectParameter("PageStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AspNetRoles_Datatable_Result>("usp_AspNetRoles_Datatable", pageStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchParameter);
        }
    
        public virtual ObjectResult<usp_AspNetUsers_Datatable_Result> usp_AspNetUsers_Datatable(Nullable<int> pageStart, Nullable<int> pageSize, string sortField, string orderType, string search)
        {
            var pageStartParameter = pageStart.HasValue ?
                new ObjectParameter("PageStart", pageStart) :
                new ObjectParameter("PageStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AspNetUsers_Datatable_Result>("usp_AspNetUsers_Datatable", pageStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchParameter);
        }
    
        public virtual ObjectResult<usp_GetUserDetailByUserName_Result> usp_GetUserDetailByUserName(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetUserDetailByUserName_Result>("usp_GetUserDetailByUserName", userNameParameter);
        }
    
        public virtual ObjectResult<usp_GetUsers_ByRoleId_Result> usp_GetUsers_ByRoleId(string roleId)
        {
            var roleIdParameter = roleId != null ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetUsers_ByRoleId_Result>("usp_GetUsers_ByRoleId", roleIdParameter);
        }
    
        public virtual ObjectResult<usp_GetUsers_ByRoleId_Datatable_Result> usp_GetUsers_ByRoleId_Datatable(Nullable<int> pageStart, Nullable<int> pageSize, string sortField, string orderType, string search, string roleId)
        {
            var pageStartParameter = pageStart.HasValue ?
                new ObjectParameter("PageStart", pageStart) :
                new ObjectParameter("PageStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var roleIdParameter = roleId != null ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetUsers_ByRoleId_Datatable_Result>("usp_GetUsers_ByRoleId_Datatable", pageStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchParameter, roleIdParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> usp_OTPCheck(string reference, string oTP)
        {
            var referenceParameter = reference != null ?
                new ObjectParameter("Reference", reference) :
                new ObjectParameter("Reference", typeof(string));
    
            var oTPParameter = oTP != null ?
                new ObjectParameter("OTP", oTP) :
                new ObjectParameter("OTP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("usp_OTPCheck", referenceParameter, oTPParameter);
        }
    
        public virtual ObjectResult<usp_OTPGenerate_Result> usp_OTPGenerate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_OTPGenerate_Result>("usp_OTPGenerate");
        }
    
        public virtual ObjectResult<string> usp_ProgramAuthorize_Select(string projectName, string programName)
        {
            var projectNameParameter = projectName != null ?
                new ObjectParameter("ProjectName", projectName) :
                new ObjectParameter("ProjectName", typeof(string));
    
            var programNameParameter = programName != null ?
                new ObjectParameter("ProgramName", programName) :
                new ObjectParameter("ProgramName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_ProgramAuthorize_Select", projectNameParameter, programNameParameter);
        }
    
        public virtual int usp_RolesClearByUserName(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_RolesClearByUserName", usernameParameter);
        }
    
        public virtual ObjectResult<usp_RolesEditByUserName_Result> usp_RolesEditByUserName(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RolesEditByUserName_Result>("usp_RolesEditByUserName", usernameParameter);
        }
    
        public virtual int usp_UserRolesAdd(string userId, string roleId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var roleIdParameter = roleId != null ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserRolesAdd", userIdParameter, roleIdParameter);
        }
    
        public virtual ObjectResult<usp_ValidateToken_V2_Result> usp_ValidateToken_V2(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ValidateToken_V2_Result>("usp_ValidateToken_V2", usernameParameter);
        }
    }
}
