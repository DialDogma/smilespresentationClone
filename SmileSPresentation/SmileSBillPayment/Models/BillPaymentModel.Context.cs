//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmileSBillPayment.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SSSCashReceiveEntities : DbContext
    {
        public SSSCashReceiveEntities()
            : base("name=SSSCashReceiveEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int usp_BillPayment_Insert(Nullable<System.DateTime> debtPeriod, Nullable<bool> isDirect, string directDebtIdList, Nullable<int> createdByUserId, Nullable<bool> isAllow)
        {
            var debtPeriodParameter = debtPeriod.HasValue ?
                new ObjectParameter("DebtPeriod", debtPeriod) :
                new ObjectParameter("DebtPeriod", typeof(System.DateTime));
    
            var isDirectParameter = isDirect.HasValue ?
                new ObjectParameter("IsDirect", isDirect) :
                new ObjectParameter("IsDirect", typeof(bool));
    
            var directDebtIdListParameter = directDebtIdList != null ?
                new ObjectParameter("DirectDebtIdList", directDebtIdList) :
                new ObjectParameter("DirectDebtIdList", typeof(string));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            var isAllowParameter = isAllow.HasValue ?
                new ObjectParameter("IsAllow", isAllow) :
                new ObjectParameter("IsAllow", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_BillPayment_Insert", debtPeriodParameter, isDirectParameter, directDebtIdListParameter, createdByUserIdParameter, isAllowParameter);
        }
    
        public virtual ObjectResult<usp_BillPayment_Select_Result> usp_BillPayment_Select(Nullable<int> billPaymentId, Nullable<System.DateTime> period, Nullable<int> payerBranchId, Nullable<int> payerStudyAreaId, Nullable<int> saleEmpolyeeId, Nullable<int> reserveAccountId, Nullable<bool> isDummy, string billPaymentStatusIdList, string billPaymentSMSStatusIdList, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var billPaymentIdParameter = billPaymentId.HasValue ?
                new ObjectParameter("BillPaymentId", billPaymentId) :
                new ObjectParameter("BillPaymentId", typeof(int));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            var payerBranchIdParameter = payerBranchId.HasValue ?
                new ObjectParameter("PayerBranchId", payerBranchId) :
                new ObjectParameter("PayerBranchId", typeof(int));
    
            var payerStudyAreaIdParameter = payerStudyAreaId.HasValue ?
                new ObjectParameter("PayerStudyAreaId", payerStudyAreaId) :
                new ObjectParameter("PayerStudyAreaId", typeof(int));
    
            var saleEmpolyeeIdParameter = saleEmpolyeeId.HasValue ?
                new ObjectParameter("SaleEmpolyeeId", saleEmpolyeeId) :
                new ObjectParameter("SaleEmpolyeeId", typeof(int));
    
            var reserveAccountIdParameter = reserveAccountId.HasValue ?
                new ObjectParameter("ReserveAccountId", reserveAccountId) :
                new ObjectParameter("ReserveAccountId", typeof(int));
    
            var isDummyParameter = isDummy.HasValue ?
                new ObjectParameter("IsDummy", isDummy) :
                new ObjectParameter("IsDummy", typeof(bool));
    
            var billPaymentStatusIdListParameter = billPaymentStatusIdList != null ?
                new ObjectParameter("BillPaymentStatusIdList", billPaymentStatusIdList) :
                new ObjectParameter("BillPaymentStatusIdList", typeof(string));
    
            var billPaymentSMSStatusIdListParameter = billPaymentSMSStatusIdList != null ?
                new ObjectParameter("BillPaymentSMSStatusIdList", billPaymentSMSStatusIdList) :
                new ObjectParameter("BillPaymentSMSStatusIdList", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BillPayment_Select_Result>("usp_BillPayment_Select", billPaymentIdParameter, periodParameter, payerBranchIdParameter, payerStudyAreaIdParameter, saleEmpolyeeIdParameter, reserveAccountIdParameter, isDummyParameter, billPaymentStatusIdListParameter, billPaymentSMSStatusIdListParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_BillPaymentGenerateFileLog_Insert_Result> usp_BillPaymentGenerateFileLog_Insert(Nullable<int> billPaymentId, string iP)
        {
            var billPaymentIdParameter = billPaymentId.HasValue ?
                new ObjectParameter("BillPaymentId", billPaymentId) :
                new ObjectParameter("BillPaymentId", typeof(int));
    
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BillPaymentGenerateFileLog_Insert_Result>("usp_BillPaymentGenerateFileLog_Insert", billPaymentIdParameter, iPParameter);
        }
    
        public virtual int usp_BillPaymentSentSMS_Insert(Nullable<System.DateTime> debtPeriod, Nullable<bool> isDirect, string directBillPaymentIdList, Nullable<int> paymethodTypeId, Nullable<System.DateTime> sMSSentDate, Nullable<int> createdByUserId)
        {
            var debtPeriodParameter = debtPeriod.HasValue ?
                new ObjectParameter("DebtPeriod", debtPeriod) :
                new ObjectParameter("DebtPeriod", typeof(System.DateTime));
    
            var isDirectParameter = isDirect.HasValue ?
                new ObjectParameter("IsDirect", isDirect) :
                new ObjectParameter("IsDirect", typeof(bool));
    
            var directBillPaymentIdListParameter = directBillPaymentIdList != null ?
                new ObjectParameter("DirectBillPaymentIdList", directBillPaymentIdList) :
                new ObjectParameter("DirectBillPaymentIdList", typeof(string));
    
            var paymethodTypeIdParameter = paymethodTypeId.HasValue ?
                new ObjectParameter("PaymethodTypeId", paymethodTypeId) :
                new ObjectParameter("PaymethodTypeId", typeof(int));
    
            var sMSSentDateParameter = sMSSentDate.HasValue ?
                new ObjectParameter("SMSSentDate", sMSSentDate) :
                new ObjectParameter("SMSSentDate", typeof(System.DateTime));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_BillPaymentSentSMS_Insert", debtPeriodParameter, isDirectParameter, directBillPaymentIdListParameter, paymethodTypeIdParameter, sMSSentDateParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_BillPaymentShort_Select_Result> usp_BillPaymentShort_Select(Nullable<int> billPaymentId, Nullable<System.DateTime> period, Nullable<int> payerBranchId, Nullable<int> payerStudyAreaId, Nullable<int> saleEmpolyeeId, Nullable<int> reserveAccountId, Nullable<bool> isDummy, string billPaymentStatusIdList, string billPaymentSMSStatusIdList, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var billPaymentIdParameter = billPaymentId.HasValue ?
                new ObjectParameter("BillPaymentId", billPaymentId) :
                new ObjectParameter("BillPaymentId", typeof(int));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            var payerBranchIdParameter = payerBranchId.HasValue ?
                new ObjectParameter("PayerBranchId", payerBranchId) :
                new ObjectParameter("PayerBranchId", typeof(int));
    
            var payerStudyAreaIdParameter = payerStudyAreaId.HasValue ?
                new ObjectParameter("PayerStudyAreaId", payerStudyAreaId) :
                new ObjectParameter("PayerStudyAreaId", typeof(int));
    
            var saleEmpolyeeIdParameter = saleEmpolyeeId.HasValue ?
                new ObjectParameter("SaleEmpolyeeId", saleEmpolyeeId) :
                new ObjectParameter("SaleEmpolyeeId", typeof(int));
    
            var reserveAccountIdParameter = reserveAccountId.HasValue ?
                new ObjectParameter("ReserveAccountId", reserveAccountId) :
                new ObjectParameter("ReserveAccountId", typeof(int));
    
            var isDummyParameter = isDummy.HasValue ?
                new ObjectParameter("IsDummy", isDummy) :
                new ObjectParameter("IsDummy", typeof(bool));
    
            var billPaymentStatusIdListParameter = billPaymentStatusIdList != null ?
                new ObjectParameter("BillPaymentStatusIdList", billPaymentStatusIdList) :
                new ObjectParameter("BillPaymentStatusIdList", typeof(string));
    
            var billPaymentSMSStatusIdListParameter = billPaymentSMSStatusIdList != null ?
                new ObjectParameter("BillPaymentSMSStatusIdList", billPaymentSMSStatusIdList) :
                new ObjectParameter("BillPaymentSMSStatusIdList", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BillPaymentShort_Select_Result>("usp_BillPaymentShort_Select", billPaymentIdParameter, periodParameter, payerBranchIdParameter, payerStudyAreaIdParameter, saleEmpolyeeIdParameter, reserveAccountIdParameter, isDummyParameter, billPaymentStatusIdListParameter, billPaymentSMSStatusIdListParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_BillPaymentSMSStatus_Select_Result> usp_BillPaymentSMSStatus_Select(Nullable<int> billPaymentSMSStatusId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var billPaymentSMSStatusIdParameter = billPaymentSMSStatusId.HasValue ?
                new ObjectParameter("BillPaymentSMSStatusId", billPaymentSMSStatusId) :
                new ObjectParameter("BillPaymentSMSStatusId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BillPaymentSMSStatus_Select_Result>("usp_BillPaymentSMSStatus_Select", billPaymentSMSStatusIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_BillPaymentStatus_Select_Result> usp_BillPaymentStatus_Select(Nullable<int> billPaymentStatusId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var billPaymentStatusIdParameter = billPaymentStatusId.HasValue ?
                new ObjectParameter("BillPaymentStatusId", billPaymentStatusId) :
                new ObjectParameter("BillPaymentStatusId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BillPaymentStatus_Select_Result>("usp_BillPaymentStatus_Select", billPaymentStatusIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_BillPaymentStatusForBillFollow_Select_Result> usp_BillPaymentStatusForBillFollow_Select(Nullable<int> billPaymentStatusId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var billPaymentStatusIdParameter = billPaymentStatusId.HasValue ?
                new ObjectParameter("BillPaymentStatusId", billPaymentStatusId) :
                new ObjectParameter("BillPaymentStatusId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BillPaymentStatusForBillFollow_Select_Result>("usp_BillPaymentStatusForBillFollow_Select", billPaymentStatusIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_GetBillPaymentDetailForGenerateFile_Result> usp_GetBillPaymentDetailForGenerateFile(string billPaymentCode)
        {
            var billPaymentCodeParameter = billPaymentCode != null ?
                new ObjectParameter("BillPaymentCode", billPaymentCode) :
                new ObjectParameter("BillPaymentCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetBillPaymentDetailForGenerateFile_Result>("usp_GetBillPaymentDetailForGenerateFile", billPaymentCodeParameter);
        }
    
        public virtual ObjectResult<usp_GetBillPaymentForGenerateFile_Result> usp_GetBillPaymentForGenerateFile(string billPaymentCode)
        {
            var billPaymentCodeParameter = billPaymentCode != null ?
                new ObjectParameter("BillPaymentCode", billPaymentCode) :
                new ObjectParameter("BillPaymentCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetBillPaymentForGenerateFile_Result>("usp_GetBillPaymentForGenerateFile", billPaymentCodeParameter);
        }
    
        public virtual int usp_GetSMSResultForBillPayment_Update(Nullable<System.DateTime> period)
        {
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GetSMSResultForBillPayment_Update", periodParameter);
        }
    
        public virtual ObjectResult<usp_ReserveAccount_Insert_Result> usp_ReserveAccount_Insert(Nullable<int> createdByUserId)
        {
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReserveAccount_Insert_Result>("usp_ReserveAccount_Insert", createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_ReserveAccount_Select_Result> usp_ReserveAccount_Select(Nullable<int> reserveAccountId, Nullable<int> reserveAccountTypeId, Nullable<bool> isDummy, Nullable<bool> isbalance, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var reserveAccountIdParameter = reserveAccountId.HasValue ?
                new ObjectParameter("ReserveAccountId", reserveAccountId) :
                new ObjectParameter("ReserveAccountId", typeof(int));
    
            var reserveAccountTypeIdParameter = reserveAccountTypeId.HasValue ?
                new ObjectParameter("ReserveAccountTypeId", reserveAccountTypeId) :
                new ObjectParameter("ReserveAccountTypeId", typeof(int));
    
            var isDummyParameter = isDummy.HasValue ?
                new ObjectParameter("IsDummy", isDummy) :
                new ObjectParameter("IsDummy", typeof(bool));
    
            var isbalanceParameter = isbalance.HasValue ?
                new ObjectParameter("Isbalance", isbalance) :
                new ObjectParameter("Isbalance", typeof(bool));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReserveAccount_Select_Result>("usp_ReserveAccount_Select", reserveAccountIdParameter, reserveAccountTypeIdParameter, isDummyParameter, isbalanceParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ReserveAccountShort_Select_Result> usp_ReserveAccountShort_Select(Nullable<int> reserveAccountId, Nullable<int> reserveAccountTypeId, Nullable<bool> isbalance, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var reserveAccountIdParameter = reserveAccountId.HasValue ?
                new ObjectParameter("ReserveAccountId", reserveAccountId) :
                new ObjectParameter("ReserveAccountId", typeof(int));
    
            var reserveAccountTypeIdParameter = reserveAccountTypeId.HasValue ?
                new ObjectParameter("ReserveAccountTypeId", reserveAccountTypeId) :
                new ObjectParameter("ReserveAccountTypeId", typeof(int));
    
            var isbalanceParameter = isbalance.HasValue ?
                new ObjectParameter("Isbalance", isbalance) :
                new ObjectParameter("Isbalance", typeof(bool));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReserveAccountShort_Select_Result>("usp_ReserveAccountShort_Select", reserveAccountIdParameter, reserveAccountTypeIdParameter, isbalanceParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ReserveAccountTransaction_Select_Result> usp_ReserveAccountTransaction_Select(Nullable<int> reserveAccountTransactionId, Nullable<int> reserveAccountId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var reserveAccountTransactionIdParameter = reserveAccountTransactionId.HasValue ?
                new ObjectParameter("ReserveAccountTransactionId", reserveAccountTransactionId) :
                new ObjectParameter("ReserveAccountTransactionId", typeof(int));
    
            var reserveAccountIdParameter = reserveAccountId.HasValue ?
                new ObjectParameter("ReserveAccountId", reserveAccountId) :
                new ObjectParameter("ReserveAccountId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReserveAccountTransaction_Select_Result>("usp_ReserveAccountTransaction_Select", reserveAccountTransactionIdParameter, reserveAccountIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ReserveAccountType_Select_Result> usp_ReserveAccountType_Select(Nullable<int> reserveAccountTypeId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var reserveAccountTypeIdParameter = reserveAccountTypeId.HasValue ?
                new ObjectParameter("ReserveAccountTypeId", reserveAccountTypeId) :
                new ObjectParameter("ReserveAccountTypeId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReserveAccountType_Select_Result>("usp_ReserveAccountType_Select", reserveAccountTypeIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_Branch_Select_Result> usp_Branch_Select(Nullable<int> branchId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Branch_Select_Result>("usp_Branch_Select", branchIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_Organize_Select_Result> usp_Organize_Select(Nullable<int> organizeId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var organizeIdParameter = organizeId.HasValue ?
                new ObjectParameter("OrganizeId", organizeId) :
                new ObjectParameter("OrganizeId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Organize_Select_Result>("usp_Organize_Select", organizeIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_DebtAppDetail_Select_Result> usp_DebtAppDetail_Select(string applicationCode, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationCodeParameter = applicationCode != null ?
                new ObjectParameter("ApplicationCode", applicationCode) :
                new ObjectParameter("ApplicationCode", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DebtAppDetail_Select_Result>("usp_DebtAppDetail_Select", applicationCodeParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_Refund_Select_Result> usp_Refund_Select(Nullable<int> refundId, Nullable<int> refundRequestId, Nullable<int> reserveAccountId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var refundIdParameter = refundId.HasValue ?
                new ObjectParameter("RefundId", refundId) :
                new ObjectParameter("RefundId", typeof(int));
    
            var refundRequestIdParameter = refundRequestId.HasValue ?
                new ObjectParameter("RefundRequestId", refundRequestId) :
                new ObjectParameter("RefundRequestId", typeof(int));
    
            var reserveAccountIdParameter = reserveAccountId.HasValue ?
                new ObjectParameter("ReserveAccountId", reserveAccountId) :
                new ObjectParameter("ReserveAccountId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Refund_Select_Result>("usp_Refund_Select", refundIdParameter, refundRequestIdParameter, reserveAccountIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_RefundApproveStatus_Select_Result> usp_RefundApproveStatus_Select(Nullable<int> refundApproveStatusId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var refundApproveStatusIdParameter = refundApproveStatusId.HasValue ?
                new ObjectParameter("RefundApproveStatusId", refundApproveStatusId) :
                new ObjectParameter("RefundApproveStatusId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RefundApproveStatus_Select_Result>("usp_RefundApproveStatus_Select", refundApproveStatusIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_RefundCause_Select_Result> usp_RefundCause_Select(Nullable<int> refundCauseId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var refundCauseIdParameter = refundCauseId.HasValue ?
                new ObjectParameter("RefundCauseId", refundCauseId) :
                new ObjectParameter("RefundCauseId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RefundCause_Select_Result>("usp_RefundCause_Select", refundCauseIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_RefundRequest_Insert_Result> usp_RefundRequest_Insert(Nullable<int> reserveAccountId, string applicationCode, Nullable<int> createdByUserId)
        {
            var reserveAccountIdParameter = reserveAccountId.HasValue ?
                new ObjectParameter("ReserveAccountId", reserveAccountId) :
                new ObjectParameter("ReserveAccountId", typeof(int));
    
            var applicationCodeParameter = applicationCode != null ?
                new ObjectParameter("ApplicationCode", applicationCode) :
                new ObjectParameter("ApplicationCode", typeof(string));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RefundRequest_Insert_Result>("usp_RefundRequest_Insert", reserveAccountIdParameter, applicationCodeParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_RefundRequest_Select_Result> usp_RefundRequest_Select(Nullable<int> refundRequestId, string refundRequestCode, string refundTypeIdList, string refundApproveStatusIdList, Nullable<int> userId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var refundRequestIdParameter = refundRequestId.HasValue ?
                new ObjectParameter("RefundRequestId", refundRequestId) :
                new ObjectParameter("RefundRequestId", typeof(int));
    
            var refundRequestCodeParameter = refundRequestCode != null ?
                new ObjectParameter("RefundRequestCode", refundRequestCode) :
                new ObjectParameter("RefundRequestCode", typeof(string));
    
            var refundTypeIdListParameter = refundTypeIdList != null ?
                new ObjectParameter("RefundTypeIdList", refundTypeIdList) :
                new ObjectParameter("RefundTypeIdList", typeof(string));
    
            var refundApproveStatusIdListParameter = refundApproveStatusIdList != null ?
                new ObjectParameter("RefundApproveStatusIdList", refundApproveStatusIdList) :
                new ObjectParameter("RefundApproveStatusIdList", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RefundRequest_Select_Result>("usp_RefundRequest_Select", refundRequestIdParameter, refundRequestCodeParameter, refundTypeIdListParameter, refundApproveStatusIdListParameter, userIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_RefundRequest_Update_Result> usp_RefundRequest_Update(Nullable<int> refundRequestId, Nullable<int> updateByUserId, Nullable<int> refundTypeId, string chequeName, string chequeAddress1, string subDistrict_ID, Nullable<int> refundCauseId, Nullable<int> bankId, string bankAccount, string bankAccountName, Nullable<double> amount, string requestRemark)
        {
            var refundRequestIdParameter = refundRequestId.HasValue ?
                new ObjectParameter("RefundRequestId", refundRequestId) :
                new ObjectParameter("RefundRequestId", typeof(int));
    
            var updateByUserIdParameter = updateByUserId.HasValue ?
                new ObjectParameter("UpdateByUserId", updateByUserId) :
                new ObjectParameter("UpdateByUserId", typeof(int));
    
            var refundTypeIdParameter = refundTypeId.HasValue ?
                new ObjectParameter("RefundTypeId", refundTypeId) :
                new ObjectParameter("RefundTypeId", typeof(int));
    
            var chequeNameParameter = chequeName != null ?
                new ObjectParameter("ChequeName", chequeName) :
                new ObjectParameter("ChequeName", typeof(string));
    
            var chequeAddress1Parameter = chequeAddress1 != null ?
                new ObjectParameter("ChequeAddress1", chequeAddress1) :
                new ObjectParameter("ChequeAddress1", typeof(string));
    
            var subDistrict_IDParameter = subDistrict_ID != null ?
                new ObjectParameter("SubDistrict_ID", subDistrict_ID) :
                new ObjectParameter("SubDistrict_ID", typeof(string));
    
            var refundCauseIdParameter = refundCauseId.HasValue ?
                new ObjectParameter("RefundCauseId", refundCauseId) :
                new ObjectParameter("RefundCauseId", typeof(int));
    
            var bankIdParameter = bankId.HasValue ?
                new ObjectParameter("BankId", bankId) :
                new ObjectParameter("BankId", typeof(int));
    
            var bankAccountParameter = bankAccount != null ?
                new ObjectParameter("BankAccount", bankAccount) :
                new ObjectParameter("BankAccount", typeof(string));
    
            var bankAccountNameParameter = bankAccountName != null ?
                new ObjectParameter("BankAccountName", bankAccountName) :
                new ObjectParameter("BankAccountName", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(double));
    
            var requestRemarkParameter = requestRemark != null ?
                new ObjectParameter("RequestRemark", requestRemark) :
                new ObjectParameter("RequestRemark", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RefundRequest_Update_Result>("usp_RefundRequest_Update", refundRequestIdParameter, updateByUserIdParameter, refundTypeIdParameter, chequeNameParameter, chequeAddress1Parameter, subDistrict_IDParameter, refundCauseIdParameter, bankIdParameter, bankAccountParameter, bankAccountNameParameter, amountParameter, requestRemarkParameter);
        }
    
        public virtual ObjectResult<usp_RefundRequestApprove_Update_Result> usp_RefundRequestApprove_Update(Nullable<int> refundRequestId, Nullable<int> refundApproveStatusId, Nullable<int> refundUnApproveCauseId, string approveRemark, Nullable<int> approveByUserId)
        {
            var refundRequestIdParameter = refundRequestId.HasValue ?
                new ObjectParameter("RefundRequestId", refundRequestId) :
                new ObjectParameter("RefundRequestId", typeof(int));
    
            var refundApproveStatusIdParameter = refundApproveStatusId.HasValue ?
                new ObjectParameter("RefundApproveStatusId", refundApproveStatusId) :
                new ObjectParameter("RefundApproveStatusId", typeof(int));
    
            var refundUnApproveCauseIdParameter = refundUnApproveCauseId.HasValue ?
                new ObjectParameter("RefundUnApproveCauseId", refundUnApproveCauseId) :
                new ObjectParameter("RefundUnApproveCauseId", typeof(int));
    
            var approveRemarkParameter = approveRemark != null ?
                new ObjectParameter("ApproveRemark", approveRemark) :
                new ObjectParameter("ApproveRemark", typeof(string));
    
            var approveByUserIdParameter = approveByUserId.HasValue ?
                new ObjectParameter("ApproveByUserId", approveByUserId) :
                new ObjectParameter("ApproveByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RefundRequestApprove_Update_Result>("usp_RefundRequestApprove_Update", refundRequestIdParameter, refundApproveStatusIdParameter, refundUnApproveCauseIdParameter, approveRemarkParameter, approveByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_RefundRequestDocument_Select_Result> usp_RefundRequestDocument_Select(Nullable<int> refundRequestId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var refundRequestIdParameter = refundRequestId.HasValue ?
                new ObjectParameter("RefundRequestId", refundRequestId) :
                new ObjectParameter("RefundRequestId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RefundRequestDocument_Select_Result>("usp_RefundRequestDocument_Select", refundRequestIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_RefundRequestReport_Select_Result> usp_RefundRequestReport_Select(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RefundRequestReport_Select_Result>("usp_RefundRequestReport_Select", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<usp_RefundType_Select_Result> usp_RefundType_Select(Nullable<int> refundTypeId, string refundType, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var refundTypeIdParameter = refundTypeId.HasValue ?
                new ObjectParameter("RefundTypeId", refundTypeId) :
                new ObjectParameter("RefundTypeId", typeof(int));
    
            var refundTypeParameter = refundType != null ?
                new ObjectParameter("RefundType", refundType) :
                new ObjectParameter("RefundType", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RefundType_Select_Result>("usp_RefundType_Select", refundTypeIdParameter, refundTypeParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_RefundUnApproveCause_Select_Result> usp_RefundUnApproveCause_Select(Nullable<int> refundUnApproveCauseId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var refundUnApproveCauseIdParameter = refundUnApproveCauseId.HasValue ?
                new ObjectParameter("RefundUnApproveCauseId", refundUnApproveCauseId) :
                new ObjectParameter("RefundUnApproveCauseId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RefundUnApproveCause_Select_Result>("usp_RefundUnApproveCause_Select", refundUnApproveCauseIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ReserveAccountForAutoComplete_Select_Result> usp_ReserveAccountForAutoComplete_Select(Nullable<int> reserveAccountId, Nullable<int> reserveAccountTypeId, Nullable<bool> isbalance, string searchIndex, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var reserveAccountIdParameter = reserveAccountId.HasValue ?
                new ObjectParameter("ReserveAccountId", reserveAccountId) :
                new ObjectParameter("ReserveAccountId", typeof(int));
    
            var reserveAccountTypeIdParameter = reserveAccountTypeId.HasValue ?
                new ObjectParameter("ReserveAccountTypeId", reserveAccountTypeId) :
                new ObjectParameter("ReserveAccountTypeId", typeof(int));
    
            var isbalanceParameter = isbalance.HasValue ?
                new ObjectParameter("Isbalance", isbalance) :
                new ObjectParameter("Isbalance", typeof(bool));
    
            var searchIndexParameter = searchIndex != null ?
                new ObjectParameter("SearchIndex", searchIndex) :
                new ObjectParameter("SearchIndex", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReserveAccountForAutoComplete_Select_Result>("usp_ReserveAccountForAutoComplete_Select", reserveAccountIdParameter, reserveAccountTypeIdParameter, isbalanceParameter, searchIndexParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ReserveAccountTransfer_Update_Result> usp_ReserveAccountTransfer_Update(Nullable<int> reserveAccountIdFrom, Nullable<int> reserveAccountIdTo, Nullable<double> transferAmount, Nullable<int> transferCauseId, string transferRemark, Nullable<int> createdByUserId)
        {
            var reserveAccountIdFromParameter = reserveAccountIdFrom.HasValue ?
                new ObjectParameter("ReserveAccountIdFrom", reserveAccountIdFrom) :
                new ObjectParameter("ReserveAccountIdFrom", typeof(int));
    
            var reserveAccountIdToParameter = reserveAccountIdTo.HasValue ?
                new ObjectParameter("ReserveAccountIdTo", reserveAccountIdTo) :
                new ObjectParameter("ReserveAccountIdTo", typeof(int));
    
            var transferAmountParameter = transferAmount.HasValue ?
                new ObjectParameter("TransferAmount", transferAmount) :
                new ObjectParameter("TransferAmount", typeof(double));
    
            var transferCauseIdParameter = transferCauseId.HasValue ?
                new ObjectParameter("TransferCauseId", transferCauseId) :
                new ObjectParameter("TransferCauseId", typeof(int));
    
            var transferRemarkParameter = transferRemark != null ?
                new ObjectParameter("TransferRemark", transferRemark) :
                new ObjectParameter("TransferRemark", typeof(string));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReserveAccountTransfer_Update_Result>("usp_ReserveAccountTransfer_Update", reserveAccountIdFromParameter, reserveAccountIdToParameter, transferAmountParameter, transferCauseIdParameter, transferRemarkParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_TransferCause_Select_Result> usp_TransferCause_Select(Nullable<int> transferCauseId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var transferCauseIdParameter = transferCauseId.HasValue ?
                new ObjectParameter("TransferCauseId", transferCauseId) :
                new ObjectParameter("TransferCauseId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TransferCause_Select_Result>("usp_TransferCause_Select", transferCauseIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_RegenBillPaymentAnSentSMS_Insert_Result> usp_RegenBillPaymentAnSentSMS_Insert(string debtIdList, Nullable<int> createdByUserId)
        {
            var debtIdListParameter = debtIdList != null ?
                new ObjectParameter("DebtIdList", debtIdList) :
                new ObjectParameter("DebtIdList", typeof(string));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RegenBillPaymentAnSentSMS_Insert_Result>("usp_RegenBillPaymentAnSentSMS_Insert", debtIdListParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_DebtForRegenBillPayment_Select_Result> usp_DebtForRegenBillPayment_Select(Nullable<System.DateTime> debtPeriod, string reserveAccountIdList, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var debtPeriodParameter = debtPeriod.HasValue ?
                new ObjectParameter("DebtPeriod", debtPeriod) :
                new ObjectParameter("DebtPeriod", typeof(System.DateTime));
    
            var reserveAccountIdListParameter = reserveAccountIdList != null ?
                new ObjectParameter("ReserveAccountIdList", reserveAccountIdList) :
                new ObjectParameter("ReserveAccountIdList", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DebtForRegenBillPayment_Select_Result>("usp_DebtForRegenBillPayment_Select", debtPeriodParameter, reserveAccountIdListParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_BillPaymentHistory_Select_Result> usp_BillPaymentHistory_Select(string mobileNumber, string serachPayerName, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var serachPayerNameParameter = serachPayerName != null ?
                new ObjectParameter("SerachPayerName", serachPayerName) :
                new ObjectParameter("SerachPayerName", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BillPaymentHistory_Select_Result>("usp_BillPaymentHistory_Select", mobileNumberParameter, serachPayerNameParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_BillPaymentForSMSFail_Select_Result> usp_BillPaymentForSMSFail_Select(Nullable<System.DateTime> period, Nullable<int> payerBranchId, Nullable<int> payerStudyAreaId, Nullable<int> saleEmpolyeeId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            var payerBranchIdParameter = payerBranchId.HasValue ?
                new ObjectParameter("PayerBranchId", payerBranchId) :
                new ObjectParameter("PayerBranchId", typeof(int));
    
            var payerStudyAreaIdParameter = payerStudyAreaId.HasValue ?
                new ObjectParameter("PayerStudyAreaId", payerStudyAreaId) :
                new ObjectParameter("PayerStudyAreaId", typeof(int));
    
            var saleEmpolyeeIdParameter = saleEmpolyeeId.HasValue ?
                new ObjectParameter("SaleEmpolyeeId", saleEmpolyeeId) :
                new ObjectParameter("SaleEmpolyeeId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BillPaymentForSMSFail_Select_Result>("usp_BillPaymentForSMSFail_Select", periodParameter, payerBranchIdParameter, payerStudyAreaIdParameter, saleEmpolyeeIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_RefundRequestForReport_Select_Result> usp_RefundRequestForReport_Select(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RefundRequestForReport_Select_Result>("usp_RefundRequestForReport_Select", dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<usp_ReportBillPaymentForBillFollow_Select_Result> usp_ReportBillPaymentForBillFollow_Select(Nullable<int> billPaymentId, Nullable<System.DateTime> period, Nullable<int> payerBranchId, Nullable<int> payerStudyAreaId, Nullable<int> saleEmpolyeeId, Nullable<int> reserveAccountId, Nullable<bool> isDummy, string billPaymentStatusIdList, string billPaymentSMSStatusIdList, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var billPaymentIdParameter = billPaymentId.HasValue ?
                new ObjectParameter("BillPaymentId", billPaymentId) :
                new ObjectParameter("BillPaymentId", typeof(int));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            var payerBranchIdParameter = payerBranchId.HasValue ?
                new ObjectParameter("PayerBranchId", payerBranchId) :
                new ObjectParameter("PayerBranchId", typeof(int));
    
            var payerStudyAreaIdParameter = payerStudyAreaId.HasValue ?
                new ObjectParameter("PayerStudyAreaId", payerStudyAreaId) :
                new ObjectParameter("PayerStudyAreaId", typeof(int));
    
            var saleEmpolyeeIdParameter = saleEmpolyeeId.HasValue ?
                new ObjectParameter("SaleEmpolyeeId", saleEmpolyeeId) :
                new ObjectParameter("SaleEmpolyeeId", typeof(int));
    
            var reserveAccountIdParameter = reserveAccountId.HasValue ?
                new ObjectParameter("ReserveAccountId", reserveAccountId) :
                new ObjectParameter("ReserveAccountId", typeof(int));
    
            var isDummyParameter = isDummy.HasValue ?
                new ObjectParameter("IsDummy", isDummy) :
                new ObjectParameter("IsDummy", typeof(bool));
    
            var billPaymentStatusIdListParameter = billPaymentStatusIdList != null ?
                new ObjectParameter("BillPaymentStatusIdList", billPaymentStatusIdList) :
                new ObjectParameter("BillPaymentStatusIdList", typeof(string));
    
            var billPaymentSMSStatusIdListParameter = billPaymentSMSStatusIdList != null ?
                new ObjectParameter("BillPaymentSMSStatusIdList", billPaymentSMSStatusIdList) :
                new ObjectParameter("BillPaymentSMSStatusIdList", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReportBillPaymentForBillFollow_Select_Result>("usp_ReportBillPaymentForBillFollow_Select", billPaymentIdParameter, periodParameter, payerBranchIdParameter, payerStudyAreaIdParameter, saleEmpolyeeIdParameter, reserveAccountIdParameter, isDummyParameter, billPaymentStatusIdListParameter, billPaymentSMSStatusIdListParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_BillPaymentForBillFollow_Select_Result> usp_BillPaymentForBillFollow_Select(Nullable<int> billPaymentId, Nullable<System.DateTime> period, Nullable<int> payerBranchId, Nullable<int> payerStudyAreaId, Nullable<int> saleEmpolyeeId, Nullable<int> reserveAccountId, Nullable<bool> isDummy, string billPaymentStatusIdList, string billPaymentSMSStatusIdList, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var billPaymentIdParameter = billPaymentId.HasValue ?
                new ObjectParameter("BillPaymentId", billPaymentId) :
                new ObjectParameter("BillPaymentId", typeof(int));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            var payerBranchIdParameter = payerBranchId.HasValue ?
                new ObjectParameter("PayerBranchId", payerBranchId) :
                new ObjectParameter("PayerBranchId", typeof(int));
    
            var payerStudyAreaIdParameter = payerStudyAreaId.HasValue ?
                new ObjectParameter("PayerStudyAreaId", payerStudyAreaId) :
                new ObjectParameter("PayerStudyAreaId", typeof(int));
    
            var saleEmpolyeeIdParameter = saleEmpolyeeId.HasValue ?
                new ObjectParameter("SaleEmpolyeeId", saleEmpolyeeId) :
                new ObjectParameter("SaleEmpolyeeId", typeof(int));
    
            var reserveAccountIdParameter = reserveAccountId.HasValue ?
                new ObjectParameter("ReserveAccountId", reserveAccountId) :
                new ObjectParameter("ReserveAccountId", typeof(int));
    
            var isDummyParameter = isDummy.HasValue ?
                new ObjectParameter("IsDummy", isDummy) :
                new ObjectParameter("IsDummy", typeof(bool));
    
            var billPaymentStatusIdListParameter = billPaymentStatusIdList != null ?
                new ObjectParameter("BillPaymentStatusIdList", billPaymentStatusIdList) :
                new ObjectParameter("BillPaymentStatusIdList", typeof(string));
    
            var billPaymentSMSStatusIdListParameter = billPaymentSMSStatusIdList != null ?
                new ObjectParameter("BillPaymentSMSStatusIdList", billPaymentSMSStatusIdList) :
                new ObjectParameter("BillPaymentSMSStatusIdList", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BillPaymentForBillFollow_Select_Result>("usp_BillPaymentForBillFollow_Select", billPaymentIdParameter, periodParameter, payerBranchIdParameter, payerStudyAreaIdParameter, saleEmpolyeeIdParameter, reserveAccountIdParameter, isDummyParameter, billPaymentStatusIdListParameter, billPaymentSMSStatusIdListParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_DebtForRegenBillPayment_Select_V2_Result> usp_DebtForRegenBillPayment_Select_V2(Nullable<System.DateTime> debtPeriod, Nullable<int> billPaymentId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var debtPeriodParameter = debtPeriod.HasValue ?
                new ObjectParameter("DebtPeriod", debtPeriod) :
                new ObjectParameter("DebtPeriod", typeof(System.DateTime));
    
            var billPaymentIdParameter = billPaymentId.HasValue ?
                new ObjectParameter("BillPaymentId", billPaymentId) :
                new ObjectParameter("BillPaymentId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DebtForRegenBillPayment_Select_V2_Result>("usp_DebtForRegenBillPayment_Select_V2", debtPeriodParameter, billPaymentIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_BillPaymentSMSInstant_Select_Result> usp_BillPaymentSMSInstant_Select(Nullable<int> sMSInstantId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var sMSInstantIdParameter = sMSInstantId.HasValue ?
                new ObjectParameter("SMSInstantId", sMSInstantId) :
                new ObjectParameter("SMSInstantId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BillPaymentSMSInstant_Select_Result>("usp_BillPaymentSMSInstant_Select", sMSInstantIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_BillPaymentSMSInstant_Update_Result> usp_BillPaymentSMSInstant_Update(Nullable<int> sMSInstantId, string referanceId, string jsonResult)
        {
            var sMSInstantIdParameter = sMSInstantId.HasValue ?
                new ObjectParameter("SMSInstantId", sMSInstantId) :
                new ObjectParameter("SMSInstantId", typeof(int));
    
            var referanceIdParameter = referanceId != null ?
                new ObjectParameter("ReferanceId", referanceId) :
                new ObjectParameter("ReferanceId", typeof(string));
    
            var jsonResultParameter = jsonResult != null ?
                new ObjectParameter("JsonResult", jsonResult) :
                new ObjectParameter("JsonResult", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BillPaymentSMSInstant_Update_Result>("usp_BillPaymentSMSInstant_Update", sMSInstantIdParameter, referanceIdParameter, jsonResultParameter);
        }
    
        public virtual ObjectResult<usp_BillPaymentYearAndSentSMS_Insert_Result> usp_BillPaymentYearAndSentSMS_Insert(string applicationCode, string mobileNumber, Nullable<System.DateTime> period, Nullable<int> userId)
        {
            var applicationCodeParameter = applicationCode != null ?
                new ObjectParameter("ApplicationCode", applicationCode) :
                new ObjectParameter("ApplicationCode", typeof(string));
    
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BillPaymentYearAndSentSMS_Insert_Result>("usp_BillPaymentYearAndSentSMS_Insert", applicationCodeParameter, mobileNumberParameter, periodParameter, userIdParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationDetailForGenerateBillPeriodTypeYear_Select_Result> usp_ApplicationDetailForGenerateBillPeriodTypeYear_Select(string applicationCode, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationCodeParameter = applicationCode != null ?
                new ObjectParameter("ApplicationCode", applicationCode) :
                new ObjectParameter("ApplicationCode", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationDetailForGenerateBillPeriodTypeYear_Select_Result>("usp_ApplicationDetailForGenerateBillPeriodTypeYear_Select", applicationCodeParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    }
}
