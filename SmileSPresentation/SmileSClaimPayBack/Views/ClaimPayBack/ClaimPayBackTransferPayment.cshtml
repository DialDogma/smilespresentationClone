
@{
    ViewBag.Title = "บันทึกการโอนเงิน ฝ่ายการเงิน";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<form>
    <div class="box box-primary" style="margin-top:0.8%;border-color:#65aadb">
        <div class="box-body">
            <!-- Date -->
            <div class="form-group">
                <div class="row">
                    <div class="col-sm-3">
                        <label>วันที่สาขาส่งเงิน:</label>

                        <div class="input-group date">
                            <div class="input-group-addon">
                                <i class="fa fa-calendar"></i>
                            </div>
                            <input type="text" name="dphDateStart" data-date-language="th-th" class="form-control" id="dphDateStart" value="" style="width:100%">
                        </div>
                    </div>
                    <div class="col-sm-3">
                        <label>ถึงวันที่:</label>
                        <div class="input-group date">
                            <div class="input-group-addon">
                                <i class="fa fa-calendar"></i>
                            </div>
                            <input type="text" name="dphDateEnd" data-date-language="th-th" class="form-control" id="dphDateEnd" style="width:100%">
                        </div>
                    </div>
                    <div class="col-sm-3">
                        <label>ประเภทงานเคลม</label>
                        <select class="form-control select2" id="ddlClaimGroupType">
                            <option value="-1">---โปรดระบุ---</option>
                            @{
                                foreach (var item in ViewBag.ClaimGroupType)
                                {
                                    <option value="@item.ClaimGroupTypeId">@item.ClaimGroupType</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="col-sm-2" style="padding-top:25px">
                        <button type="button" class="btn btn-block bg-primary" id="btnSearch" style="color:#ffffff">ค้นหา</button>
                    </div>
                </div>
                <div class="row" style="margin-top:15px">
                    <div class="col-sm-12">
                        <table id="dtReceipt" class="table table-bordered dataTable table-hover"></table>
                    </div>
                </div>
                <div class="row" style="padding-top:6px; text-align:center;">
                    <div class="col-sm-12"></div>
                    <span class="label" style="background:#65aadb; color:white; font-size:16px;">
                        <label><b><i class="fa fa-calculator"></i> ยอดเงินรวม: </b> </label>
                        <span id="spnTotal">0</span>
                    </span>
                </div>
                <div class="row" style="margin-top:20px; text-align:right">
                    <div class="col-sm-12">
                        <button type="button" class="btn  bg-olive" id="btnSaveTransfer" style="color:#ffffff; min-width:20px; min-height:20px" disabled><i class="fa fa-save"></i> บันทึกการจ่ายเงิน</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

@section ViewSpecificJavascript
{
    <script type="text/javascript">

    //---------------------------------- Global Value ------------------------------------/
        //var totalPrices = 0
        var count = 0;
        var rowDT = 0;
        var totalDT = 0;
        var ListCheckBox = [];
        var ListCheckBoxAll = [];
        var totalAmount = 0;
        var amountDecreed = 0;
        var amountIncreed = 0;

    //---------------------------------- Call Function -------------------------------------/
        $(function () {

            $('.select2').select2();
            //---------------------------------Date-----------------------------------//
            var date = new Date();
            var today = new Date(date.getFullYear(), date.getMonth(), date.getDate());

            var dateDefualt = {
                format: 'dd/mm/yyyy',
                autoclose: true,
            }

            $('#dphDateStart').datepicker(dateDefualt)

            $('#dphDateEnd').datepicker({
                autoclose: true,
                format: 'dd/mm/yyyy',
            })

            $('#dphDateStart,#dphDateEnd ').datepicker('setDate', today);


            //-------------------------------Search--------------------------------//
            $('#btnSearch').click(function (e) {
            e.preventDefault();

                    ClearCheckboxAll()
                //$('#btnSave').show()
                if (isValidate()) {
                    DoLoadReceipt()
                }
            });

            $('#btnSaveTransfer').click(function (e) {
                e.preventDefault();

                if (IsValidateForTransfer()) {
                    //ConfirmTransfer
                    ConfirmTranfer();

                }
            });

            //---------------------------- Validate ------------------------------//
            const isValidate = () => {

                if ($('#ddlClaimGroupType').val() == -1) {
                    swal('ตรวจสอบ', 'กรุณาเลือกประเภทงานเคลม', 'error');
                    return false
                }
                return true
            }
            //event tableQueueAssignDetail paging
            $('#dtReceipt').on('page.dt', function () {
                if (ListCheckBoxAll.length === totalDT) {
                    $('table[id="dtReceipt"]').find(".chk-row-select").prop('checked', true);
                    $('table[id="dtReceipt"]').find(".chk-row-select-all").prop('checked', true);
                } else {
                    $('table[id="dtReceipt"]').find(".chk-row-select-all").prop('checked', false);
                    //$('#countSelect').text('');
                    //$('#textSelectAll').hide();
                    //$('#textSelectAllClear').hide();
                    for (var i = 0; i < ListCheckBox.length; i++) {
                        if (!(ListCheckBoxAll.includes(ListCheckBox[i]))) {
                            ListCheckBoxAll.push(ListCheckBox[i]);
                        }
                    }
                    count = 0;
                    ListCheckBox = [];
                }
                //console.log(ListCheckBoxAll)
            });

            /*checkbox in datatables change*/
            $('#dtReceipt').on('change', 'input[type="checkbox"]', function (e) {
                let table = $('#dtReceipt').DataTable();
                let rows = table.rows().nodes();
                switch (this.className) {
                    case 'chk-row-select-all':
                        if (this.checked) {

                            $('input[class="chk-row-select"]', rows).prop('checked', true).change();
                        } else {
                            $('input[class="chk-row-select"]', rows).prop('checked', false).change();
                        }
                        break;
                    case 'chk-row-select':
                        if (this.checked) {
                            let count = 0;
                            const value = this.value;
                            var checkedCount = $("#dtReceipt input[class='chk-row-select']:checked").length;

                            const myArr = value.split("//");

                            //adds one or more elements to the end of an array and returns the new length of the array.
                            if (!ListCheckBox.includes(myArr[0])) ListCheckBox.push(myArr[0]);
                            if (!ListCheckBoxAll.includes(myArr[0])) {
                                ListCheckBoxAll.push(myArr[0])
                                amountIncreed += parseFloat(myArr[1]);
                            };

                            //check count data equal rows.length then checkbox-all is checked

                            if (!(checkedCount === rows.length)) {
                                $('table[id="dtReceipt"]').find(".chk-row-select-all").prop('checked', false);
                            } else {
                                $('table[id="dtReceipt"]').find(".chk-row-select-all").prop('checked', true);
                            }



                            //$('#textSelectAllClear').show()
                        } else {
                            const value = this.value;

                            const myArr = value.split("//");


                            //replaces 1 element at indexOd() returnValue index
                            ListCheckBox.splice(ListCheckBox.indexOf(myArr[0]), 1);
                            ListCheckBoxAll.splice(ListCheckBoxAll.indexOf(myArr[0]), 1);


                            //check count data equal rows.length then checkbox-all is checked
                            if (!(ListCheckBox.length === rows.length)) {
                                $('table[id="dtReceipt"]').find(".chk-row-select-all").prop('checked', false);
                                //$('#textSelectAllClear').hide();
                            } else {
                                $('table[id="dtReceipt"]').find(".chk-row-select-all").prop('checked', true);
                            }

                            amountDecreed += parseFloat(myArr[1]);


                        }
                        break;
                    default:
                }

                totalAmount = amountIncreed - amountDecreed

                $("#spnTotal").text(numberWithCommas(totalAmount.toFixed(2)));

                if (ListCheckBoxAll.length === 0) {
                    $('#btnSaveTransfer').attr('disabled', true);
                }
                else {
                    $('#btnSaveTransfer').attr('disabled', false);
                }

            });

        })



         //----------------------------Data Table------------------------------//

        function DoLoadReceipt() {
            $('#dtReceipt').empty();
            var t = $('#dtReceipt').dataTable({
                pageLength: 10,
                processing: true,
                serverSide: true,
                autoWidth: false,
                responsive: true,
                destroy: true,
                "order": [[0, "desc"]],
                "info": true,
                "lengthMenu": [[10, 25, 50, 100, 9999999], [10, 25, 50, 100, "All"]],
                searching: false,
                ajax: {
                    url: '@Url.Action("GetClaimPaymentReceiptGroup", "ClaimPayBack")',

                    type: 'POST',
                    async: true,
                    data: function (d) {
                        d.draw = d.draw;
                        d.pageSize = d.length;
                        d.indexStart = d.start;
                        d.sortField = d.columns[d.order[0].column].data;
                        d.orderType = d.order[0].dir;
                        d.searchDetail = d.search;

                        d.claimGroupTypeId = $('#ddlClaimGroupType').val();
                        d.dateStart = $('#dphDateStart').val();
                        d.dateEnd = $('#dphDateEnd').val();
                    },
                     dataSrc: function (json) {
                         rowDT = json.data.length;
                         count = 0;
                        totalDT = json.recordsTotal;
                        return json.data;
                    },

                },
                columns: [
                    //{
                    //    title: 'ทั้งหมด', data: null, className: 'h-dt-center text-font-small select-checkbox', orderable: false,
                    //    mRender: function (data, type, row) {
                    //        if (type === 'display') {
                    //            return '<input type="checkbox" class="editor-active">';
                    //        }
                    //        return data;
                    //    },
                    //},
                    {
                        title: '<label>เลือก</label><input id="chk-all" name="chk-all" style="cursor:pointer"  class="chk-row-select-all" type="checkbox" />',
                        data: null,
                        orderable: false,
                        className: 'th-center td-center-checkbox nosort text-center',
                        width: "33px",
                        render: function (data) {
                            let Ischecked = "";
                            if (ListCheckBoxAll.includes(data.ClaimPayBackId.toString())) {
                                count++
                                Ischecked = "checked"
                            }
                            //if (!(totalDT === ListCheckBoxAll.length)) {
                            //    if (count === rowDT) {
                            //        $('input[class="chk-row-select-all"]').prop('checked', true);
                            //        //$('#countSelect').text(`คุณเลือกข้อมูลทั้ง ${rowDT} รายการในหน้านี้`)
                            //        //$('#textSelectAll').text(`เลือกทั้งหมด ${totalDT}`).show();
                            //        rowDT = 0;
                            //        count = 0;
                            //    }
                            //}


                            if (count === rowDT) {
                                $('input[class="chk-row-select-all"]').prop('checked', true);
                                //$('#countSelect').text(`คุณเลือกข้อมูลทั้ง ${rowDT} รายการในหน้านี้`)
                                rowDT = 0;
                                count = 0;
                            } else {
                                $('input[class="chk-row-select-all"]').prop('checked', false);
                            }

                            return `<input type="checkbox" style="cursor:pointer"  class="chk-row-select" ${Ischecked} id="chkdtrow_${data.ClaimPayBackId}" name="chkdtrow_${data.ClaimPayBackId}" value="${data.ClaimPayBackId}//${data.Amount}">`;
                        }
                    },

                    { title: 'รหัสรายการ', data: 'ClaimPayBackCode', className: 'h-dt-center text-font-small' },
                    { title: 'สาขา', data: 'Branch', className: 'h-dt-center text-font-small' },
                    {
                        title: 'ยอดเงินรวม',
                        data: 'Amount',
                        className: 'h-dt-center text-font-small text-right',
                        mRender: function (data) {
                            return  numberWithCommas(data.toFixed(2));
                        }
                    },
                    {
                        title: 'วันที่ทำรายการ', data: 'CreatedDate', className: 'h-dt-center text-font-small', width: '15%',
                        mRender: function (data) {
                            return toBuddhistYear(moment(data), 'DD/MM/YYYY HH:mm:ss');
                        }
                    },
                    {
                        title: 'เรียกดูรายละเอียด', data: null, className: 'h-dt-center text-center', width: '20%',
                        mRender: (data, type, full) => {
                            return `<button type="button"  class="btn btn-info btn-sm" id="btnDetail"><i class="glyphicon glyphicon glyphicon-eye-open ColorWhite"></i> ดูรายละเอียด</button>`;
                        }

                    },],
                bLengthChange: true,

            });

            window.onresize = function () {
                t.columns.adjust().responsive.recalc();
            };

            $('#dtReceipt tbody').on('click', 'td button[id="btnDetail"]', function () {

                var table = $('#dtReceipt').DataTable();
                 var data = table.row($(this).closest('tr')).data()
                 let claimPayBackId = data.ClaimPayBackId;

                 let encode = window.btoa(claimPayBackId);

                 let view = `@Url.Action("ClaimPayBackDetail", "ClaimPayBack")?claimPayBackId=${encode}`
                 window.open(view, '_blank');
             });

        }

        const IsValidateForTransfer = () => {

            if (ListCheckBoxAll.length == 0) {
                swal('ตรวจสอบ', 'กรุณาเลือกรายการ ที่ต้องการโอนเงิน', 'warning')
                return false;
            }

            return true;
        }

        const ConfirmTranfer = () => {
            swal({
                title: "ยืนยัน ?",
                text: "ยืนยันการบันทึกรายการ ?",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "ตกลง",
                cancelButtonText: "ยกเลิก",
                closeOnConfirm: false,
                showLoaderOnConfirm: true
            },
                function () {
                    setTimeout(function () {
                        InsertTransfer();
                    },1000)
                    //InsertTransfer
                }
            )
        }


        const InsertTransfer = () => {
             $.ajax({
                type: "POST",
                url: "@Url.Action("InsertTransfer", "ClaimPayBack")",
                data: {
                    claimPayBackIdArray: ListCheckBoxAll,
                    claimGroupTypeId: $('#ddlClaimGroupType').val(),
                },
                dataType: "json",
                async: false,
                 success: function (response) {

                    if (response.IsResult == true) {
                        swal('บันทึกข้อมูล', response.Msg, 'success');
                        ClearCheckboxAll();
                        DoLoadReceipt();

                         var chat = $.connection.myHub;
                         //Start Connection
                         $.connection.hub.start().done(function () {
                             chat.server.sendNotice("", "");
                                chat.server.joinGroup();
                            });

                    }
                    else {
                        swal('ข้อมูลผิดพลาด !!', response.Msg, 'error');
                        //$('#modal-ConfirmTranfer').modal('show');
                    }
                },
                 error: function (jqXHR, exception) {

                    //checkXHRStatus(jqXHR.status);
                }
             });
        }

        const ClearCheckboxAll = () => {
            ListCheckBoxAll = [];
            ListCheckBox = [];
            totalAmount = 0;
            amountDecreed = 0;
            amountIncreed = 0;
            $('#spnTotal').text('0');
            $('table[id="dtReceipt"]').find(".chk-row-select").prop('checked', false);
            $('table[id="dtReceipt"]').find(".chk-row-select-all").prop('checked', false);
            $('#btnSaveTransfer').attr('disabled', true);
        }

        function toBuddhistYear(moment, format) {
            var christianYear = moment.format('YYYY')
            var buddhishYear = (parseInt(christianYear) + 543).toString()
            return moment
                .format(format.replace('YYYY', buddhishYear).replace('YY', buddhishYear.substring(2, 4)))
                .replace(christianYear, buddhishYear)
        }
    </script>
}