@{
    ViewBag.Title = "เพิ่มรายการตั้งเบิกเคลม";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .btn-red2 {
        color: #ffffff;
        background-color: #de5454;
    }

        .btn-red2:hover, .btn-red2:focus {
            color: #ffffff;
            background-color: #ce5151;
        }

    .btn-green2 {
        color: #ffffff;
        background-color: #14b55a;
    }

        .btn-green2:hover, .btn-green2:focus {
            color: #ffffff;
            background-color: #14a368;
        }

    #btnSearch.loading::before {
        content: "";
        display: inline-block;
        width: 1em;
        height: 1em;
        margin-right: 0.5em;
        border: 3px solid white;
        border-radius: 50%;
        border-top-color: transparent;
        animation: spin 0.8s linear infinite;
    }

    @@keyframes spin {
        to {
            transform: rotate(360deg);
        }
    }
</style>

<div class="col">
    <div class="row">
        <div class="col-sm-12">
            <div class="box box-solid">
                <div class="box-header" style="background-color:#2993cc">
                    <h3 class="box-title" style="color:white"><i class="fa fa-search"></i> ค้นหารายการ</h3>
                </div>
                <div class="box-body" style="margin-top:0.5%">
                    <div class="col-sm-12">
                        <div class="row">

                            <div class="col-sm-3">
                                <label>กลุ่มแผนประกัน :</label>
                                <select class="form-control select2" id="ddlProductGroupId">
                                    <option value="-1">---โปรดระบุ---</option>
                                    {
                                    @foreach (var item in ViewBag.ProductGroup)
                                    {
                                        <option value="@item.ProductGroup_ID">@item.ProductGroupDetail</option>
                                    }
                                    }
                                </select>
                            </div>

                            <div class="col-sm-3">
                                <label>ประเภทงานเคลม :</label>
                                <select class="form-control select2" id="ddlClaimGroupTypeId">
                                    <option value="-1">---โปรดระบุ---</option>
                                    {
                                    @foreach (var item in ViewBag.ClaimGroupType)
                                    {
                                        <option value="@item.ClaimGroupTypeId">@item.ClaimGroupType</option>
                                    }
                                    }
                                </select>
                            </div>

                            <div class="col-sm-3">
                                <label>บริษัทประกันภัย :</label>
                                <select class="form-control select2" id="ddlInsuranceId">
                                    <option value="-1">---ทั้งหมด---</option>
                                    {
                                    @foreach (var item in ViewBag.Insurance)
                                    {
                                        <option value="@item.OrganizeId">@item.OrganizeDetail</option>
                                    }
                                    }
                                </select>
                            </div>

                            <div class="col-sm-3" style="margin-top:30px;" id="divchkShowDocument">
                                <input class="checkbox" type="checkbox" id="chkShowDocument">
                                <label>
                                    แสดงรายการที่มีเอกสาร
                                </label>
                            </div>
                        </div>

                        <div class="row" style="margin-top:1%">
                            <div class="col-sm-3">
                                <label>สาขา :</label>
                                <select class="form-control select2" id="ddlBranchId">
                                    @if (ViewBag.checkBranch == true)
                                    {
                                        <option value="-1">---ทั้งหมด---</option>
                                    }
                                    {
                                    @foreach (var item in ViewBag.Branch)
                                    {
                                        <option value="@item.BranchId">@item.Branch</option>
                                    }
                                    }
                                </select>
                            </div>
                            <div class="col-sm-3">
                                <label>ผู้ทำรายการ :</label>
                                <select class="form-control select2" style="width: 100%;" tabindex="-1" aria-hidden="true" id="ddlUserId" name="ddlUserId">
                                    <option value="-1">---ทั้งหมด---</option>
                                    {
                                    @foreach (var item in ViewBag.EmployeeByBranch)
                                    {
                                        <option value="@item.EmployeeCode">@item.EmployeeCode - @item.PersonName</option>
                                    }
                                    }
                                </select>
                            </div>

                            <div class="col-sm-4">
                                <label>คำค้นหา :</label>
                                <input class="form-control" id="txtSearch" type="text" placeholder="ค้นหาจากเลขบ.ส." />
                            </div>

                            <div class="col-sm-2" style="margin-top:25px">
                                <button id="btnSearch" class="btn btn-dropbox btn-block">
                                    <i class="fa fa-search" id="upIcon"></i> ค้นหา
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="box-header" style="background-color:#2993cc;margin-top:1%">
                    <h3 class="box-title" style="color:white"><i class="fa fa-list-ul"></i> ผลการค้นหา</h3>
                </div>
                <div class="box-body">
                    <div class="col-sm-12">
                        <div class="row" style="margin-top:1%">
                            <div class="col-sm-12">
                                <table id="dtBSForCreate" class="table table-bordered table-hover dataTable"></table>
                            </div>
                        </div>
                        <div class="row" style="margin-top:1%">
                            <div class="col-sm-3"></div>
                            <div class="col-sm-3 " style="font-size:17px">
                                <span class="label" style="background-color:#d9e8fc;font-size:16px">
                                    <b class="text-purple"><i class="fa fa-check-square-o"></i> รายการที่เลือก : </b>&nbsp;&nbsp;&nbsp;&nbsp;
                                    <b id="totalSelect" class="text-green"></b><b class="text-purple">&nbsp;&nbsp; รายการ </b>
                                </span>
                            </div>
                            <div class="col-sm-3" style="font-size:18px">
                                <span class="label" style="background-color:#d9ecfb;font-size:16px">
                                    <b class="text-purple"><i class="fa fa-calculator"></i> ยอดเงินรวม : </b>&nbsp;&nbsp;&nbsp;&nbsp;
                                    <b id="totalAmount" class="text-green"></b><b class="text-purple">&nbsp;&nbsp; บาท </b>
                                </span>
                            </div>
                        </div>
                        <hr />
                        <div class="row text-center" style="margin-top:1%">
                            <div class="col-sm-4"></div>
                            <div class="col-sm-2"><button class="btn btn-green2 btn-block" id="btnSave" style="font-size:18px;" disabled><i class="fa fa-check-circle"></i> บันทึก</button></div>
                            <div class="col-sm-2"><button class="btn btn-block btn-red2" id="btnCancel" style="font-size:18px;">ยกเลิก</button></div>
                        </div>
                    </div>
                </div>
                <br />
            </div>
        </div>
    </div>
</div>
<!-- Modal BS Detail for create-->
<div class="modal fade bd-example-modal-lg" id="modalBSDetail" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-teal-active">
                <span style="font-size:large;color:white"><i class="fa fa-align-center"></i>&nbsp; รายละเอียดเคลม</span>
            </div>
            <div class="modal-body">
                <div class="col-sm-12">
                    <span class="text-blue" style="font-size:large;"><i class="fa fa-thumb-tack"></i> บ.ส. : <span id="lblBSCode"></span></span>
                </div>
                <table id="dtBSDetailForCreate" class="table table-bordered dataTable" style="width:100%"></table>
            </div>
            <div class="modal-footer " style="text-align:center">
                <button type="button" class="btn btn-red2" style="width:100px" data-dismiss="modal">ปิด</button>
            </div>
        </div>
    </div>
</div>

@section ViewSpecificJavascript
{
    <script>
        var isShowDocument;
        var ClaimGroupTypeId;
        var ProductGroupId;

        class ClaimGroupAmount {
            constructor(ClaimGroupId, Amount) {
                this.ClaimGroupId = ClaimGroupId;
                this.Amount = Amount;
            }
        }

        $(function () {
            $('.select2').select2();
            //CalculateAmount();
            //---------------------btn-----------------------
            $('#btnSearch').click(function (e) {
                e.preventDefault();
                if (IsValidSearch()) {
                    $('#btnSearch').addClass("loading");
                    $('#upIcon').removeClass("fa fa-search");
                    setTimeout(function () {
                        DoloadBSForCreate();
                        ClearCheckboxAll();
                        ClaimGroupTypeId = $('#ddlClaimGroupTypeId').val();
                        ProductGroupId = $('#ddlProductGroupId').val();
                    }, 300);


                }
            })

            $('#btnSave').click(function (e) {
                e.preventDefault();
                debugger;
                var success = true;
                var x = ListCheckDocument.join("");
                var listDoc = x.includes("0");

                const claimHeaderGroupHasZero = ListCheckAmount.some(item => item.Amount === 0);

                if (claimHeaderGroupHasZero) {
                    success = false;
                    swal("กรุณาตรวจสอบรายการ !", "ยอดเงินตามบ.ส. ต้องไม่เป็น 0", "warning");
                    console.log(1);
                } else if (listDoc == true && ClaimGroupTypeId != 4 && ClaimGroupTypeId != 5 && success === true) {// เคลมรพ และ เคลมโอนแยก ไม่ต้องเช็คเอกสาร
                    success = false;
                    swal("กรุณาตรวจสอบรายการ !", "เนื่องจากไม่พบรายการเอกสาร", "warning");
                    console.log(2);
                } else {
                    if (ClaimGroupTypeId == 4) {
                        if (CheckHospitalBankAccount())
                                SaveClaimPayBack();
                    } else {
                        SaveClaimPayBack();
                    }
                }
            })

            $('#btnCancel').click(function (e) {
                e.preventDefault();
                swal({
                    title: "ยืนยัน ?",
                    text: "ยกเลิกการทำรายการ ?",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonClass: "btn-danger",
                    confirmButtonText: "ตกลง",
                    cancelButtonText: "ยกเลิก",
                    closeOnConfirm: false
                },
                    function () {
                        window.close();
                    }
                )
            });

            $('#chkShowDocument').on('ifChanged', function (event) {
                isShowDocument = event.target.checked;
            });

            $('#ddlBranchId').change(function (e) {
                e.preventDefault();
                $('#ddlUserId').empty();
                GetUserByBranchId($('#ddlBranchId').val());  //ส่งค่าจาก ddlBranchId ไป Function GetUserByBranchId ซึ่งก็คือ BranchId
            });

            $('#ddlClaimGroupTypeId').change(function (e) {
                e.preventDefault();
                if ($('#ddlClaimGroupTypeId').val() == 4 || $('#ddlClaimGroupTypeId').val() == 5) {
                    $('#divchkShowDocument').hide();
                }
                else {
                    $('#divchkShowDocument').show();
                }
            });

        })

        //-----------------------variable---------------------------
        var totalAdd = 0;
        var totalSub = 0;
        var totalAmout = 0;
        var totalSelect = 0;
        var count = 0;
        var rowDT = 0;
        var totalDT = 0;
        var ListCheckBox = [];
        var ListCheckBoxAll = [];
        var ListCheckDocument = [];
        var ListCheckAmount = [];

        //--------------------------------data table-------------------------

        function DoloadBSForCreate() {
            $('#dtBSForCreate').empty();
            var t = $('#dtBSForCreate').dataTable({
            pageLength: 10,
            processing: true,
            serverSide: true,
            autoWidth: false,
            responsive: true,
            destroy: true,
                'info': true,
                "order": [[1, "desc"]],
                "lengthMenu": [[10, 25, 50, 100, 9999999], [10, 25, 50, 100, "All"]],
            searching: false,
            ajax: {
                url: '@Url.Action("GetBSForCreate", "ClaimPayBack")',
                async: true,
                type: 'POST',
                data: function (d) {
                    if (d != null) {
                        loadingSpinner("fadeOut");
                    }
                    d.draw = d.draw;
                    d.pageSize = d.length;
                    d.indexStart = d.start;
                    d.sortField = d.columns[d.order[0].column].data;
                    d.orderType = d.order[0].dir;
                    d.productGroupId = $('#ddlProductGroupId').val();
                    d.claimGroupTypeId = $('#ddlClaimGroupTypeId').val();
                    d.insuranceId = $('#ddlInsuranceId').val();
                    d.branchId = $('#ddlBranchId').val();
                    d.createByUserCode = $('#ddlUserId').val();
                    d.searchDetail = $('#txtSearch').val();
                    d.isShowDocument = isShowDocument;

                },
                    dataSrc: function (json) {
                        rowDT = json.data.length;
                        count = 0;
                        totalDT = json.recordsTotal;
                    return json.data;
                },
                error: function (xhr, error, thrown) {
                    if (error === 'timeout') {
                        alert('The request timed out. Please try again later.');
                    } else {
                        alert('An error occurred: ' + xhr.status + ' ' + xhr.statusText + '. Please try again later.');
                    }
                }

            },
            columns: [
                {
                    title: '<label>เลือก</label><input id="chk-all" name="chk-all" style="cursor:pointer"  class="chk-row-select-all" type="checkbox" />',
                    data: null,
                    orderable: false,
                    className: 'th-center td-center-checkbox nosort style="background-color:#d6ffdf"',
                    width: "35px",
                    render: function (data) {
                        let Ischecked = "";
                        if (ListCheckBoxAll.includes(data.ClaimHeaderGroup_id.toString())) {
                            count++
                            Ischecked = "checked"
                        }

                        if (count === rowDT ) {
                            $('input[class="chk-row-select-all"]').prop('checked', true);
                            rowDT = 0;
                            count = 0;
                        } else {
                            $('input[class="chk-row-select-all"]').prop('checked', false);
                        }

                        return `<center><input type="checkbox" style="cursor:pointer"  class="chk-row-select" ${Ischecked} id="chkdtrow_${data.ClaimHeaderGroup_id}" name="chkdtrow_${data.ClaimHeaderGroup_id}" value="${data.ClaimHeaderGroup_id}//${data.Amount}//${data.DocumentCount}"></center>`;
                    }
                },
                { title: 'กลุ่มแผนประกัน', data: 'ProductGroup', className: 'h-dt-center text-center', orderable: false },
                { title: 'เลขบ.ส.', data: 'ClaimHeaderGroup_id', className: 'h-dt-center ', orderable: false},
                { title: 'จำนวนรายการ', data: 'ItemCount', className: 'h-dt-center text-center', orderable: false },
                { title: 'ผู้ทำรายการ', data: 'CreatedByName', className: 'h-dt-center ', orderable: false},
                {
                    title: 'ยอดเงินตามบ.ส.',
                    data: 'Amount',
                    className: 'h-dt-center text-right',
                    orderable: false,
                    mRender: function (data) {
                        if (data === null)
                            return "0.00";
                        else
                            return numberWithCommas(data.toFixed(2));
                    }
                },
                { title: 'ประเภทงานเคลม', data: 'ClaimGroupType', className: 'h-dt-center text-center', orderable: false},
                {
                    title: 'วันที่สร้างบ.ส.', data: 'CreatedDate', className: 'h-dt-center ', orderable: false,
                    mRender: function (data) {
                        return toBuddhistYear(moment(data), 'DD/MM/YYYY HH:mm:ss');
                    }
                },
                { title: 'บริษัทประกันภัย', data: 'InsuranceCompany', className: 'h-dt-center ', orderable: false},

                {
                    title: 'เอกสารแนบ',
                    data: 'DocumentCount',
                    className: 'h-dt-center text-center',
                    mRender: function (data) {
                        let Document = "";
                        if (data === 0) {
                            Document = "ไม่มี";
                        }
                        else {
                            Document = "มี";
                        }

                        return Document;
                    }
                },
                {
                    title: 'รายละเอียด',
                    className: 'h-dt-center text-center',
                    orderable: false,
                    data: null,
                    mRender: (data, type, full) => {
                        return `<a  class="btn bg-teal-active" onclick="ShowModalBSDetail('${data.ClaimHeaderGroup_id}')" target="_blank" > ดูรายละเอียด</a>`
                    }
                },
            ],
            initComplete: function () {
                var api = this.api();

                if ($('#ddlClaimGroupTypeId').val() == 4 || $('#ddlClaimGroupTypeId').val() == 5) {
                    api.column(9).visible(false); // ซ่อนคอลัมน์ DocumentCount
                } else {
                    api.column(9).visible(true); // แสดงคอลัมน์ DocumentCount
                }

                $('#btnSearch').removeClass("loading");
                $('#upIcon').addClass("fa fa-search");
            },
            bLengthChange: true,

            });
        }

        //event tableQueueAssignDetail paging
        $('#dtBSForCreate').on('page.dt', function () {
            if (ListCheckBoxAll.length === totalDT) {
                $('table[id="dtBSForCreate"]').find(".chk-row-select").prop('checked', true);
                $('table[id="dtBSForCreate"]').find(".chk-row-select-all").prop('checked', true);
            } else {
                $('table[id="dtBSForCreate"]').find(".chk-row-select-all").prop('checked', false);
                //$('#countSelect').text('');
                //$('#textSelectAll').hide();
                //$('#textSelectAllClear').hide();
                for (var i = 0; i < ListCheckBox.length; i++) {
                    if (!(ListCheckBoxAll.includes(ListCheckBox[i]))) {
                        ListCheckBoxAll.push(ListCheckBox[i]);
                    }
                }
                count = 0;
                ListCheckBox = [];
            }
            console.log(ListCheckBoxAll)
        });

        /*checkbox in datatables change*/
        $('#dtBSForCreate').on('change', 'input[type="checkbox"]', function (e) {
            let table = $('#dtBSForCreate').DataTable();
            let rows = table.rows().nodes();
            /*debugger;*/
            switch (this.className) {
                case 'chk-row-select-all':
                    if (this.checked) {
                        ListCheckDocument = [];
                        ListCheckAmount = [];
                        $('input[class="chk-row-select"]', rows).prop('checked', true).change();
                    } else {
                        $('input[class="chk-row-select"]', rows).prop('checked', false).change();
                    }
                    break;
                case 'chk-row-select':
                    if (this.checked) {
                        let count = 0;
                        const value = this.value;
                        var checkedCount = $("#dtBSForCreate input[class='chk-row-select']:checked").length;

                        const myArr = value.split("//");
                        //adds one or more elements to the end of an array and returns the new length of the array.
                        if (!ListCheckBox.includes(myArr[0])) ListCheckBox.push(myArr[0]);
                        if (!ListCheckBoxAll.includes(myArr[0])) {
                            ListCheckBoxAll.push(myArr[0])
                            totalAdd += parseFloat(myArr[1]);
                        };

                        ListCheckDocument.push(myArr[2]);

                        const objClaimGroupAmount = new ClaimGroupAmount(myArr[0], parseFloat(myArr[1]));
                        ListCheckAmount.push(objClaimGroupAmount);

                        //check count data equal rows.length then checkbox-all is checked
                        if (!(checkedCount === rows.length)) {
                            $('table[id="dtBSForCreate"]').find(".chk-row-select-all").prop('checked', false);

                        } else {
                            $('table[id="dtBSForCreate"]').find(".chk-row-select-all").prop('checked', true);
                        }
                    } else {
                        const value = this.value;
                        const myArr = value.split("//");

                        //replaces 1 element at indexOd() returnValue index
                        ListCheckBox.splice(ListCheckBox.indexOf(myArr[0]), 1);
                        ListCheckBoxAll.splice(ListCheckBoxAll.indexOf(myArr[0]), 1);
                        ListCheckDocument.splice(ListCheckDocument.indexOf(myArr[2]), 1);
                        ListCheckAmount = ListCheckAmount.filter(v => v.ClaimGroupId !== myArr[0]);

                        //check count data equal rows.length then checkbox-all is checked
                        if (!(ListCheckBox.length === rows.length)) {
                            $('table[id="dtBSForCreate"]').find(".chk-row-select-all").prop('checked', false);
                        } else {
                            $('table[id="dtBSForCreate"]').find(".chk-row-select-all").prop('checked', true);
                        }

                        totalSub += parseFloat(myArr[1]);
                        totalSelect -= 1;
                    }
                    break;
                default:
            }

            totalAmout = totalAdd - totalSub;
            $('#totalAmount').text(numberWithCommas(totalAmout.toFixed(2)));
            $('#totalSelect').text(ListCheckBoxAll.length);

            if (ListCheckBoxAll.length == 0) {
                $('#btnSave').attr('disabled', true);
            }
            else {
                $('#btnSave').attr('disabled', false);
            }
        });

        //------------------------------------dataTable in Modal--------------------------------------------

        function DoloadBSDetailForCreate(ClaimHeaderGroup_id) {
            $('#dtBSDetailForCreate').empty();
            var t = $('#dtBSDetailForCreate').dataTable({
                pageLength: 10,
                processing: true,
                serverSide: true,
                autoWidth: false,
                responsive: true,
                destroy: true,
                "order": [[0, "desc"]],
                searching: false,
                ajax: {
                    url: '@Url.Action("GetBSDetailForCreate", "ClaimPayBack")',

                    type: 'POST',
                    async: false,
                    data: function (d) {
                        d.draw = d.draw;
                        d.pageSize = d.length;
                        d.indexStart = d.start;
                        d.sortField = d.columns[d.order[0].column].data;
                        d.orderType = d.order[0].dir;
                        d.searchDetail = d.search;
                        d.claimGroupCode = ClaimHeaderGroup_id;
                        d.productGroupId = ProductGroupId;
                        d.claimGroupTypeId = ClaimGroupTypeId;

                    }
                },
                columns: [
                    { title: 'เลขที่เคลม', data: 'ClaimCode', className: 'h-dt-center ', width: '10%'},
                    { title: 'แผนประกัน', data: 'Product', className: 'h-dt-center text-center' },
                    { title: 'ชื่อสถานพยาบาล', data: 'Hospital', className: 'h-dt-center text-center' },
                    { title: 'ประเภทการเข้ารับรักษา', data: 'ClaimAdmitType', className: 'h-dt-center ' },
                    { title: 'อาการ', data: 'ChiefComplain', className: 'h-dt-center ' },
                    { title: 'วินิจฉัย', data: 'ICD10_Detail', className: 'h-dt-center ' },
                    {
                        title: 'รายละเอียด',
                        className: 'h-dt-center text-center',
                        data: null,
                        mRender: (data, type, full) => {
                            return `<a class="btn bg-blue" href="${data.URLLink}" target="_blank" > ดูรายละเอียดเคลม</a>`
                        }
                    },

                ],
                bLengthChange: false,
            });
        };

        //---------------------------function-------------------------------

        function ShowModalBSDetail(ClaimHeaderGroup_id) {

            DoloadBSDetailForCreate(ClaimHeaderGroup_id);
            $('#modalBSDetail').modal('show');
            $('#lblBSCode').text(ClaimHeaderGroup_id);
        };

        function SaveClaimPayBack() {
            swal({
                title: "ยืนยัน ?",
                text: "ยืนยันการบันทึกรายการ ?",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "ตกลง",
                cancelButtonText: "ยกเลิก",
                closeOnConfirm: false,
                showLoaderOnConfirm: true
            },
                function () {
                    setTimeout(function () {
                        $.ajax({
                            url: "@Url.Action("InsertClaimPayBack", "ClaimPayBack")",
                            type: "POST",
                            data: {
                                claimGroupCodeListArray: ListCheckBoxAll,
                                productGroupId: ProductGroupId,
                                claimGroupTypeId: ClaimGroupTypeId
                            },
                            success: function (response) {
                                if (response.IsResult == true) {
                                    loadingSpinner('fadeOut');
                                    swal('สำเร็จ', 'บันทึกรายการเรียบร้อยแล้ว', 'success')
                                    ClearCheckboxAll();
                                    DoloadBSForCreate();
                                }
                                else {
                                    swal('ข้อมูลผิดพลาด !', response.Msg, 'error');
                                    loadingSpinner('fadeOut');
                                }
                            },
                            error: function (jqXHR, exception) {
                                checkXHRStatus(jqXHR.status);
                                loadingSpinner('fadeOut');
                            }
                        });
                    }, 300)
                }
            )

        };

        const ClearCheckboxAll = () => {
            ListCheckBoxAll = [];
            ListCheckBox = [];
            ListCheckDocument = [];
            ListCheckAmount = [];
            totalAmout = 0;
            totalAdd = 0;
            totalSub = 0;
            totalSelect = 0;
            $('#totalAmount').text('0');
            $('#totalSelect').text('0');
            $('table[id="dtBSForCreate"]').find(".chk-row-select").prop('checked', false);
            $('table[id="dtBSForCreate"]').find(".chk-row-select-all").prop('checked', false);
            $('#btnSave').attr('disabled', true);
        }

        function IsValidSearch() {
            if ($('#ddlProductGroupId').val() == -1) {
                swal('ตรวจสอบ', 'โปรดระบุ กลุ่มแผนประกัน', 'warning');
                return false;
            }
            if ($('#ddlClaimGroupTypeId').val() == -1) {
                swal('ตรวจสอบ', 'โปรดระบุ ประเภทงานเคลม', 'warning');
                return false;
            }

            return true;
        }
        const GetUserByBranchId = (BranchId) => {
            $('#ddlUserId').empty();
             $.ajax({
                type: 'GET',
                url: '@Url.Action("GetUserByBranchId", "ClaimPayBack")',
                 data: { BranchId: BranchId },
                async: false,
                 success: function (data) {
                    $('#ddlUserId').append('<option value=-1>---ทั้งหมด---</option>');
                     for (var i = 0; i < data.length; i++) {
                         var fullName = data[i].EmployeeCode + ' ' + data[i].PersonName;
                         $('#ddlUserId').append('<option value=' + data[i].EmployeeCode + '>' + fullName + '</option>');
                    }
                },
                error: function (xhr, textStatus, errorThrown) {
                    alert('request fail');
                }
             });
        }

        const CheckHospitalBankAccount = () => {
            var success = true
            $.ajax({
                type: 'POST',
                url: '@Url.Action("CheckHospitalBankAccount", "ClaimPayBack")',
                data: {
                    claimGroupCodeListArray: ListCheckBoxAll,
                    ClaimGroupTypeId: ClaimGroupTypeId
                },
                async: false,
                success: function (data) {
                    if (data.IsSuccess === false) {
                        success = false;
                        swal("กรุณาตรวจสอบรายการ !", "ไม่พบเลขที่บัญชี" + "\n" + data.Message, "warning");
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    checkXHRStatus(jqXHR.status);
                    success = false;
                }
            });
            return success;
        }

        function toBuddhistYear(moment, format) {
            var christianYear = moment.format('YYYY')
            var buddhishYear = (parseInt(christianYear) + 543).toString()
            return moment
                .format(format.replace('YYYY', buddhishYear).replace('YY', buddhishYear.substring(2, 4)))
                .replace(christianYear, buddhishYear)
        }

    </script>

}