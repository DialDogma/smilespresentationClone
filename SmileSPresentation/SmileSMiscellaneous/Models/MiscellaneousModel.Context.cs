//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmileSMiscellaneous.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MiscellaneousDBContext : DbContext
    {
        public MiscellaneousDBContext()
            : base("name=MiscellaneousDBContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<usp_Application_Select_Result> usp_Application_Select(Nullable<int> applicationId, string applicationCode, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var applicationCodeParameter = applicationCode != null ?
                new ObjectParameter("ApplicationCode", applicationCode) :
                new ObjectParameter("ApplicationCode", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Application_Select_Result>("usp_Application_Select", applicationIdParameter, applicationCodeParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_Product_Select_Result> usp_Product_Select(Nullable<int> productId, Nullable<int> productTypeId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var productTypeIdParameter = productTypeId.HasValue ?
                new ObjectParameter("ProductTypeId", productTypeId) :
                new ObjectParameter("ProductTypeId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Product_Select_Result>("usp_Product_Select", productIdParameter, productTypeIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ProductType_Select_Result> usp_ProductType_Select(Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProductType_Select_Result>("usp_ProductType_Select", indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_Application_InsertOrUpdate_Result> usp_Application_InsertOrUpdate(Nullable<int> applicationId, Nullable<int> productId, Nullable<int> countCustomer, Nullable<double> sumPremiumAmount, Nullable<System.DateTime> startCoverDate, Nullable<System.DateTime> endCoverDate, Nullable<int> coveragePeriod, Nullable<int> agentByUserId, Nullable<int> zebraId, Nullable<int> createdByUserId, string jsonLog, string iNCode, string billNo)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var countCustomerParameter = countCustomer.HasValue ?
                new ObjectParameter("CountCustomer", countCustomer) :
                new ObjectParameter("CountCustomer", typeof(int));
    
            var sumPremiumAmountParameter = sumPremiumAmount.HasValue ?
                new ObjectParameter("SumPremiumAmount", sumPremiumAmount) :
                new ObjectParameter("SumPremiumAmount", typeof(double));
    
            var startCoverDateParameter = startCoverDate.HasValue ?
                new ObjectParameter("StartCoverDate", startCoverDate) :
                new ObjectParameter("StartCoverDate", typeof(System.DateTime));
    
            var endCoverDateParameter = endCoverDate.HasValue ?
                new ObjectParameter("EndCoverDate", endCoverDate) :
                new ObjectParameter("EndCoverDate", typeof(System.DateTime));
    
            var coveragePeriodParameter = coveragePeriod.HasValue ?
                new ObjectParameter("CoveragePeriod", coveragePeriod) :
                new ObjectParameter("CoveragePeriod", typeof(int));
    
            var agentByUserIdParameter = agentByUserId.HasValue ?
                new ObjectParameter("AgentByUserId", agentByUserId) :
                new ObjectParameter("AgentByUserId", typeof(int));
    
            var zebraIdParameter = zebraId.HasValue ?
                new ObjectParameter("ZebraId", zebraId) :
                new ObjectParameter("ZebraId", typeof(int));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            var jsonLogParameter = jsonLog != null ?
                new ObjectParameter("JsonLog", jsonLog) :
                new ObjectParameter("JsonLog", typeof(string));
    
            var iNCodeParameter = iNCode != null ?
                new ObjectParameter("INCode", iNCode) :
                new ObjectParameter("INCode", typeof(string));
    
            var billNoParameter = billNo != null ?
                new ObjectParameter("BillNo", billNo) :
                new ObjectParameter("BillNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Application_InsertOrUpdate_Result>("usp_Application_InsertOrUpdate", applicationIdParameter, productIdParameter, countCustomerParameter, sumPremiumAmountParameter, startCoverDateParameter, endCoverDateParameter, coveragePeriodParameter, agentByUserIdParameter, zebraIdParameter, createdByUserIdParameter, jsonLogParameter, iNCodeParameter, billNoParameter);
        }
    
        public virtual ObjectResult<usp_Address_InsertOrUpdate_Result> usp_Address_InsertOrUpdate(Nullable<int> applicationId, Nullable<int> addressTypeId, string address1, string address2, string subDistrictId, string zipCode, Nullable<int> createdByUserId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var addressTypeIdParameter = addressTypeId.HasValue ?
                new ObjectParameter("AddressTypeId", addressTypeId) :
                new ObjectParameter("AddressTypeId", typeof(int));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var subDistrictIdParameter = subDistrictId != null ?
                new ObjectParameter("SubDistrictId", subDistrictId) :
                new ObjectParameter("SubDistrictId", typeof(string));
    
            var zipCodeParameter = zipCode != null ?
                new ObjectParameter("ZipCode", zipCode) :
                new ObjectParameter("ZipCode", typeof(string));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Address_InsertOrUpdate_Result>("usp_Address_InsertOrUpdate", applicationIdParameter, addressTypeIdParameter, address1Parameter, address2Parameter, subDistrictIdParameter, zipCodeParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_CustomeMember_InsertOrUpdate_Result> usp_CustomeMember_InsertOrUpdate(Nullable<int> applicationId, Nullable<int> titleId, string firstName, string lastName, Nullable<System.DateTime> birthDate, string idCardNumber, string passPortNumber, string mobileNumber, string remark, Nullable<int> createdByUserId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var titleIdParameter = titleId.HasValue ?
                new ObjectParameter("TitleId", titleId) :
                new ObjectParameter("TitleId", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var birthDateParameter = birthDate.HasValue ?
                new ObjectParameter("BirthDate", birthDate) :
                new ObjectParameter("BirthDate", typeof(System.DateTime));
    
            var idCardNumberParameter = idCardNumber != null ?
                new ObjectParameter("IdCardNumber", idCardNumber) :
                new ObjectParameter("IdCardNumber", typeof(string));
    
            var passPortNumberParameter = passPortNumber != null ?
                new ObjectParameter("PassPortNumber", passPortNumber) :
                new ObjectParameter("PassPortNumber", typeof(string));
    
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CustomeMember_InsertOrUpdate_Result>("usp_CustomeMember_InsertOrUpdate", applicationIdParameter, titleIdParameter, firstNameParameter, lastNameParameter, birthDateParameter, idCardNumberParameter, passPortNumberParameter, mobileNumberParameter, remarkParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_EmployeeSearch_Select_Result> usp_EmployeeSearch_Select(string criteria)
        {
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_EmployeeSearch_Select_Result>("usp_EmployeeSearch_Select", criteriaParameter);
        }
    
        public virtual ObjectResult<usp_PersonType_Select_Result> usp_PersonType_Select(Nullable<int> personTypeID, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var personTypeIDParameter = personTypeID.HasValue ?
                new ObjectParameter("PersonTypeID", personTypeID) :
                new ObjectParameter("PersonTypeID", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonType_Select_Result>("usp_PersonType_Select", personTypeIDParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ProvinceDistrictSubDistrict_Select_Result> usp_ProvinceDistrictSubDistrict_Select(Nullable<int> subDistrictId, Nullable<int> districtId, Nullable<int> provinceId, string zipCode, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var subDistrictIdParameter = subDistrictId.HasValue ?
                new ObjectParameter("SubDistrictId", subDistrictId) :
                new ObjectParameter("SubDistrictId", typeof(int));
    
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(int));
    
            var provinceIdParameter = provinceId.HasValue ?
                new ObjectParameter("ProvinceId", provinceId) :
                new ObjectParameter("ProvinceId", typeof(int));
    
            var zipCodeParameter = zipCode != null ?
                new ObjectParameter("ZipCode", zipCode) :
                new ObjectParameter("ZipCode", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProvinceDistrictSubDistrict_Select_Result>("usp_ProvinceDistrictSubDistrict_Select", subDistrictIdParameter, districtIdParameter, provinceIdParameter, zipCodeParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_Title_Select_Result> usp_Title_Select(Nullable<int> title_ID, Nullable<int> personType_ID, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var title_IDParameter = title_ID.HasValue ?
                new ObjectParameter("Title_ID", title_ID) :
                new ObjectParameter("Title_ID", typeof(int));
    
            var personType_IDParameter = personType_ID.HasValue ?
                new ObjectParameter("PersonType_ID", personType_ID) :
                new ObjectParameter("PersonType_ID", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Title_Select_Result>("usp_Title_Select", title_IDParameter, personType_IDParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_UserIDByEmployeeCode_Select(string employeeCode)
        {
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_UserIDByEmployeeCode_Select", employeeCodeParameter);
        }
    
        public virtual ObjectResult<usp_Zebra_Select_Result> usp_Zebra_Select(Nullable<int> ownerEmployeeId, Nullable<int> zebra_ID, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var ownerEmployeeIdParameter = ownerEmployeeId.HasValue ?
                new ObjectParameter("OwnerEmployeeId", ownerEmployeeId) :
                new ObjectParameter("OwnerEmployeeId", typeof(int));
    
            var zebra_IDParameter = zebra_ID.HasValue ?
                new ObjectParameter("Zebra_ID", zebra_ID) :
                new ObjectParameter("Zebra_ID", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Zebra_Select_Result>("usp_Zebra_Select", ownerEmployeeIdParameter, zebra_IDParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_CalculateAge_Select_Result> usp_CalculateAge_Select(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CalculateAge_Select_Result>("usp_CalculateAge_Select", dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<usp_Application_Delete_Result> usp_Application_Delete(Nullable<int> applicationId, Nullable<int> createdByUserId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Application_Delete_Result>("usp_Application_Delete", applicationIdParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_Application_Send_Update_Result> usp_Application_Send_Update(Nullable<int> applicationId, Nullable<int> createdByUserId, string jsonLog)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            var jsonLogParameter = jsonLog != null ?
                new ObjectParameter("JsonLog", jsonLog) :
                new ObjectParameter("JsonLog", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Application_Send_Update_Result>("usp_Application_Send_Update", applicationIdParameter, createdByUserIdParameter, jsonLogParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationHeir_Delete_Result> usp_ApplicationHeir_Delete(Nullable<int> applicationHeirId, Nullable<int> createdByUserId)
        {
            var applicationHeirIdParameter = applicationHeirId.HasValue ?
                new ObjectParameter("ApplicationHeirId", applicationHeirId) :
                new ObjectParameter("ApplicationHeirId", typeof(int));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationHeir_Delete_Result>("usp_ApplicationHeir_Delete", applicationHeirIdParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationHeir_Insert_Result> usp_ApplicationHeir_Insert(Nullable<int> applicationId, Nullable<int> titleId, string firstName, string lastName, string idCardNumber, string passPortNumber, string mobileNumber, Nullable<int> relationTypeId, Nullable<int> createdByUserId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var titleIdParameter = titleId.HasValue ?
                new ObjectParameter("TitleId", titleId) :
                new ObjectParameter("TitleId", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var idCardNumberParameter = idCardNumber != null ?
                new ObjectParameter("IdCardNumber", idCardNumber) :
                new ObjectParameter("IdCardNumber", typeof(string));
    
            var passPortNumberParameter = passPortNumber != null ?
                new ObjectParameter("PassPortNumber", passPortNumber) :
                new ObjectParameter("PassPortNumber", typeof(string));
    
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var relationTypeIdParameter = relationTypeId.HasValue ?
                new ObjectParameter("RelationTypeId", relationTypeId) :
                new ObjectParameter("RelationTypeId", typeof(int));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationHeir_Insert_Result>("usp_ApplicationHeir_Insert", applicationIdParameter, titleIdParameter, firstNameParameter, lastNameParameter, idCardNumberParameter, passPortNumberParameter, mobileNumberParameter, relationTypeIdParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationHeir_Select_Result> usp_ApplicationHeir_Select(Nullable<int> applicationId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationHeir_Select_Result>("usp_ApplicationHeir_Select", applicationIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationInsured_Select_Result> usp_ApplicationInsured_Select(Nullable<int> applicationId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationInsured_Select_Result>("usp_ApplicationInsured_Select", applicationIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationMonitor_Select_Result> usp_ApplicationMonitor_Select(Nullable<int> applicationId, Nullable<int> paymentStatusId, Nullable<int> applicationStatusId, Nullable<int> productTypeID, Nullable<int> user_ID, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var paymentStatusIdParameter = paymentStatusId.HasValue ?
                new ObjectParameter("PaymentStatusId", paymentStatusId) :
                new ObjectParameter("PaymentStatusId", typeof(int));
    
            var applicationStatusIdParameter = applicationStatusId.HasValue ?
                new ObjectParameter("ApplicationStatusId", applicationStatusId) :
                new ObjectParameter("ApplicationStatusId", typeof(int));
    
            var productTypeIDParameter = productTypeID.HasValue ?
                new ObjectParameter("ProductTypeID", productTypeID) :
                new ObjectParameter("ProductTypeID", typeof(int));
    
            var user_IDParameter = user_ID.HasValue ?
                new ObjectParameter("User_ID", user_ID) :
                new ObjectParameter("User_ID", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationMonitor_Select_Result>("usp_ApplicationMonitor_Select", applicationIdParameter, paymentStatusIdParameter, applicationStatusIdParameter, productTypeIDParameter, user_IDParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationPayer_InsertOrUpdate_Result> usp_ApplicationPayer_InsertOrUpdate(Nullable<int> applicationId, Nullable<int> titleId, string firstName, string lastName, string idCardNumber, string passPortNumber, string mobileNumber, Nullable<bool> isSameCustomer, Nullable<int> createdByUserId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var titleIdParameter = titleId.HasValue ?
                new ObjectParameter("TitleId", titleId) :
                new ObjectParameter("TitleId", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var idCardNumberParameter = idCardNumber != null ?
                new ObjectParameter("IdCardNumber", idCardNumber) :
                new ObjectParameter("IdCardNumber", typeof(string));
    
            var passPortNumberParameter = passPortNumber != null ?
                new ObjectParameter("PassPortNumber", passPortNumber) :
                new ObjectParameter("PassPortNumber", typeof(string));
    
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var isSameCustomerParameter = isSameCustomer.HasValue ?
                new ObjectParameter("IsSameCustomer", isSameCustomer) :
                new ObjectParameter("IsSameCustomer", typeof(bool));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationPayer_InsertOrUpdate_Result>("usp_ApplicationPayer_InsertOrUpdate", applicationIdParameter, titleIdParameter, firstNameParameter, lastNameParameter, idCardNumberParameter, passPortNumberParameter, mobileNumberParameter, isSameCustomerParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationPayer_Select_Result> usp_ApplicationPayer_Select(Nullable<int> applicationId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationPayer_Select_Result>("usp_ApplicationPayer_Select", applicationIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationStatus_Select_Result> usp_ApplicationStatus_Select(Nullable<int> applicationStatusId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationStatusIdParameter = applicationStatusId.HasValue ?
                new ObjectParameter("ApplicationStatusId", applicationStatusId) :
                new ObjectParameter("ApplicationStatusId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationStatus_Select_Result>("usp_ApplicationStatus_Select", applicationStatusIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_PaymentStatus_Select_Result> usp_PaymentStatus_Select(Nullable<int> paymentStatusId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var paymentStatusIdParameter = paymentStatusId.HasValue ?
                new ObjectParameter("PaymentStatusId", paymentStatusId) :
                new ObjectParameter("PaymentStatusId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PaymentStatus_Select_Result>("usp_PaymentStatus_Select", paymentStatusIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_Address_Select_Result> usp_Address_Select(Nullable<int> applicationId, Nullable<int> applicationAddressTypeId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var applicationAddressTypeIdParameter = applicationAddressTypeId.HasValue ?
                new ObjectParameter("ApplicationAddressTypeId", applicationAddressTypeId) :
                new ObjectParameter("ApplicationAddressTypeId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Address_Select_Result>("usp_Address_Select", applicationIdParameter, applicationAddressTypeIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_PersonRelationType_Select_Result> usp_PersonRelationType_Select(Nullable<int> personRelationType_ID, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var personRelationType_IDParameter = personRelationType_ID.HasValue ?
                new ObjectParameter("PersonRelationType_ID", personRelationType_ID) :
                new ObjectParameter("PersonRelationType_ID", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonRelationType_Select_Result>("usp_PersonRelationType_Select", personRelationType_IDParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_Document_Select_Result> usp_Document_Select(Nullable<int> applicationId, string documentTypeIdList, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var documentTypeIdListParameter = documentTypeIdList != null ?
                new ObjectParameter("DocumentTypeIdList", documentTypeIdList) :
                new ObjectParameter("DocumentTypeIdList", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Document_Select_Result>("usp_Document_Select", applicationIdParameter, documentTypeIdListParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_Document_Insert_Result> usp_Document_Insert(Nullable<int> applicationId, string documentTypeIdList, string remark, Nullable<int> createByUserId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var documentTypeIdListParameter = documentTypeIdList != null ?
                new ObjectParameter("DocumentTypeIdList", documentTypeIdList) :
                new ObjectParameter("DocumentTypeIdList", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            var createByUserIdParameter = createByUserId.HasValue ?
                new ObjectParameter("CreateByUserId", createByUserId) :
                new ObjectParameter("CreateByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Document_Insert_Result>("usp_Document_Insert", applicationIdParameter, documentTypeIdListParameter, remarkParameter, createByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationTransactionHeader_Select_Result> usp_ApplicationTransactionHeader_Select(Nullable<int> transactionTypeId, Nullable<int> applicationId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var transactionTypeIdParameter = transactionTypeId.HasValue ?
                new ObjectParameter("TransactionTypeId", transactionTypeId) :
                new ObjectParameter("TransactionTypeId", typeof(int));
    
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationTransactionHeader_Select_Result>("usp_ApplicationTransactionHeader_Select", transactionTypeIdParameter, applicationIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_PremiumReceive_Select_Result> usp_PremiumReceive_Select(Nullable<int> applicationId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PremiumReceive_Select_Result>("usp_PremiumReceive_Select", applicationIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationUnApproveCause_Select_Result> usp_ApplicationUnApproveCause_Select(Nullable<int> applicationUnApproveCauseId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationUnApproveCauseIdParameter = applicationUnApproveCauseId.HasValue ?
                new ObjectParameter("ApplicationUnApproveCauseId", applicationUnApproveCauseId) :
                new ObjectParameter("ApplicationUnApproveCauseId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationUnApproveCause_Select_Result>("usp_ApplicationUnApproveCause_Select", applicationUnApproveCauseIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_Application_Approve_Update_Result> usp_Application_Approve_Update(Nullable<int> applicationId, Nullable<int> applicationStatusId, Nullable<int> applicationCancelCauseId, string applicationCancelCauseRemark, Nullable<int> createdByUserId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var applicationStatusIdParameter = applicationStatusId.HasValue ?
                new ObjectParameter("ApplicationStatusId", applicationStatusId) :
                new ObjectParameter("ApplicationStatusId", typeof(int));
    
            var applicationCancelCauseIdParameter = applicationCancelCauseId.HasValue ?
                new ObjectParameter("ApplicationCancelCauseId", applicationCancelCauseId) :
                new ObjectParameter("ApplicationCancelCauseId", typeof(int));
    
            var applicationCancelCauseRemarkParameter = applicationCancelCauseRemark != null ?
                new ObjectParameter("ApplicationCancelCauseRemark", applicationCancelCauseRemark) :
                new ObjectParameter("ApplicationCancelCauseRemark", typeof(string));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Application_Approve_Update_Result>("usp_Application_Approve_Update", applicationIdParameter, applicationStatusIdParameter, applicationCancelCauseIdParameter, applicationCancelCauseRemarkParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationFullDetail_Select_Result> usp_ApplicationFullDetail_Select(Nullable<int> applicationId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationFullDetail_Select_Result>("usp_ApplicationFullDetail_Select", applicationIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationTransaction_Insert_Result> usp_ApplicationTransaction_Insert(Nullable<int> applicationId, Nullable<int> transactionTypeId, Nullable<int> createdByUserId, string jsonDetail)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var transactionTypeIdParameter = transactionTypeId.HasValue ?
                new ObjectParameter("TransactionTypeId", transactionTypeId) :
                new ObjectParameter("TransactionTypeId", typeof(int));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            var jsonDetailParameter = jsonDetail != null ?
                new ObjectParameter("JsonDetail", jsonDetail) :
                new ObjectParameter("JsonDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationTransaction_Insert_Result>("usp_ApplicationTransaction_Insert", applicationIdParameter, transactionTypeIdParameter, createdByUserIdParameter, jsonDetailParameter);
        }
    
        public virtual ObjectResult<usp_OrganizeINMiscellaneous_Select_Result> usp_OrganizeINMiscellaneous_Select(Nullable<int> productTypeID, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var productTypeIDParameter = productTypeID.HasValue ?
                new ObjectParameter("ProductTypeID", productTypeID) :
                new ObjectParameter("ProductTypeID", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_OrganizeINMiscellaneous_Select_Result>("usp_OrganizeINMiscellaneous_Select", productTypeIDParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ProductTypeNotSmilePA_Select_Result> usp_ProductTypeNotSmilePA_Select(Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProductTypeNotSmilePA_Select_Result>("usp_ProductTypeNotSmilePA_Select", indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_Application_SendInsured_Update_Result> usp_Application_SendInsured_Update(Nullable<int> applicationId, Nullable<bool> isSendInsured, string sendInsuredRemark, Nullable<int> createdByUserId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var isSendInsuredParameter = isSendInsured.HasValue ?
                new ObjectParameter("IsSendInsured", isSendInsured) :
                new ObjectParameter("IsSendInsured", typeof(bool));
    
            var sendInsuredRemarkParameter = sendInsuredRemark != null ?
                new ObjectParameter("SendInsuredRemark", sendInsuredRemark) :
                new ObjectParameter("SendInsuredRemark", typeof(string));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Application_SendInsured_Update_Result>("usp_Application_SendInsured_Update", applicationIdParameter, isSendInsuredParameter, sendInsuredRemarkParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationMonitorSendInsured_Select_Result> usp_ApplicationMonitorSendInsured_Select(Nullable<int> applicationId, Nullable<bool> isSendInsured, Nullable<int> insuranceCompany_ID, Nullable<int> productTypeID, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var isSendInsuredParameter = isSendInsured.HasValue ?
                new ObjectParameter("IsSendInsured", isSendInsured) :
                new ObjectParameter("IsSendInsured", typeof(bool));
    
            var insuranceCompany_IDParameter = insuranceCompany_ID.HasValue ?
                new ObjectParameter("InsuranceCompany_ID", insuranceCompany_ID) :
                new ObjectParameter("InsuranceCompany_ID", typeof(int));
    
            var productTypeIDParameter = productTypeID.HasValue ?
                new ObjectParameter("ProductTypeID", productTypeID) :
                new ObjectParameter("ProductTypeID", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationMonitorSendInsured_Select_Result>("usp_ApplicationMonitorSendInsured_Select", applicationIdParameter, isSendInsuredParameter, insuranceCompany_IDParameter, productTypeIDParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ReportDetail_SelectById_Result> usp_ReportDetail_SelectById(Nullable<int> reportHeaderId)
        {
            var reportHeaderIdParameter = reportHeaderId.HasValue ?
                new ObjectParameter("ReportHeaderId", reportHeaderId) :
                new ObjectParameter("ReportHeaderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReportDetail_SelectById_Result>("usp_ReportDetail_SelectById", reportHeaderIdParameter);
        }
    
        public virtual ObjectResult<usp_ReportHeader_Select_Result> usp_ReportHeader_Select(Nullable<System.DateTime> createdDateFrom, Nullable<System.DateTime> createdDateTo, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var createdDateFromParameter = createdDateFrom.HasValue ?
                new ObjectParameter("CreatedDateFrom", createdDateFrom) :
                new ObjectParameter("CreatedDateFrom", typeof(System.DateTime));
    
            var createdDateToParameter = createdDateTo.HasValue ?
                new ObjectParameter("CreatedDateTo", createdDateTo) :
                new ObjectParameter("CreatedDateTo", typeof(System.DateTime));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReportHeader_Select_Result>("usp_ReportHeader_Select", createdDateFromParameter, createdDateToParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ReportSendInsurance_Update_Result> usp_ReportSendInsurance_Update(Nullable<int> reportHeaderId, Nullable<bool> isSendInsureds, string remark, Nullable<int> creadByUserId)
        {
            var reportHeaderIdParameter = reportHeaderId.HasValue ?
                new ObjectParameter("ReportHeaderId", reportHeaderId) :
                new ObjectParameter("ReportHeaderId", typeof(int));
    
            var isSendInsuredsParameter = isSendInsureds.HasValue ?
                new ObjectParameter("IsSendInsureds", isSendInsureds) :
                new ObjectParameter("IsSendInsureds", typeof(bool));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            var creadByUserIdParameter = creadByUserId.HasValue ?
                new ObjectParameter("CreadByUserId", creadByUserId) :
                new ObjectParameter("CreadByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReportSendInsurance_Update_Result>("usp_ReportSendInsurance_Update", reportHeaderIdParameter, isSendInsuredsParameter, remarkParameter, creadByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_ReportGenerate_Insert_Result> usp_ReportGenerate_Insert(Nullable<int> createdByUserId)
        {
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReportGenerate_Insert_Result>("usp_ReportGenerate_Insert", createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_PremiumReceiveByMatch_Insert_Result> usp_PremiumReceiveByMatch_Insert(Nullable<int> createByUserid)
        {
            var createByUseridParameter = createByUserid.HasValue ?
                new ObjectParameter("CreateByUserid", createByUserid) :
                new ObjectParameter("CreateByUserid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PremiumReceiveByMatch_Insert_Result>("usp_PremiumReceiveByMatch_Insert", createByUseridParameter);
        }
    
        public virtual int usp_CustomerApplication_MI_Person_InsertOrUpdate(Nullable<int> applicationId, string type, Nullable<int> createdByUserId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CustomerApplication_MI_Person_InsertOrUpdate", applicationIdParameter, typeParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationByINCode_Select_Result> usp_ApplicationByINCode_Select(string iNCode)
        {
            var iNCodeParameter = iNCode != null ?
                new ObjectParameter("INCode", iNCode) :
                new ObjectParameter("INCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationByINCode_Select_Result>("usp_ApplicationByINCode_Select", iNCodeParameter);
        }
    
        public virtual ObjectResult<usp_ProgramConfig_Select_Result> usp_ProgramConfig_Select(string parameterName, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var parameterNameParameter = parameterName != null ?
                new ObjectParameter("ParameterName", parameterName) :
                new ObjectParameter("ParameterName", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProgramConfig_Select_Result>("usp_ProgramConfig_Select", parameterNameParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual int usp_CRMLead_Insert(string applicationCode, Nullable<int> projectId, string leadCode)
        {
            var applicationCodeParameter = applicationCode != null ?
                new ObjectParameter("ApplicationCode", applicationCode) :
                new ObjectParameter("ApplicationCode", typeof(string));
    
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(int));
    
            var leadCodeParameter = leadCode != null ?
                new ObjectParameter("LeadCode", leadCode) :
                new ObjectParameter("LeadCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CRMLead_Insert", applicationCodeParameter, projectIdParameter, leadCodeParameter);
        }
    }
}
