@{
    ViewBag.Title = "NewApp";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<input type="hidden" id="IDText" hidden value="" />
<input type="hidden" id="NameText" hidden value="" />
<input type="hidden" id="EmailText" hidden value="" />
<input type="hidden" id="hdfAppCode" hidden value="" />
<div class="row">
    <div class="col-xs-12" id="formAll">

        <input type="hidden" id="hdfAppId" />
        <input type="hidden" id="hdfIsGroup" />
        <input type="hidden" id="hdfIsFixPremium" />
        <input type="hidden" id="hdfPeriodType" />

        <div class="navbar">
            <div class="tab">
                <ul class="nav nav-tabs" role="tablist">
                    <li role="presentation" id="li_tab1" class="active"><a href="#tab1" aria-controls="tab1" role="tab" data-toggle="tab">ข้อมูล Application</a></li>
                    <li role="presentation" id="li_tab2"><a href="#tab2" aria-controls="tab2" role="tab" data-toggle="tab">ข้อมูลผู้เอาประกัน</a></li>
                    <li role="presentation" id="li_tab3"><a href="#tab3" aria-controls="tab3" role="tab" data-toggle="tab">ข้อมูลผู้ชำระเบี้ย / ผู้รับผลประโยชน์ </a></li>
                    <li role="presentation" id="li_tab4"><a href="#tab4" aria-controls="tab4" role="tab" data-toggle="tab">เอกสาร</a></li>
                </ul>

                <div class="tab-content tabs">
                    @* ข้อมูล Application *@
                    <div role="tabpanel" class="tab-pane fade in active" id="tab1">
                        <form id="frmApplication" class="form-horizontal">

                            <section>
                                <div class="row" style="padding-top:6px">
                                    <div class="col-xs-3 ">
                                        <label>ApplicationID :</label>
                                        <span id="lblApplicationId"></span>
                                    </div>
                                </div>

                                <div class="row" style="padding-top:6px">
                                    <div class="col-xs-3 ">
                                        <label>Bill No :</label>
                                        <input type="text" id="txtBillNo" name="txtBillNo" class="form-control" disabled />
                                    </div>
                                </div>

                                <div class="row" style="margin-top:2%">
                                    <div class="col-xs-3">
                                        <label>เลขที่อ้างอิงการชำระ :</label>
                                        <input type="text" id="txtInCode" name="txtInCode" class="form-control" disabled />

                                    </div>
                                </div>

                                <div class="row" style="padding-top:6px">
                                    <div class="col-xs-3 ">
                                        <label>ประเภท :</label>
                                        <select tabindex="1" id="ddlProductType" name="ddlProductType" class="form-control select2 select2-hidden-accessible" style="width: 100%;" data-select2-id="1" aria-hidden="true">
                                            <option value="-1">--โปรดระบุ--</option>
                                            @{
                                                foreach (var item in ViewBag.ProductType)
                                                {
                                                    <option value="@item.ProductTypeID">@item.ProductType</option>
                                                }
                                            }
                                        </select>
                                    </div>
                                    <div class="col-xs-3">
                                        <label>แผน :</label>
                                        <select tabindex="2" id="ddlProduct" name="ddlProduct" class="form-control select2 select2-hidden-accessible" style="width: 100%;" data-select2-id="1" aria-hidden="true"></select>
                                    </div>
                                </div>
                                <div class="row" style="padding-top:6px">
                                    <div class="col-xs-3 ">
                                        <label>จำนวนผู้เอาประกัน :</label>
                                        <input tabindex="3" id="txtCountCustomer" name="txtCountCustomer" type="number" style="text-align:right" step="1" min="1" value="1" class="form-control" width="100" />
                                    </div>
                                    <div class="col-xs-3">
                                        <label>เบี้ยรวม :</label>
                                        <input tabindex="4" id="txtPremiumAmount" name="txtPremiumAmount" type="number" style="text-align:right" min="1" class="form-control" width="100" />
                                    </div>
                                </div>
                                <div class="row" style="padding-top:6px">
                                    <div class="col-xs-3 ">
                                        <label>วันที่เริ่มคุ้มครอง :</label>
                                        <div class="input-group date">
                                            <div class="input-group-addon">
                                                <i class="fa fa-calendar"></i>
                                            </div>
                                            <input tabindex="5" type="text" class="form-control pull-right" id="dtpStartCoverDate" name="dtpStartCoverDate" data-provide="datepicker" data-date-language="th-th" />
                                        </div>
                                    </div>
                                    <div class="col-xs-3">
                                        <label>ระยะเวลา :</label>
                                        <input tabindex="6" id="txtDuration" name="txtDuration" type="number" class="form-control pull-right" step="1" value="1" min="1" style="text-align:right" width="60" />

                                    </div>
                                    <div class="col-xs-2" style="padding-top: 34px;">
                                        <label id="lblPeriodType"></label>
                                    </div>
                                    <div class="col-xs-3 ">
                                        <label>วันสิ้นสุดความคุ้มครอง :</label>
                                        <div class="input-group date">
                                            <div class="input-group-addon">
                                                <i class="fa fa-calendar"></i>
                                            </div>
                                            <input tabindex="7" type="text" class="form-control" id="dtpEndCoverDate" name="dtpEndCoverDate" data-provide="datepicker" data-date-language="th-th" />
                                        </div>
                                    </div>
                                </div>

                                <div class="row" style="padding-top:6px">
                                    <div class="col-xs-6 ">
                                        <label>รหัสตัวแทน :</label>
                                        <select tabindex="8" id="ddlAgnt" name="ddlAgnt" class="form-control select2 e" style="width: 100%;" type="text" data-allow-clear="true"></select>
                                    </div>

                                    <div class="col-xs-5 ">
                                        <label>รหัสรถม้าลาย :</label>
                                        <select tabindex="9" id="ddlZebra" name="ddlZebra" class="form-control select2 " style="width: 100%;" type="text" data-allow-clear="true" data-placeholder="ค้นหารายการ"></select>
                                    </div>
                                </div>

                                <input type="hidden" id="hdfappID_policy" name="hdfappID_policy" />
                            </section>
                        </form>
                    </div>

                    <div role="tabpanel" class="tab-pane fade" id="tab2">
                        <form id="frmCustomer" class="form-horizontal">

                            <div class="row" style="padding-top:6px">
                                <div class="col-xs-3">
                                    <label>ประเภทผู้เอาประกัน :</label>
                                    <select id="ddlpersonType_C" name="ddlpersonType_C" class="form-control select2 select2-hidden-accessible" style="width: 100%;" data-select2-id="1" tabindex="-1" aria-hidden="true"></select>
                                </div>
                            </div>

                            <div class="row" style="padding-top:6px">
                                <div class="col-xs-3">
                                    <label>คำนำหน้า :</label>
                                    <select id="ddlTitle_C" name="ddlTitle_C" class="form-control select2 select2-hidden-accessible" style="width: 100%;" data-select2-id="1" tabindex="-1" aria-hidden="true"></select>
                                </div>
                                <div class="col-xs-4 ">
                                    <label>ชื่อ :</label>
                                    <input type="text" class="form-control" id="txtFname_C" name="txtFname_C" />
                                </div>
                                <div class="col-xs-4">
                                    <label>นามสกุล :</label>
                                    <input type="text" class="form-control" id="txtLname_C" name="txtLname_C" />
                                </div>
                            </div>

                            <div class="row" style="padding-top:6px">
                                <div class="col-xs-3">
                                    <label>วันเกิด :</label>
                                    <div class="input-group date">
                                        <div class="input-group-addon">
                                            <i class="fa fa-calendar"></i>
                                        </div>
                                        <input type="text" class="form-control pull-right" id="txtAgeCustomer" name="txtAgeCustomer" data-provide="datepicker" data-date-language="th-th" />
                                    </div>
                                </div>
                                <div class="col-xs-3" style="padding-top:34px">
                                    <label>อายุ :</label>
                                    <span id="yearCustomer"></span>
                                    <label>ปี</label>
                                    <span id="monthCustomer"></span>
                                    <label>เดือน</label>
                                    <span id="dayCustomer"></span>
                                    <label>วัน</label>
                                </div>
                            </div>

                            <div class="row" style="padding-top:6px">
                                <div class="col-xs-3">
                                    <label>บัตรประชาชน :</label>
                                    <input type="text" class="form-control " id="txtZcardCustomer" name="txtZcardCustomer" data-inputmask="'mask': '9-9999-99999-99-9'" />
                                </div>
                                <div class="col-xs-3">
                                    <label>Passport :</label>
                                    <input type="text" class="form-control " id="txtPassCustomer" name="txtPassCustomer" />
                                </div>

                                <div class="col-xs-3 ">
                                    <label>เบอร์โทร :</label>
                                    <input type="text" class="form-control " id="txtTelCustomer" name="txtTelCustomer" data-inputmask="'mask': '999-9999999'" />
                                </div>
                            </div>
                            <div class="row" style="padding-top:6px">
                                <div class="col-xs-5">
                                    <label>ที่อยู่ :</label>
                                    <input type="text" class="form-control" id="txtAddress_Cust1" name="txtAddress_Cust1" />
                                </div>
                            </div>
                            <div class="row" style="padding-top:6px">
                                <div class="col-xs-5">
                                    <input type="text" class="form-control" id="txtAddress_Cust2" name="txtAddress_Cust2" />
                                </div>
                            </div>

                            <div class="row" style="padding-top:6px">
                                <div class="col-xs-3">
                                    <label>ตำบล :</label>
                                    <select id="ddlSubDistrict_Cust" name="ddlSubDistrict_Cust" class="form-control select2 select2-hidden-accessible" style="width: 100%;" data-allow-clear="true" data-placeholder="ค้นหารายการ"></select>
                                </div>
                                <div class="col-xs-3">
                                    <label>อำเภอ :</label>
                                    <input type="text" class="form-control" id="txtDistrict_Cust" name="txtDistrict_Cust" readonly />
                                </div>
                                <div class="col-xs-3">
                                    <label>จังหวัด :</label>
                                    <input type="text" class="form-control" id="txtProvince_Cust" name="txtProvince_Cust" readonly />
                                </div>
                                <div class="col-xs-3">
                                    <label>รหัสไปรษณีย์ :</label>
                                    <input type="text" class="form-control" id="txtZipCode_Cust" name="txtZipCode_Cust" readonly />
                                </div>
                            </div>

                            <div class="row" style="padding-top:6px">
                                <div class="col-xs-12">
                                    <label>หมายเหตุอื่นๆ :</label>
                                    <textarea class="form-control" rows="3" id="txtRemarkCust" name="txtRemarkCust"></textarea>
                                </div>
                            </div>

                            <input type="hidden" id="hdfappID_Customer" name="hdfappID_Customer" />
                        </form>
                    </div>

                    <div role="tabpanel" class="tab-pane fade" id="tab3">
                        <form id="frmPayer" class="form-horizontal">
                            <div class="row" style="padding-top:6px">
                                <div class="col-xs-3">
                                    <label>ประเภทผู้ชำระเบี้ย:</label>
                                    <select id="ddlpersonType_P" name="ddlpersonType_P" class="form-control select2 select2-hidden-accessible selectPayer" style="width: 100%;" data-select2-id="1" tabindex="-1" aria-hidden="true"></select>
                                </div>

                                @*<div class="col-xs-4" style="padding-top:26px">
                        <button id="btnAddSamePayer" type="button" class="btn btn-info">เป็นบุคคลเดียวกันกับผู้เอาประกัน</button>
                        <input id="hdfIsSamePayer" name="hdfIsSamePayer" type="hidden" />
                    </div>*@

                                <div class="col-xs-4" style="padding-top:38px">

                                    <label style="cursor:pointer"><input type="checkbox" id="chkSamePayer" name="chkSamePayer" class="icheckbox_minimal-blue" /> เป็นบุคคลเดียวกันกับผู้เอาประกัน</label>
                                    <input id="hdfIsSamePayer" name="hdfIsSamePayer" type="hidden" value="0" />
                                </div>
                            </div>

                            <div class="row" style="padding-top:6px">
                                <div class="col-xs-3">
                                    <label>คำนำหน้า :</label>
                                    <select id="ddlTitle_P" name="ddlTitle_P" class="form-control select2 select2-hidden-accessible selectPayer" style="width: 100%;" data-select2-id="1" tabindex="-1" aria-hidden="true"></select>
                                </div>
                                <div class="col-xs-4 ">
                                    <label>ชื่อ :</label>
                                    <input type="text" class="form-control inputPayer" id="txtFname_P" name="txtFname_P" />
                                </div>
                                <div class="col-xs-4">
                                    <label>นามสกุล :</label>
                                    <input type="text" class="form-control inputPayer" id="txtLname_P" name="txtLname_P" />
                                </div>
                            </div>

                            <div class="row" style="padding-top:6px">
                                <div class="col-xs-3">
                                    <label>บัตรประชาชน :</label>
                                    <input type="text" class="form-control inputPayer" id="txtZcardPayer" name="txtZcardPayer" data-inputmask="'mask': '9-9999-99999-99-9'" />
                                </div>
                                <div class="col-xs-3">
                                    <label>Passport :</label>
                                    <input type="text" class="form-control inputPayer" id="txtPassPayer" name="txtPassPayer" />
                                </div>

                                <div class="col-xs-3 ">
                                    <label>เบอร์โทร :</label>
                                    <input type="text" class="form-control inputPayer" id="txtTelPayer" name="txtTelPayer" data-inputmask="'mask': '999-9999999'" />
                                </div>
                            </div>
                            <div class="row" style="padding-top:6px">
                                <div class="col-xs-5">
                                    <label>ที่อยู่ :</label>
                                    <input type="text" class="form-control inputPayer" id="txtAddress_Payer1" name="txtAddress_Payer1" />
                                </div>
                            </div>
                            <div class="row" style="padding-top:6px">
                                <div class="col-xs-5">
                                    <input type="text" class="form-control inputPayer" id="txtAddress_Payer2" name="txtAddress_Payer2" />
                                </div>
                            </div>

                            <div class="row" style="padding-top:6px">
                                <div class="col-xs-3">
                                    <label>ตำบล :</label>
                                    <select id="ddlSubDistrict_Payer" name="ddlSubDistrict_Payer" class="form-control select2 select2-hidden-accessible selectPayer" style="width: 100%;" data-select2-id="1" tabindex="-1" aria-hidden="true"></select>
                                </div>
                                <div class="col-xs-3">
                                    <label>อำเภอ :</label>
                                    <input type="text" class="form-control" id="txtDistrict_Payer" name="txtDistrict_Payer" readonly />
                                </div>
                                <div class="col-xs-3">
                                    <label>จังหวัด :</label>
                                    <input type="text" class="form-control" id="txtProvince_Payer" name="txtProvince_Payer" readonly />
                                </div>
                                <div class="col-xs-3">
                                    <label>รหัสไปรษณีย์ :</label>
                                    <input type="text" class="form-control" id="txtZipCode_Payer" name="txtZipCode_Payer" readonly />
                                </div>
                            </div>

                            <input type="hidden" id="hdfappID_payer" name="hdfappID_payer" />
                        </form>

                        <div class="box box-warning box-solid" style="margin-top:10px">
                            <div class="box-header with-border">
                                <h3 class="box-title">ผู้รับผลประโยชน์</h3>

                                <!-- /.box-tools -->
                            </div>
                            <!-- /.box-header -->
                            <div class="box-body">

                                <div class="row">
                                    <div class="col-xs-3">
                                        <button id="btnAddHeir" type="button" class="btn btn-primary btn-sm"><i class="fa fa-plus"></i> เพิ่ม </button>
                                    </div>
                                </div>

                                <div>
                                    <table id="dtHeir" class="table table-bordered table-hover dataTable" style="width:100%"></table>
                                </div>
                            </div>
                            <!-- /.box-body -->
                        </div>
                    </div>


                    <!-- /.box-body-Tab4 -->
                    <div role="tabpanel" class="tab-pane fade" id="tab4">

                        @*<div class="row">
            <div class="col-xs-12">
            <div class="box box-primary box-solid" style="margin: initial">
                <div class="box-header with-border">
                    <h3 class="box-title">การให้ความยินยอมการเก็บ รวบรวม ใช้ เปิดเผยข้อมูลส่วนบุคคล</h3>
                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                    </div>
                </div>

                <div class="box-body">

                    <button type="button" class="btn btn-block btn-warning btn-sm" style="width: 20%" id="btnPDPA">ข้อมูล PDPA</button>
                </div>

            </div>
                </div>
        </div>*@
                        @Html.Partial("~/Views/PartialView/_PDPADetail.cshtml")


                        <div class="row">
                            <div class="col-xs-12">
                                <div class="box-body">
                                    <div>
                                        <button type="button" class="btn btn-info btn-sm" style="float:left" id="btnRefreshDoc"><i class="glyphicon glyphicon-refresh"></i> Refresh</button>
                                    </div>
                                    <div>
                                        <table id="dtDocument" class="table table-bordered table-hover dataTable" style="width:100%"></table>
                                    </div>

                                    <input type="hidden" id="hdfappId_Document" name="hdfappId_Document" />
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- /.box-body-Tab4 -->

                </div>
            </div>
        </div>

        <ul class="pager wizard">
            <li class="previous"><button type="button" class="btn  btn-sm" style="color:gray; background-color:#fcfcfc; float:left"><i class="fa fa-arrow-circle-left"></i> ย้อนกลับ</button></li>
            <li class="next"><button type="button" class="btn btn-sm" style=" color:#ffffff; background-color:#6495ed; float:right" id="btnNext">ถัดไป <i class="fa fa-arrow-circle-right"></i> </button></li>
            <li class="finish"><button type="button" class="btn btn-sm" style=" color:#ffffff; background-color:#60907a; float:right" id="btnFinish"> บันทึกส่งฝ่ายรับประกัน  </button></li>
        </ul>
    </div>
</div>

<!-- /.modal-dialog -->
<div class="modal fade in" id="modal-AddHeir" style="display: none;">
    <div class="modal-dialog">
        <div class="box box-primary" style="width:120%">
            <div class="box-header with-border">
                <h3 class="box-title">เพิ่มผู้รับผลประโยชน์</h3>
            </div>
            <div class="box-body">
                <div class="row">
                    <div class="col-xs-4 ">
                        <label>ความสัมพันธ์ :</label>
                        <select class="form-control select2" style="width: 100%;" tabindex="-1" aria-hidden="true" id="ddlRelationType"></select>
                    </div>
                </div>
                <div class="row" style="padding-top: 5px;">
                    <div class="col-xs-4">
                        <label>คำนำหน้า</label>
                        <select class="form-control select2 inputHeir" style="width: 100%;" tabindex="-1" aria-hidden="true" id="ddlTitleHeir"></select>
                    </div>
                    <div class="col-xs-4">
                        <label>ชื่อ</label>
                        <input type="text" id="txtHeirFname" class="form-control inputHeir" />
                    </div>
                    <div class="col-xs-4">
                        <label>สกุล</label>
                        <input type="text" id="txtHeirLname" class="form-control inputHeir" />
                    </div>
                </div>
                <div class="row" style="padding-top: 5px;">
                    <div class="col-xs-4">
                        <label>เลขบัตรประชาชน</label>
                        <input type="text" id="txtHeirZCard" class="form-control inputHeir" data-inputmask="'mask': '9-9999-99999-99-9'" />
                    </div>
                    <div class="col-xs-4">
                        <label>Passport</label>
                        <input type="text" id="txtHeirPass" class="form-control inputHeir" />
                    </div>
                </div>
                <div class="row" style="padding-top: 5px;">
                    <div class="col-xs-12" style="text-align:center">
                        <button type="button" class="btn btn-success" id="btnSaveHeir"><i class="glyphicon glyphicon-ok"></i> ตกลง</button>
                        <button type="button" class="btn btn-danger" id="btnCancelSaveHeir"><i class="glyphicon glyphicon-remove"></i> ยกเลิก</button>
                    </div>
                </div>
            </div>
            <!-- /.box-body -->
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

@section ViewSpecificJavascript
{
    <script type="text/javascript">
/*const { constants } = require("node:crypto");*/

        $(function () {

            var d = new Date();
            $('.select2').select2();
    $('#dtpStartCoverDate').datepicker({ autoclose: true, format: 'dd/mm/yyyy' }).datepicker("setDate", new Date());

    $('#dtpEndStartCoverDate').datepicker({ autoclose: true, format: 'dd/mm/yyyy' });

    $('#txtAgeCustomer').datepicker({ autoclose: true, format: 'dd/mm/yyyy' }).datepicker("setDate", new Date());
    $('#txtZcardCustomer').inputmask();
    $('#txtTelCustomer').inputmask();

    $('#txtZcardPayer').inputmask();
    $('#txtTelPayer').inputmask();

    $('#txtHeirZCard').inputmask();

            loadAgen();
            loadZebra();
            loadDataDefault();
            loadDataDefaultForPremium();


            $('#ddlProductType').change(function (e) {
                e.preventDefault();
                GetProduct();
                ClearEnabledInput_Application(false);
            });

            $('#ddlProduct').change(function (e) {
                e.preventDefault();
                GetProductDetail();
            });

            $('#txtDuration').change(function (e) {
                e.preventDefault();
                SetEndCoverDate();
            });

            $('#dtpStartCoverDate').change(function (e) {
                e.preventDefault();
                SetEndCoverDate();
            });

            $('#formAll').bootstrapWizard({
                onNext: function (tab, navigation, index) {
                    debugger;
                    if (tab[0].id == "li_tab1") {

                        let result = IsvalidateForApplication();

                        if (result) {
                            let rs = InsertOrUpdateApplication();

                            if (rs) {

                                GetNewCustomer(); 
                                SaveCRMLead();

                            }

                            return rs;
                        }

                        return result;

                        window.scrollTo(0, 0);
                    } else if (tab[0].id == "li_tab2") {

                        let result = IsvalidateForCustomer();

                        if (result) {
                            let rs = InsertOrUpdateCustomer();

                            if (rs) {

                                GetNewPayerandHeir();
                                //let rs_heir = InsertStatutoryHeir();

                                //return rs_heir;
                            }

                            return rs;
                        }

                        return result;

                        window.scrollTo(0, 0);
                    } else if (tab[0].id == "li_tab3") {

                        let result = IsvalidateForPayerandHeir();

                        if (result) {
                            let rs = InsertOrUpdatePayer();

                            if (rs) {
                                GetNewDocument();
                            }

                            return rs;
                        }

                        return result;

                        window.scrollTo(0, 0);
                    }
                },
                onTabClick: function (tab, navigation, index) {
                    return false;
                },
                onPrevious: function (tab, navigation, index) {
                    if (tab[0].id == "li_tab2") {

                        mode_checkINCode = "1"

                        GetDataApplication();
                        window.scrollTo(0, 0);
                    } else if (tab[0].id == "li_tab3") {
                        GetNewCustomer();
                        window.scrollTo(0, 0);
                    } else if (tab[0].id == "li_tab4") {
                        GetNewPayerandHeir();
                        window.scrollTo(0, 0);
                    }
                }
            });

    $('#ddlpersonType_C').change(function (e) {
        e.preventDefault();
        GetTitle($(this).val(), "ddlTitle_C");
        SetEnabledInputWhenGroupPolicy($(this).val());
    });

    $('#txtAgeCustomer').change(function (e) {
        e.preventDefault();

        //CalculageAge
        CalculageAge();
    });

    $('#ddlSubDistrict_Cust').change(function (e) {
        e.preventDefault();
        //GetProvinceDistrict
        GetProvinceDistrict('ddlSubDistrict_Cust');
    });

    $('#ddlpersonType_P').change(function (e) {
        e.preventDefault();
        GetTitle($(this).val(), "ddlTitle_P");
    });

    $('#ddlSubDistrict_Payer').change(function (e) {
        e.preventDefault();
        GetProvinceDistrict('ddlSubDistrict_Payer');
    });

    $('#btnAddHeir').click(function (e) {
        e.preventDefault();
        loadSetDataHeir();

    });

    $('#btnSaveHeir').click(function (e) {
        e.preventDefault();
        if (IsvalidateForSaveHeir()) {
            InsertHeir();
        } else {
            $('#modal-AddHeir').modal('show');
        }

    });

    $('#btnAddSamePayer').click(function (e) {
        e.preventDefault();
        SetDataSamePayer();
    });

    $('#chkSamePayer').on('ifChecked ifUnchecked', function () {
        let chk_SamePayer = $("#chkSamePayer").is(":checked");

        debugger;
        if (chk_SamePayer == true) {
            SetDataSamePayer();
            //DoEnabledSamePayer
            DoEnabledSamePayer(true);
        } else {
            //DoEnabledSamePayer
            DoEnabledSamePayer(false);
            DoClearPayerAndHeir()
            $('#hdfIsSamePayer').val('0');
        }

        //SetEnabledInputWhenGroupPayer($('#hdfIsGroup').val());
    });

    $('#btnFinish').click(function (e) {
        e.preventDefault();
        DoSentApplication();
    });

    $('#btnCancelSaveHeir').click(function (e) {
        e.preventDefault();
        DoClearHeir();
        SetEnabledInputHeir(false);
        $('#modal-AddHeir').modal('hide');
    });

    $('#ddlRelationType').change(function (e) {
        e.preventDefault();
        if ($('#ddlRelationType').val() == '38') {    //ทายาทโดยชอบธรรม
            //SetDataStatutoryheir
            SetDataStatutoryHeViewBagr();
            SetEnabledInputHeir(true);
        } else if ($('#ddlRelationType').val() == '39') {       //บุคคลเดียวกัน
            SetDataHeirSameCustomer();
            SetEnabledInputHeir(true);
        }
        else {
            SetEnabledInputHeir(false);
        }
    });

    $('#btnRefreshDoc').click(function (e) {
        e.preventDefault();
        GetNewDocument();
    });

        $('#btnPDPA').click(function (e) {     // Link ไป PDPD from
            e.preventDefault();
            let appId = $('#hdfappId_Document').val();
            AllMethod(appId, "upsert");
        });

    });

        //---ตัวแปร global  สำหรับเช็ค mode การโหลดข้อมูล----
        var mode_checkPayer = "";
        var mode_checkINCode = "";
        var mode_checkDefaultPayer = "";
        //--------------------------------------------

    const loadDataDefault = () => {
        let appId = '@ViewBag.AppId';

        if (appId != "" && appId != null) {
            $('#hdfappID_policy').val(appId);
            $('#hdfappID_Customer').val(appId);
            $('#hdfappID_payer').val(appId);
            $('#hdfappId_Document').val(appId);
            GetDataApplication();
        }
        }

    const loadDataDefaultForPremium = () => {
        let igCode = '@ViewBag.IGCode';

             if (igCode != "" && igCode != null) {
                 GetDataApplicationForPremium()
             }
        }

        const DoClearCustomer = () => {
        //เคลียร์หน้า*****
            $('#ddlpersonType_C').val('-1').trigger('change.select2');
            $('#ddlTitle_C').val('-1');
            $('#txtFname_C').val("");
            $('#txtLname_C').val("");
            $('#txtAgeCustomer').val("");
            $('#yearCustomer').val("");
            $('#monthCustomer').val("");
            $('#dayCustomer').val("");
            $('#txtZcardCustomer').val("");
            $('#txtPassCustomer').val("");
            $('#txtTelCustomer').val("");
            $('#txtAddress_Cust1').val("");
            $('#txtAddress_Cust2').val("");
            $('#ddlSubDistrict_Cust').val(null).trigger('change.select2');

            $('#txtDistrict_Cust').val("");
            $('#txtProvince_Cust').val("");
            $('#txtZipCode_Cust').val("");
            $('#txtRemarkCust').val("");
            //$('#hdfappID_Customer').val("");

        }
        const DoClearPayerAndHeir = () => {
        //เคลียร์หน้าผู้ชำระเงิน
            $('#ddlpersonType_P').val('-1').trigger('change.select2');
            $('#ddlTitle_P').val('-1').trigger('change.select2');
            $('#chkSamePayer').iCheck('uncheck');
            $('#txtFname_P').val("");
            $('#txtLname_P').val("");
            $('#txtZcardPayer').val("");
            $('#txtPassPayer').val("");

            $('#txtTelPayer').val("");
            $('#txtAddress_Payer1').val("");
            $('#txtAddress_Payer2').val("");
            $('#ddlSubDistrict_Payer').val(null).trigger('change.select2');

            $('#txtDistrict_Payer').val("");
            $('#txtProvince_Payer').val("");
            $('#txtZipCode_Payer').val("");
            //dtHeir

    }

    const GetDataApplication = () => {
        $.ajax({
            type: "GET",
            url: "@Url.Action("GetDataApplication", "Application")",
            data: {
                appID: $('#hdfappID_policy').val()
            },
            dataType: "json",
            async: false,
            success: function (data) {

                //validate เช็คสถานะแอพ
                if (data.ApplicationStatusId !== 2) {
                   DoAlertForAppStatus()
                }

                $('#lblApplicationId').text(data.ApplicationCode);
                $('#txtInCode').val(data.INCode);
                $('#txtBillNo').val(data.BillNo);
                $('#ddlProductType').val(data.ProductTypeID).trigger('change.select2');
                GetProduct();
                $('#ddlProduct').val(data.ProductId).trigger('change.select2');
                GetProductDetail();
                $('#txtCountCustomer').val(data.CountCustomer);
                $('#txtPremiumAmount').val(parseInt(data.SumPremiumAmount));

                let startDate = moment(data.StartCoverDate)._d;
                let endDate = moment(data.EndCoverDate)._d;

                $('#txtDuration').val(data.CoveragePeriod);
                $('#lblPeriodType').text(data.PeriodType);

                $('#dtpStartCoverDate').datepicker({ format: "dd/mm/yyyy" }).datepicker('setDate', new Date(startDate));
                $('#dtpEndStartCoverDate').datepicker({ format: "dd/mm/yyyy" }).datepicker('setDate', new Date(endDate));

                GetAgent(data.EmployeeCode);
                GetZebra(data.Zebra_ID);

                SetEndCoverDate();

                DoDisabledForPremium()
            }
        });
    }

    const GetNewDocument = () => {
        $('#dtDocument').empty();
        var t = $('#dtDocument').dataTable({
                pageLength: 10,
                processing: true,
                serverSide: true,
                responsive: true,
                searching: false,
                info: false,
                //paging: false,
                destroy: true,
                ajax: {
                    url: '@Url.Action("GetDocument", "Application")',
                    type: 'POST',

                       data: function (d) {
                           d.draw = d.draw;
                           d.pageSize = d.length;
                           d.pageStart = d.start;
                           d.sortField = d.columns[d.order[0].column].data;
                           d.orderType = d.order[0].dir;
                           d.search = d.search.value;
                           d.appId = $('#hdfappId_Document').val();
                           d.documentTypeIdList = "24,25";
                       }
                   },
                   columns: [
                       { title: 'รหัส', data: 'DocumentCode', className: 'h-dt-center', },
                       { title: 'รายละเอียด', data: 'DocumentType', className: 'h-dt-center', },
                       { title: 'จำนวนเอกสาร', data: 'FileCount', className: 'h-dt-center d-dt-center', },
                       {
                           data: null,
                           className: 'h-dt-center d-dt-center',
                           mRender: (data, type, full) =>
                           {
                               return  '<a href = "' + data.UrlScan + '" target = "_blank" class="btn btn-warning btn-sm" > <i class="fa fa-fw fa-upload"></i> Scan</a> '
                                   + '<a href="' + data.UrlLinkOpen + '" target="_blank" class="btn btn-info btn-sm" > <i class="fa fa-fw fa-file"></i> เอกสาร </a > ';
                           }
                       },
                   ],
                   bLengthChange: false,
                   //createdRow: function (row, data, index) {
                   //    if (data.ClaimOnLineStatusId == 3) {
                   //        $('td', row).addClass('selected');
                   //    }
                   //},

           });
    }

    const SetDataHeirSameCustomer = () => {
        $('#ddlTitleHeir').val($('#ddlTitle_C').val()).trigger('change.select2');
        $('#txtHeirFname').val($('#txtFname_C').val());
        $('#txtHeirLname').val($('#txtLname_C').val());
        $('#txtHeirZCard').val($('#txtZcardCustomer').val());
        $('#txtHeirPass').val($('#txtPassCustomer').val());
    }

        const SetDataStatutoryHeir = () => {
            //clear ข้อมูลที่ไม่เกี่ยวข้อง
            $('#txtHeirLname').val("");
            $('#txtHeirZCard').val("");
            $('#txtHeirPass').val("");
            $('#ddlTitleHeir').val('2').trigger('change.select2');

            var data = $('#ddlRelationType').select2('data');

            $('#txtHeirFname').val(data[0].text);
    }

        const SetDataSamePayer = () => {

                $('#hdfIsSamePayer').val('1');
                $('#ddlpersonType_P').val($('#ddlpersonType_C').val()).trigger('change.select2');
                GetTitle($('#ddlpersonType_P').val(), "ddlTitle_P");
                $('#ddlTitle_P').val($('#ddlTitle_C').val()).trigger('change.select2');
                $('#txtFname_P').val($('#txtFname_C').val());
                $('#txtLname_P').val($('#txtLname_C').val());
                $('#txtZcardPayer').val($('#txtZcardCustomer').val());
                $('#txtPassPayer').val($('#txtPassCustomer').val());
                $('#txtTelPayer').val($('#txtTelCustomer').val());
                $('#txtAddress_Payer1').val($('#txtAddress_Cust1').val());
                $('#txtAddress_Payer2').val($('#txtAddress_Cust2').val());
                GetSubDistrict($('#ddlSubDistrict_Cust').val(), 'Payer');

    }

    const GetNewPayerandHeir = () => {
            debugger;
        loadprovinceDistrictSubDistrict('ddlSubDistrict_Payer');
        if ($('#hdfIsGroup').val() == "1" || $('#ddlProductType').val() == '35') {
            GetPersonType("ddlpersonType_P", null);
        } else {
            GetPersonType("ddlpersonType_P", $('#hdfIsGroup').val());
        }

        //do clear ui
        DoClearPayerAndHeir();

        if ('@ViewBag.IGCode' != "" && mode_checkPayer == "") {

            GetDataPayerForPremium();
        } else {

            GetDataPayer();
        }

        GetAddress($('#hdfappID_payer').val(), 3, 'Payer');
        GetDataHeir();
        //SetEnabledInputWhenGroupPayer($('#hdfIsGroup').val());
    }

    const loadSetDataHeir = () => {
        //load RelationType
        GetRelationType();
        //load Title
        GetTitle(null, "ddlTitleHeir");
        //GetTitle(2, "ddlTitleHeir");
        // modal Show
        $('#modal-AddHeir').modal('show');
    }

    const GetDataHeir = () => {
        $('#dtHeir').empty();
        var t = $('#dtHeir').dataTable({
                pageLength: 10,
                processing: true,
                serverSide: true,
                responsive: true,
                searching: false,
                info:false,
                destroy: true,
                ajax: {
                    url: '@Url.Action("GetDataHeir", "Application")',
                       type: 'POST',
                       data: function (d) {
                           d.draw = d.draw;
                           d.pageSize = d.length;
                           d.pageStart = d.start;
                           d.sortField = d.columns[d.order[0].column].data;
                           d.orderType = d.order[0].dir;
                           d.search = d.search.value;
                           d.appId = $('#hdfappID_payer').val();
                       }
                   },
                   columns: [
                       { title: 'ชื่อ - สกุล', data: 'HeirName', className: 'h-dt-center', },
                       { title: 'บัตรประชาชน', data: 'IdCardNumber', className: 'h-dt-center', },
                       { title: 'Passport', data: 'PassPortNumber', className: 'h-dt-center ', },
                       { title: 'ความสัมพันธ์', data: 'PersonRelationType', className: 'h-dt-center ', },
                       {
                           data: null,
                           className: 'h-dt-center d-dt-center',
                           mRender: (data, type, full) =>
                           {
                               return '<button type="button"  onclick="DoDeleteHeir(\'' + data.ApplicationHeirId + '\');" class="btn btn-danger btn-sm"><i class="fa fa-fw fa-eraser"></i> ลบ</button>'
                           }, width: '5%'
                       },
                   ],
                   bLengthChange: false,
                   //createdRow: function (row, data, index) {
                   //    if (data.ClaimOnLineStatusId == 3) {
                   //        $('td', row).addClass('selected');
                   //    }
                   //},

           });
    }

    const GetDataPayer = () => {
        $.ajax({
            type: "GET",
            url: "@Url.Action("GetDataPayer", "Application")",
            data: {
                appId: $('#hdfappID_payer').val()
            },
            async:false,
            dataType: "json",
            success: function (data) {

                if (data != false) {
                    debugger;
                    $('#ddlpersonType_P').val(data.PersonType_ID).trigger('change.select2');
                    GetTitle($('#ddlpersonType_P').val(), "ddlTitle_P");
                    $('#ddlTitle_P').val(data.Title_ID).trigger('change.select2');
                    $('#txtFname_P').val(data.FirstName);
                    $('#txtLname_P').val(data.LastName);

                    if (data.IsSameCustomer == true) {
                        $('#hdfIsSamePayer').val('1');

                        $('#chkSamePayer').iCheck('check');
                        DoEnabledSamePayer(true);
                    } else {
                        $('#hdfIsSamePayer').val('0');

                        $('#chkSamePayer').iCheck('uncheck');
                        DoEnabledSamePayer(false);
                    }

                    $('#txtZcardPayer').val(data.IdCardNumber);
                    $('#txtPassPayer').val(data.PassPortNumber);
                    $('#txtTelPayer').val(data.MobileNumber);

                } else {
                    var inCode = $('#txtInCode').val();
                    if (inCode != "" && inCode != null) {

                        mode_checkDefaultPayer = "loadByIN"
                        GetDataPayerForPremium()
                    }

                }

            }
        });
        }


    const GetNewCustomer = () => {
        loadprovinceDistrictSubDistrict('ddlSubDistrict_Cust');

        if ($('#hdfIsGroup').val() == "1" || $('#ddlProductType').val() == '35') {

            GetPersonType("ddlpersonType_C", null);
        } else {
            GetPersonType("ddlpersonType_C", $('#hdfIsGroup').val());
        }

        SetEnabledInputWhenGroupPolicy($('#ddlpersonType_C').val());
        //clear
        DoClearCustomer();
        GetDataCustomer();
        GetAddress($('#hdfappID_Customer').val(), 2, 'Cust');

    }

    const GetDataCustomer = () => {
        $.ajax({
            type: "GET",
            url: "@Url.Action("GetDataCustomer", "Application")",
            data: {
                appId: $('#hdfappID_Customer').val()
            },
            dataType: "json",
            async:false,
            success: function (data) {

                if (data != false) {
                    if (data.PersonType_ID == null)
                    {
                        $('#ddlpersonType_C').val('-1').trigger('change.select2');
                    }
                    else { $('#ddlpersonType_C').val(data.PersonType_ID).trigger('change.select2');  }

                    GetTitle($('#ddlpersonType_C').val(), "ddlTitle_C");
                    $('#ddlTitle_C').val(data.Title_ID).trigger('change.select2');
                    $('#txtFname_C').val(data.FirstName);
                    $('#txtLname_C').val(data.LastName);
                    $('#hdfAppCode').val(data.ApplicationCode);

                    debugger;
                    if (data.BirthDate != null) {
                        let ageDate = moment(data.BirthDate)._d;
                        $('#txtAgeCustomer').datepicker({ format: "dd/mm/yyyy" }).datepicker('setDate', new Date(ageDate));
                        CalculageAge();
                    }
                    $('#txtZcardCustomer').val(data.IdCardNumber);
                    $('#txtPassCustomer').val(data.PassPortNumber);
                    $('#txtTelCustomer').val(data.MobileNumber);
                    $('#txtRemarkCust').val(data.Remark);
                }

            }
        });
    }

    const GetAddress = (appId,addressTypeId,name) => {
        $.ajax({
            type: "GET",
            url: "@Url.Action("GetAddress", "Application")",
            data: {
                appId: appId,
                addressTypeId: addressTypeId

            },
            async: false,
            dataType: "json",
            success: function (data) {

                if (data != false) {
                    $(`#txtAddress_${name}1`).val(data.Address1);
                    $(`#txtAddress_${name}2`).val(data.Address2);

                    if (data.SubDistrict_ID != null) {
                        GetSubDistrict(data.SubDistrict_ID, name);
                    }

                }

            }
        });
    }

    const GetSubDistrict = (subdistrictId, name) => {
        $.ajax({
            type: "GET",
            url: "@Url.Action("ProvinceDistrictSubDistrict", "Master")",
            data: {
                subDistrictId: subdistrictId
            },
            async: false,
            dataType: "json",
            success: function (data) {
                var s = $(`#ddlSubDistrict_${name}`);

                var option = new Option(data[0].SubDistrictDetail, data[0].SubDistrictId, true, true);
                s.append(option).trigger('change.select2');

                $(`#txtDistrict_${name}`).val(data[0].DistrictDetail);
                $(`#txtProvince_${name}`).val(data[0].ProvinceDetail);
                $(`#txtZipCode_${name}`).val(data[0].ZipCode);
            }
        });
    }

    const DoDeleteHeir = (heirId) => {
         window.swal({
             title: 'ยืนยันการทำรายการหรือไม่?',
             type: 'warning',
             showCancelButton: true,
             confirmButtonColor: '#277020',
             confirmButtonText: 'ตกลง',
             cancelButtonText: 'ยกเลิก',
             closeOnConfirm: false,
             closeOnEsc: false,
             closeOnCancel: true
         }, function (isconfirm) {

             if (isconfirm) {
                 DeleteHeir(heirId);
             }

         });
    }

    const DeleteHeir = (heirId) => {
        $.ajax({
            type: "POST",
            url: "@Url.Action("DeleteHeir", "Application")",
            data: {
                applciationHeirId: heirId
            },
            dataType: "json",
            async: false,
            success: function (d) {
                if (d.IsResult == 1) {
                    swal('', d.Msg, 'success');
                    GetDataHeir();

                } else {
                    swal('', d.Msg, 'error');

                }
            }
        });
    }

    const DoSentApplication = () => {
        window.swal({
            title: 'ยืนยันการทำรายการหรือไม่?',
            type: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#277020',
            confirmButtonText: 'ตกลง',
            cancelButtonText: 'ยกเลิก',
            closeOnConfirm: false,
            closeOnEsc: false,
            closeOnCancel: true
        }, function (isconfirm) {


            if (isconfirm)
            {
                //// Check Validate from PDPA_Api
                var appid = $('#hdfappId_Document').val();
                debugger;
                if (SetValidataToDataPDPA(appid)) {

                    if (IsvalidateForPDPA()) {
                        debugger;
                        SentApplication();
                    }
                }
                else
                {
                    SentApplication();
                }

            }

        });
    }

    const SentApplication = () => {
        $.ajax({
            type: "POST",
            url: "@Url.Action("SentApplication", "Application")",
            data: {
                appId: $('#hdfappId_Document').val()
            },
            dataType: "json",
            success: function (d) {
                if (d.IsResult == 1) {
                    swal({
                        title: d.Msg,
                        //text: `เลขเคลม : ${data[1]}`,
                        type: "success",
                        showCancelButton: false,
                        closeOnConfirm: false,
                        showLoaderOnConfirm: true
                    }, function () {
                        setTimeout(function () {
                            //swal("Ajax request finished!");
                            window.close();
                        }, 1000);
                    });
                } else {
                    swal('', d.Msg, 'error');
                }
            }
        });
    }

    const InsertHeir = () => {
        $.ajax({
            type: "POST",
            url: "@Url.Action("InsertHeir", "Application")",
            data: {
                appId: $('#hdfappID_payer').val(),
                title: $('#ddlTitleHeir').val(),
                fName: $('#txtHeirFname').val(),
                lName: $('#txtHeirLname').val(),
                idCard: $('#txtHeirZCard').val(),
                passport: $('#txtHeirPass').val(),
                relationTypeId: $('#ddlRelationType').val()
            },
            dataType: "json",
            async: false,
            success: function (d) {
                if (d.IsResult == 1) {
                    swal('', d.Msg, 'success');
                    $('#modal-AddHeir').modal('hide');
                    GetDataHeir();
                    DoClearHeir();
                } else {
                    swal('', d.Msg, 'error');
                    $('#modal-AddHeir').modal('show');
                }
            }
        });
    }

    const InsertOrUpdatePayer = () => {
        var rs;
        var objdata = $("#frmPayer").serialize();
        $('select[disabled]').each(function () {
            objdata = objdata + '&' + $(this).attr('name') + '=' + $(this).val();
        });
        $.ajax({
            type: "POST",
            url: "@Url.Action("InsertOrUpdatePayer","Application")",
            data: objdata,
            dataType: "json",
            async: false,
            success: function (d) {
                if (d.IsResult == 1) {
                    rs = true;

                    mode_checkPayer = "Edit"

                } else {
                    swal('', d.Msg, 'error');
                    rs = false;
                }
            }
        });

        return rs;
    }

    const InsertOrUpdateCustomer = () => {
        var rs;
        var objdata = $("#frmCustomer").serialize();
        $('select[disabled],input[disabled]').each(function () {
            objdata = objdata + '&' + $(this).attr('name') + '=' + $(this).val();
        });
        $.ajax({
            type: "POST",
            url: "@Url.Action("InsertOrUpdateCustomer","Application")",
            data: objdata,
            async: false,
            dataType: "json",
            success: function (d) {

                debugger;
                if (d.IsResult == 1) {
                    rs = true;
                } else {
                    swal('', d.Msg, 'error');
                    rs = false;
                }
            }
        });

        return rs;
    }

    const InsertOrUpdateApplication = () => {
        var rs;
        var objdata = $("#frmApplication").serialize();
        $('select[disabled],input[disabled]').each(function () {
            objdata = objdata + '&' + $(this).attr('name') + '=' + $(this).val();
        });
        $.ajax({
            type: "POST",
            url: "@Url.Action("InsertOrUpdateApplication", "Application")",
            data: objdata,
            async: false,
            //dataType: "json",
            success: function (d) {

                if (d.IsResult == 1) {
                    rs = true
                    var appid = d.Result;
                    $('#hdfappID_policy').val(appid);
                    $('#hdfappID_Customer').val(appid);
                    $('#hdfappID_payer').val(appid);
                    $('#hdfappId_Document').val(appid);
                } else {
                    swal('', d.Msg, 'error');
                    rs = false;
                }

            }
        });

        return rs;
    }

    const IsvalidateForSaveHeir = () => {
        if ($('#ddlRelationType').val() == "-1") {
            swal("ตรวจสอบข้อมูล", "กรุณาเลือก ความสัมพันธ์", "warning");
            return false;
        }

        if ($('#ddlRelationType').val() != "38" && $('#ddlRelationType').val() != "39") {

            if ($('#ddlTitleHeir').val() == "-1") {
                swal("ตรวจสอบข้อมูล", "กรุณาเลือก คำนำหน้า", "warning");
                return false;
            }

            if ($("#txtHeirFname").val() == "") {
                swal("ตรวจสอบข้อมูล", "กรุณากรอก ชื่อผู้รับผลประโยชน์", "warning");
                return false;
            }

            if ($("#txtHeirLname").val() == "") {
                swal("ตรวจสอบข้อมูล", "กรุณากรอก นามสกุลผู้รับผลประโยชน์", "warning");
                return false;
            }

            //if ($('#txtHeirZCard').val() == "" && $('#txtHeirPass').val() == "") {
            //    swal("ตรวจสอบข้อมูล", "กรุณากรอก เลขบัตรประชาชน หรือ Passport อย่างใดอย่างหนึ่ง", "warning");
            //    return false;
            //} else {

            //    if ($('#txtHeirZCard').val() != "") {

            //        let zCardHeir = $('#txtHeirZCard').val();

            //        let c_zCardHeir = zCardHeir.split('-').join("");
            //        let c_zCardHeir1 = c_zCardHeir.split('_').join("");

            //        if (c_zCardHeir1.length != 13) {
            //            swal("ตรวจสอบข้อมูล", "เลขบัตรประชาชน ไม่ครบ 13 หลัก รบกวนตรวจสอบ", "warning");
            //            return false;
            //        }

            //        if (checkID(c_zCardHeir1) == false) {
            //            swal("ตรวจสอบข้อมูล", "เลขบัตรประชาชนไม่ถูกต้อง รบกวนตรวจสอบ", "warning");
            //            return false;
            //        }

            //        //ตรวจสอบว่าเลขบัตรประชาชนซ้ำกันไหมกับผู้เอาประกัน
            //        let sp_zid = $('#txtZcardCustomer').val().split('-').join("");
            //        if (sp_zid == c_zCardHeir1) {
            //            swal("ตรวจสอบข้อมูล", "เลขบัตรประชาชน ตรงกับผู้เอาประกัน รบกวนตรวจสอบ", "warning");
            //            return false;
            //        }

            //    }

            //}

        }

        return true;
    }

    const IsvalidateForPayerandHeir = () => {

        if ($('#ddlpersonType_P').val() == "-1" || $('#ddlpersonType_P').val() == null) {
            swal("ตรวจสอบข้อมูล", "กรุณาเลือก ประเภทผู้ชำระเบี้ย", "warning");
            return false;
        }

        if ($('#ddlTitle_P').val() == '-1' || $('#ddlTitle_P').val() == null) {
            swal("ตรวจสอบข้อมูล", "กรุณาเลือก คำนำหน้าผู้ชำระเบี้ย", "warning");
            return false;
        }

        if ($('#txtFname_P').val() == "") {
            swal("ตรวจสอบข้อมูล", "กรุณากรอก ชื่อผู้ชำระเบี้ย", "warning");
            return false;
        }

        if ($('#ddlpersonType_P').val() == "2") {
            if ($('#txtLname_P').val() == "") {
                swal("ตรวจสอบข้อมูล", "กรุณากรอก นามสกุลผู้ชำระเบี้ย", "warning");
                return false;
            }
        }

        //if ($('#ddlpersonType_P').val() == "2") {
        //    debugger;
        //    if ($('#txtZcardPayer').val() == "" && $('#txtPassPayer').val() == "") {
        //        swal("ตรวจสอบข้อมูล", "กรุณากรอก เลขบัตรประชาชน หรือ Passport อย่างใดอย่างหนึ่ง", "warning");
        //        return false;
        //    } else {

        //        if ($('#txtZcardPayer').val() != "") {

        //            let zCardPayer = $('#txtZcardPayer').val();

        //            let c_zCardPayer = zCardPayer.split('-').join("");
        //            let c_zCardPayer1 = c_zCardPayer.split('_').join("");

        //            if (c_zCardPayer1.length != 13) {
        //                swal("ตรวจสอบข้อมูล", "เลขบัตรประชาชน ไม่ครบ 13 หลัก รบกวนตรวจสอบ", "warning");
        //                return false;
        //            }

        //            if (checkID(c_zCardPayer1) == false) {
        //                swal("ตรวจสอบข้อมูล", "เลขบัตรประชาชนไม่ถูกต้อง รบกวนตรวจสอบ", "warning");
        //                return false;
        //            }

        //            //ถ้าไม่ได้ติ้กว่าเป็นบุคคลเดียวกันให้ตรวจสอบเลขบัตรประชาชน
        //            let chk_SamePayer = $("#chkSamePayer").is(":checked");
        //            if (chk_SamePayer == false) {
        //                let sp_zid = $('#txtZcardCustomer').val().split('-').join("");
        //                if (sp_zid == c_zCardPayer1) {
        //                    swal("ตรวจสอบข้อมูล", "เลขบัตรประชาชน ตรงกับผู้เอาประกัน ถ้าเป็นคนเดียวกันกรุณาติ้กช่อง เป็นบุคคลเดียวกันกับผู้เอาประกัน ถ้าไม่ใช่กรุณาตรวจสอบข้อมูล", "warning");
        //                    return false;
        //                }
        //            }

        //        }

        //    }

        //}

        //    if ($('#txtTelPayer').val() == "") {
        //        swal("ตรวจสอบข้อมูล", "กรุณากรอก เบอร์โทร", "warning");
        //        return false;
        //    } else {

        //        let telPayer = $('#txtTelPayer').val();

        //        let c_telPayer = telPayer.split('-').join("");
        //        let c_telPayer1 = c_telPayer.split('_').join("");

        //        if (c_telPayer1.length != 10) {
        //            swal("ตรวจสอบข้อมูล", "เบอร์โทร ไม่ครบ 10 หลัก รบกวนตรวจสอบ", "warning");
        //            return false;
        //        }
        //    }

        //    if ($('#txtAddress_Payer1').val() == "" && $('#txtAddress_Payer2').val() == "") {
        //        swal("ตรวจสอบข้อมูล", "กรุณากรอก ที่อยู่", "warning");
        //        return false;
        //    }

        //    if ($('#ddlSubDistrict_Payer').val() == null) {
        //        swal("ตรวจสอบข้อมูล", "กรุณาเลือก ตำบล", "warning");
        //        return false;
        //    }

        //Heir
        let t = $('#dtHeir').DataTable();

        if (t.page.info().recordsTotal == 0) {
            swal("ตรวจสอบข้อมูล", "กรุณาเพิ่ม ผู้รับผลประโยชน์", "warning");
            return false;
        }

        return true;
    }

    const IsvalidateForCustomer = () => {

        if ($('#ddlpersonType_C').val() == "-1" || $('#ddlpersonType_C').val() == null) {
            swal("ตรวจสอบข้อมูล", "กรุณาเลือก ประเภทผู้เอาประกัน", "warning");
            return false;
        }

        if ($('#ddlTitle_C').val() == '-1' || $('#ddlTitle_C').val() == null) {
            swal("ตรวจสอบข้อมูล", "กรุณาเลือก คำนำหน้าผู้เอาประกัน", "warning");
            return false;
        }

        if ($('#ddlpersonType_C').val() == "2") {

            if ($('#txtFname_C').val() == "") {
                swal("ตรวจสอบข้อมูล", "กรุณากรอก ชื่อผู้เอาประกัน", "warning");
                return false;
            }

            if ($('#txtLname_C').val() == "") {
                swal("ตรวจสอบข้อมูล", "กรุณากรอก นามสกุลผู้เอาประกัน", "warning");
                return false;
            }

            let d_BirthDate = $('#txtAgeCustomer').datepicker('getDate');
            let d = new Date();
            let d_startCoverDate = $('#dtpStartCoverDate').datepicker('getDate');

            debugger;
            let check_nowDate = moment(FormatDate(d), "DD/MM/YYYY")._d;
            let checkDate = moment(FormatDate(d_BirthDate), "DD/MM/YYYY")._d;

            if (checkDate >= check_nowDate) {
                swal("ตรวจสอบข้อมูล", "รบกวนตรวจสอบวันเกิด เนื่องจากวันเกิดมากกว่าวันปัจจุบัน", "warning");
                return false;
            }

            if (parseInt($('#yearCustomer').text()) >= 100) {
                swal("ตรวจสอบข้อมูล", "รบกวนตรวจสอบวันเกิด ไม่สามารถเลือกวันเกิดเกิน 100 ปี", "warning");
                return false;
            }

            if ($('#ddlProductType').val() == '32') {

                if (parseInt($('#yearCustomer').text()) < 16) {
                    swal("ตรวจสอบข้อมูล", "รบกวนตรวจสอบวันเกิด เนื่องจากผู้เอาประกันต้องอายุ 16 ปี ขึ้นไป", "warning");
                    return false;
                }

            }

            if ($('#txtZcardCustomer').val() == "" && $('#txtPassCustomer').val() == "") {
                swal("ตรวจสอบข้อมูล", "กรุณากรอก เลขบัตรประชาชน หรือ Passport อย่างใดอย่างหนึ่ง", "warning");
                return false;
            } else {

                if ($('#txtZcardCustomer').val() != "") {

                    let zCardCust = $('#txtZcardCustomer').val();

                    let c_zCardCust = zCardCust.split('-').join("");
                    let c_zCardCust1 = c_zCardCust.split('_').join("");

                    if (c_zCardCust1.length != 13) {
                        swal("ตรวจสอบข้อมูล", "เลขบัตรประชาชน ไม่ครบ 13 หลัก รบกวนตรวจสอบ", "warning");
                        return false;
                    }
                    debugger;
                    if (checkID(c_zCardCust1) == false) {
                        swal("ตรวจสอบข้อมูล", "เลขบัตรประชาชนไม่ถูกต้อง รบกวนตรวจสอบ", "warning");
                        return false;
                    }

                }

            }

        }

            if ($('#txtTelCustomer').val() == "") {
                swal("ตรวจสอบข้อมูล", "กรุณากรอก เบอร์โทร", "warning");
                return false;
            } else {

                let telCust = $('#txtTelCustomer').val();

                let c_telCust = telCust.split('-').join("");
                let c_telCust1 = c_telCust.split('_').join("");

                if (c_telCust1.length != 10) {
                    swal("ตรวจสอบข้อมูล", "เบอร์โทร ไม่ครบ 10 หลัก รบกวนตรวจสอบ", "warning");
                    return false;
                }
            }

            if ($('#txtAddress_Cust1').val() == "" && $('#txtAddress_Cust2').val() == "") {
                swal("ตรวจสอบข้อมูล", "กรุณากรอก ที่อยู่", "warning");
                return false;
            }

            if ($('#ddlSubDistrict_Cust').val() == null) {
                swal("ตรวจสอบข้อมูล", "กรุณาเลือก ตำบล", "warning");
                return false;
            }

            //if ($('#txtRemarkCust').val() == "") {
            //    swal("ตรวจสอบข้อมูล", "กรุณากรอก หมายเหตุ", "warning");
            //    return false;
            //}

        return true;
    }

        const IsvalidateForApplication = () => {

        //ตรวจสอบสถานะ การชำระเงินnกรณีไม่เป็น หักผ่านธนาคาร(3) /สถานะไม่เป็น จ่ายแล้ว(3)
            if ('@ViewBag.IGCode' != "") {

                if (mode_checkINCode == "") {
                    var checkDuplicateCount = GetCountApplicationByInCode()
                    if (checkDuplicateCount > 0) {
                        swal("ตรวจสอบข้อมูล", "ไม่สามารถบันทึกได้ เนื่องจากเลขที่อ้างอิงการชำระนี้ มีในระบบแล้ว", "warning");
                        return false;
                    }
                }

                var orderDetail = GetPremiumOrderDetail()

                if (orderDetail == null) {
                    swal("ตรวจสอบข้อมูล", "ไม่พบข้อมูลการชำระเงินในระบบ", "warning");
                    return false;
                }

                if (orderDetail.paymentMethodTypeId != 3) {
                if (orderDetail.statusId != 3) {
                    swal("ตรวจสอบข้อมูล", "ไม่สามารถบันทึกได้ เนื่องจากสถานะเป็นรอรับชำระ", "warning");
                    return false;
                 }
              }
          }


        if ($('#ddlProductType').val() == "-1") {
            swal("ตรวจสอบข้อมูล", "กรุณาเลือก ประเภท", "warning");
            return false;
        }

        if ($('#ddlProduct').val() == "-1") {
            swal("ตรวจสอบข้อมูล", "กรุณาเลือก แผน", "warning");
            return false;
        }

        if ($('#txtCountCustomer').val() == "") {
            swal("ตรวจสอบข้อมูล", "กรุณากรอก จำนวนผู้เอาประกัน", "warning");
            return false;
        }

        if (parseInt( $('#txtCountCustomer').val()) <= 0) {
            swal("ตรวจสอบข้อมูล", "กรุณากรอก จำนวนผู้เอาประกัน", "warning");
            return false;
        }

        if ($('#txtPremiumAmount').val() == "") {
            swal("ตรวจสอบข้อมูล", "กรุณากรอก เบี้ยรวม", "warning");
            return false;
        }
        if (parseInt($('#txtPremiumAmount').val()) <= 0) {
            swal("ตรวจสอบข้อมูล", "กรุณากรอก เบี้ยรวม", "warning");
            return false;
        }

        if ($('#dtpStartCoverDate').val() == "") {
            swal("ตรวจสอบข้อมูล", "กรุณาเลือก วันคุ้มครอง", "warning");
            return false;
        }

        //if ($('#hdfappID_policy').val() == "") {

        //}

        let d_startCoverDate = $('#dtpStartCoverDate').datepicker('getDate');
        let d = new Date();

        debugger;
        let check_nowDate = moment(FormatDate(d), "DD/MM/YYYY")._d;
        let checkDate = moment(FormatDate(d_startCoverDate), "DD/MM/YYYY")._d;

        if (checkDate < check_nowDate) {
            swal("ตรวจสอบข้อมูล", "ไม่สามารถเลือกวันเริ่มคุ้มครองย้อนหลังวันปัจจุบัน รบกวนตรวจสอบ", "warning");
            return false;
        }

        if ($('#txtDuration').val() == "") {
            swal("ตรวจสอบข้อมูล", "กรุณากรอก ระยะเวลา", "warning");
            return false;
        }

        if (parseInt($('#txtDuration').val()) <= 0) {
            swal("ตรวจสอบข้อมูล", "กรุณากรอก ระยะเวลา", "warning");
            return false;
        }

        if ($('#ddlAgnt').val() == null) {
            swal("ตรวจสอบข้อมูล", "กรุณาเลือก ตัวแทน", "warning");
            return false;
        }

        if ($('#ddlZebra').val() == null) {
            swal("ตรวจสอบข้อมูล", "กรุณาเลือก รถม้าลาย", "warning");
            return false;
        }


        return true;
        }

        const IsvalidateForPDPA = () => {
            var ObjValiDate = GetPDPADetail();

            if (ObjValiDate.IsResult == false) {
                swal("ตรวจสอบข้อมูล", ObjValiDate.Msg, "warning");
                return false;
            }
            else {
                if (ObjValiDate.Result == false) {
                    swal("ตรวจสอบข้อมูล", "กรุณาระบุ ข้อมูลPDPA", "warning");
                    return false;
                }
            }

            return true;
        }

        const FormatDate = (date) => {
            let day;
            let month;
            let year;

            let fullDate;

            let check = moment(date, "DD/MM/YYYY");
            day = check.format("DD");
            month = check.format("MM");
            year = check.format("YYYY");

            fullDate = `${day}/${month}/${year}`;

            return fullDate;
        }

    const SetEnabledInputHeir = (v) => {
        $('.inputHeir').prop('disabled', v);
    }

    const DoEnabledSamePayer = (v) => {
        $('#frmPayer').find('.inputPayer').attr('readonly', v);
        $('#frmPayer').find('.selectPayer').attr('disabled', v);
    }

    const DoClearHeir = () => {
        $('#ddlRelationType').val('-1').trigger('change.select2');
        $('#ddlTitleHeir').val('-1').trigger('change.select2');
        $('#txtHeirFname').val('');
        $('#txtHeirLname').val('');
        $('#txtHeirZCard').val('');
        $('#txtHeirPass').val('');
    }

    const SetEnabledInputWhenGroupPayer = (isGroup) => {
        if ($('#hdfIsSamePayer').val() == '0') {
            if (isGroup == '1') {       //กลุ่ม
                $('#txtLname_P').attr('readonly', true);
            } else {
                $('#txtLname_P').attr('readonly', false);
            }
        }

    }

    const SetEnabledInputWhenGroupPolicy = (personType_C) => {

        if (personType_C == '3') {       //กลุ่ม
            $('#txtLname_C').attr('readonly', true);
            $('#txtAgeCustomer').attr('disabled', true);
            $('#txtAgeCustomer').val(null);
        } else {
            $('#txtLname_C').attr('readonly', false);
            $('#txtAgeCustomer').attr('disabled', false);
            $('#txtAgeCustomer').datepicker({ autoclose: true, format: 'dd/mm/yyyy' }).datepicker("setDate", new Date());
        }
    }

        const ClearEnabledInput_Application = (v) => {
            $('#frmApplication').find('input[type="number"]').attr('disabled', v);
            $('#lblPeriodType').text('');
            $('#hdfIsGroup').val('');
            $('#hdfIsFixPremium').val('');
            $('#hdfPeriodType').val('');
            $('#txtCountCustomer').val('1');
            $('#txtPremiumAmount').val('0');
            $('#txtDuration').val('1');
            $('#dtpEndStartCoverDate').val('');

    }

    const GetRelationType = () => {
        $.ajax({
            type: "GET",
            url: "@Url.Action("GetRelationType", "Master")",
            //data: "name=John&location=Boston",
            dataType: "json",
            async: false,
            success: function (data) {

                $('#ddlRelationType').empty();
                $('#ddlRelationType').append('<option value="-1">--โปรดระบุ--</option>');

                for (var i = 0; i < data.length; i++) {
                    $('#ddlRelationType').append(`<option value="${data[i].Title_ID}">${data[i].TitleDetail}</option>`);
                }
            }
        });
    }

    const GetAgent = (agentCode) => {
        var s = $('#ddlAgnt');
        $.ajax({
            type: "GET",
            url: "@Url.Action("GetAgentName", "Master")",
            data: {
                q: agentCode
            },
            async: false,
            dataType: "json",
            success: function (response) {
                debugger;

                var text = `${response[0].EmployeeCode} - ${response[0].TitleDetail}${response[0].FirstName}  ${response[0].LastName} `;

                var option = new Option(text, response[0].EmployeeCode, true, true);
                s.append(option).trigger('change');

            }
        });
    }

    const GetZebra = (zebraId) => {
        $.ajax({
            type: "GET",
            url: "@Url.Action("GetZebra", "Master")",
            data: {
                zebraId: zebraId
            },
            async: false,
            dataType: "json",
            success: function (response) {

                var s = $('#ddlZebra');

                var option = new Option(response[0].Detail, response[0].Zebra_ID, true, true);
                s.append(option).trigger('change.select2');

            }
        });
    }

    const CalculageAge = () => {
        $.ajax({
            type: "GET",
            url: "@Url.Action("CalculageAge", "Master")",
            data: {
                ageDate: $('#txtAgeCustomer').val()
                , startCoverDate: $('#dtpStartCoverDate').val()
            },
            async: false,
            dataType: "json",
            success: function (response) {
                $('#yearCustomer').text(response.Year);
                $('#monthCustomer').text(response.Month);
                $('#dayCustomer').text(response.Day);
            }
        });
    }

        const GetPersonType = (name,isgroup) => {
            debugger;
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetPersonType", "Master")",
                data: {
                    isgroup: isgroup
                },
                async: false,
                dataType: "json",
                success: function (data) {

                    $(`#${name}`).empty();

                    $(`#${name}`).append('<option value="-1">--โปรดระบุ--</option>');

                    for (var i = 0; i < data.length; i++) {
                        $(`#${name}`).append(`<option value="${data[i].PersonType_ID}">${data[i].PersonTypeDetail}</option>`);
                    }

                }
            });
        }

        const GetTitle = (personType, name) => {
            $(`#${name}`).empty();
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetTitle", "Master")",
                data: {
                    personTypeId: personType
                },
                async: false,
                dataType: "json",
                success: function (data) {
                    //$(`#${name}`).empty();

                    $(`#${name}`).append('<option value="-1">--โปรดระบุ--</option>');

                    for (var i = 0; i < data.length; i++) {
                        $(`#${name}`).append(`<option value="${data[i].Title_ID}">${data[i].TitleDetail}</option>`);
                    }

                }
            });
        }

        const GetProductDetail = () => {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetProductDetail", "Master")",
                data: { productId: $('#ddlProduct').val() },
                dataType: "json",
                async: false,
                success: function (data) {
                    let isGroup = 0;
                    let isFixPremium = 0;

                    if (data[0].IsGroup == true) {
                        isGroup = 1;
                    }

                    if (data[0].IsFixPremium == true) {
                        isFixPremium = 1;
                    }

                    $('#hdfIsGroup').val(isGroup);
                    $('#hdfIsFixPremium').val(isFixPremium);
                    $('#hdfPeriodType').val(data[0].PeriodTypeId);

                    if (isFixPremium == 0) {
                        $('#txtPremiumAmount').attr('readonly', false);

                    } else {
                        $('#txtPremiumAmount').attr('readonly', true);
                    }

                    //ถ้า isgroup = 0 เป็นรายเดี่ยว ให้ปิดช่อง แต่ถ้าเป็น 1 ให้เปิดช่อง
                    if (isGroup == 0) {
                        $('#txtCountCustomer').attr('readonly', true);
                        $('#txtCountCustomer').val('1');
                    } else {
                        $('#txtCountCustomer').attr('readonly', false);
                    }

                    $('#txtPremiumAmount').val(data[0].PremiumPerPolicy);
                    $('#lblPeriodType').text(data[0].PeriodType);

                    //ถ้าเป็นรายวัน ให้เปิดช่องแก้ได้ แต่ถ้าเป็น รายปี Defalut เป็น 1และ ปิดช่อง
                    if (data[0].PeriodTypeId == 5) {
                        $('#txtDuration').attr('readonly', false);
                    } else {
                        $('#txtDuration').val('1');
                        $('#txtDuration').attr('readonly', true);
                        //SetEndCoverdate

                    }

                    SetEndCoverDate();
                }
            });
        }

        const GetProduct = () => {
            $('#ddlProduct').empty();

            $.ajax({
                type: "GET",
                url: "@Url.Action("GetProductDetail", "Master")",
                data: {
                    productTypeId: $('#ddlProductType').val()
                },
                async: false,
                dataType: "json",
                success: function (response) {
                    $('#ddlProduct').append(`<option value="-1">--โปรดระบุ--</option>`);

                    for (var i = 0; i < response.length; i++) {
                        $('#ddlProduct').append(`<option value="${response[i].ProductID}">${response[i].Product}</option>`);
                    }
                }
            });
        }

    const GetProvinceDistrict = (name) => {
        $.ajax({
            type: "GET",
            url: "@Url.Action("ProvinceDistrictSubDistrict", "Master")",
            data: {
                subDistrictId: $(`#${name}`).val()
            },
            async:  false,
            dataType: "json",
            success: function (response) {

                switch (name) {
                    case "ddlSubDistrict_Cust":

                        $('#txtDistrict_Cust').val(response[0].DistrictDetail);
                        $('#txtProvince_Cust').val(response[0].ProvinceDetail);
                        $('#txtZipCode_Cust').val(response[0].ZipCode);

                        break;
                    case "ddlSubDistrict_Payer":
                        $('#txtDistrict_Payer').val(response[0].DistrictDetail);
                        $('#txtProvince_Payer').val(response[0].ProvinceDetail);
                        $('#txtZipCode_Payer').val(response[0].ZipCode);
                        break;
                }

            }
        });
    }

        const loadprovinceDistrictSubDistrict = (name) => {
            $(`#${name}`).select2({
                    ajax: {
                        url: '@Url.Action("ProvinceDistrictSubDistrict", "Master")',
                        dataType: 'json',
                        delay: 250,

                        data: function (params) {
                            return {
                                q: params.term, // search term
                                page: params.page
                            };
                        },
                        processResults: processAddressData,
                        cache: true
                    },
                    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                    minimumInputLength: 3,
                    //templateResult: formatRepo,
                    templateSelection: formatAddressRepoSelection,
                    selectOnClose: true,
                    language: { inputTooShort: function () { return 'กรอกข้อมูลอย่างน้อย 3 ตัวอักษร'; } }
            });
        }

        function processAddressData(data) {
            var mapdata = $.map(data, function (obj) {
                obj.id = obj.SubDistrictId;
                obj.text = `${obj.SubDistrictDetail} > ${obj.DistrictDetail} > ${obj.ProvinceDetail} > ${obj.ZipCode}`;
                return obj;
            });
            return { results: mapdata };
        }

        function formatAddressRepoSelection(repo) {
            return repo.SubDistrictDetail || repo.text;
        }

        const loadZebra = () => {
            $("#ddlZebra").select2({
                    ajax: {
                        url: '@Url.Action("GetZebra", "Master")',
                        dataType: 'json',
                        delay: 250,

                        data: function (params) {
                            return {
                                q: params.term, // search term
                                page: params.page
                            };
                        },
                        processResults: processZebraData,
                        cache: true
                },
                placeholder: 'ค้นหารายการ',
                    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                    minimumInputLength: 3,
                    //templateResult: formatRepo,
                    templateSelection: formatZebraRepoSelection,
                    selectOnClose: true,
                    language: { inputTooShort: function () { return 'กรอกข้อมูลอย่างน้อย 3 ตัวอักษร'; } }
            });
        }

        function processZebraData(data) {
            var mapdata = $.map(data, function (obj) {
                obj.id = obj.Zebra_ID;
                obj.text = obj.Detail;
                return obj;
            });
            return { results: mapdata };
        }

        function formatZebraRepoSelection(repo) {
            return repo.Detail || repo.text;
        }

        const loadAgen = () => {
            $("#ddlAgnt").select2({
                    ajax: {
                        url: '@Url.Action("GetAgentName", "Master")',
                        dataType: 'json',
                        delay: 250,

                        data: function (params) {
                            return {
                                q: params.term, // search term
                                page: params.page
                            };
                        },
                        processResults: processAgentData,
                        cache: true
                },
                placeholder: 'ค้นหารายการ',
                    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                    minimumInputLength: 3,
                    //templateResult: formatRepo,
                templateSelection: formatAgentRepoSelection,
                    selectOnClose: true,
                    language: { inputTooShort: function () { return 'กรอกข้อมูลอย่างน้อย 3 ตัวอักษร'; } }
            });
        }

        function processAgentData(data) {
            var mapdata = $.map(data, function (obj) {
                obj.id = obj.EmployeeCode;
                obj.text = `${obj.EmployeeCode} - ${obj.TitleDetail}${obj.FirstName}  ${obj.LastName} สาขา:${obj.BranchDetail}`;
                return obj;
            });
            return { results: mapdata };
        }

        function formatAgentRepoSelection(repo) {
            //if (repo.text != "ค้นหารายการ") {

            //}

            if (repo.EmployeeCode != undefined) {
                return `${repo.EmployeeCode} - ${repo.TitleDetail}${repo.FirstName}  ${repo.LastName} ` || repo.text;
            } else {
                return repo.text;
            }

            //else {
            //    return repo.text;
            //}

        }

        const SetEndCoverDate = () => {

            var date = $('#dtpStartCoverDate').datepicker('getDate');
            var amountduration = $('#txtDuration').val();
            let day = date.getDate();
            let month = date.getMonth();
            let year = date.getFullYear();

            debugger;

            //5 เป็นรายวัน
            if ($('#hdfPeriodType').val() == '5') {
                day = day + parseInt(amountduration)-1;

            } else {
                year = year + parseInt(amountduration);
            }

            $('#dtpEndCoverDate').datepicker("setDate", new Date(year,month,day));
        }

        //********************************** PremiumOrder Function ***********************************//


          function GetDataApplicationForPremium() {

              var data = GetPremiumOrderDetail()

              var orderSubDetail = data.orderSubDetails[0]

              $('#txtInCode').val(orderSubDetail.inCode);
              //BillNo
              $('#txtBillNo').val(data.billNoId)

              $('#ddlProductType').val(orderSubDetail.productTypeId).trigger('change.select2');
              GetProduct();
              $('#ddlProduct').val(orderSubDetail.productId).trigger('change.select2');
              GetProductDetail();

               //TA & Home แสดงเบี้ยจาก premium
              if ($('#ddlProductType').val() == 33 || $('#ddlProductType').val() == 35) {
                  $('#txtPremiumAmount').val(orderSubDetail.premiumNet);
              }

              $('#dtpStartCoverDate').datepicker({ format: "dd/mm/yyyy" }).datepicker('setDate', new Date());

                     switch (orderSubDetail.periodTypeId) {
                         case 2: $('#lblPeriodType').text("รายเดือน");
                             break;
                         case 3: $('#lblPeriodType').text("รายปี");
                             break;
                         case 4: $('#lblPeriodType').text("ราย 3 ปี");
                             break;
                         case 5: $('#lblPeriodType').text("รายวัน");
                             break;
                         default:
                     }

              DoDisabledForPremium()
        }

        function GetDataPayerForPremium() {

            var dataPayer;

            if (mode_checkDefaultPayer == "loadByIN") {
                dataPayer = GetPremiumPayerDetail()
            } else {
                dataPayer = GetPremiumOrderDetail()
            }

            if (dataPayer == null) {
                swal("ตรวจสอบข้อมูล", "ไม่พบข้อมูลผู้ชำระเบี้ยในระบบ", "warning");
                return;
            }

            $('#ddlpersonType_P').val("2").trigger('change.select2');
            GetTitle($('#ddlpersonType_P').val(), "ddlTitle_P");
            $('#ddlTitle_P').val(dataPayer.titleId).trigger('change.select2');
            $('#txtFname_P').val(dataPayer.firstName);
            $('#txtLname_P').val(dataPayer.lastName);
            $('#txtTelPayer').val(dataPayer.phoneNumber);

            switch (dataPayer.cardTypeId) {
                case 2: $('#txtZcardPayer').val(dataPayer.cardDetail);
                        break;
                case 3: $('#txtPassPayer').val(dataPayer.cardDetail);
                        break;
                default:
            }

            //ตรวสอบชื่อ สกุล และเลขบัตร กรณี เป็นบุคคลเดียวกันกับผู้เอาประกัน
            var dataCustomer = GetDataCustomerDetail()
            var zCardPayer = $('#txtZcardPayer').val().replaceAll("-", "")

            if (dataCustomer.FirstName == $('#txtFname_P').val() && dataCustomer.LastName == $('#txtLname_P').val()
                && String(dataCustomer.IdCardNumber) == zCardPayer
                && String(dataCustomer.PassPortNumber) == $('#txtPassPayer').val())
            {
                $('#hdfIsSamePayer').val('1');
                $('#chkSamePayer').iCheck('check');
                DoEnabledSamePayer(true);
            }

        }

        function GetPremiumOrderDetail() {

         var objOrderDetail;
          $.ajax({
            type: "GET",
            url: "@Url.Action("GetPremiumOrderByIgCode", "Application")",
            data: {

                igCode: "@ViewBag.IGCode"
            },
            async:false,
            dataType: "json",
            success: function (data) {
                objOrderDetail =  data;
            }
           });
            return objOrderDetail;
        }

        function GetPremiumPayerDetail() {

         var objPayerDetail;
          $.ajax({
            type: "GET",
            url: "@Url.Action("GetPremiumPayerByINCode", "Application")",
            data: {

                inCode: $('#txtInCode').val()
            },
            async:false,
            dataType: "json",
            success: function (data) {
                objPayerDetail =  data;
            }
           });
            return objPayerDetail;
        }

        function GetDataCustomerDetail() {

            var objCustomerDetail;
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetDataCustomer", "Application")",
                data: {
                    appId: $('#hdfappID_Customer').val()
                },
                dataType: "json",
                async: false,
                success: function (data) {
                    objCustomerDetail = data
                }
            })

            return objCustomerDetail;
        }

        function GetCountApplicationByInCode() {

            var appCount;
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetDataApplicationByINCode", "Application")",
                data: {
                    inCode: $('#txtInCode').val()
                },
                dataType: "json",
                async: false,
                success: function (data) {
                    appCount = data.length
                }
            })

            return appCount;
        }


        function DoDisabledForPremium() {

            $('#ddlProductType').prop('disabled', true);
            $('#ddlProduct').prop('disabled', true);
            $('#dtpEndCoverDate').prop('disabled', true);
            $('#txtPremiumAmount').prop('disabled', true);
        }

        function DoAlertForAppStatus() {

                  swal({
                        title: "ไม่สามารถทำรายการได้",
                        text: "เนื่องจากสถานะไม่ใช่ บันทึกลูกค้าใหม่",
                        type: "error",
                        showCancelButton: false,
                        closeOnConfirm: false,
                        showLoaderOnConfirm: true
                    }, function () {
                        setTimeout(function () {
                            window.location.replace('@Url.Action("ApplicationSearch", "Monitor")');

                        }, 500);
                    });
        }


        function GetPDPADetail() {               /// GetData Api PDPA
         debugger;
         var objPDPADetail;
            $.ajax({
            type: "GET",
            url: "@Url.Action("GetPDPAByAppId", "Application")",
            data: {

                AppCode: $('#hdfAppCode').val()
                },
                async: false,
            dataType: "json",
            success: function (data) {
                objPDPADetail =  data;
            }
          });
            // ส่งdata ไป function
            return objPDPADetail;
        }
     
        const SaveCRMLead = () => {
            debugger;
            var result;
        $.ajax({
            type: "POST",
            url: "@Url.Action("DoSaveCRMLead", "Application")",
            data: {

                AppCode: $('#hdfAppCode').val()
                ,ProjectId: 18 /// รหัส Project เบ็ตเล็ต
                ,LeadCode:"@ViewBag.LeadCode"
                },
                async: false,
            dataType: "json",
            success: function (data) {
                result = data;
            }
        });
    }






    </script>
}