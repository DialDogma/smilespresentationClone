//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmileSPersonUpdate.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CustomerBaseEntities : DbContext
    {
        public CustomerBaseEntities()
            : base("name=CustomerBaseEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<usp_DisclosureSMS_Title_Select_Result> usp_DisclosureSMS_Title_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DisclosureSMS_Title_Select_Result>("usp_DisclosureSMS_Title_Select");
        }
    
        public virtual ObjectResult<usp_DisclosureSMS_Update_Result> usp_DisclosureSMS_Update(Nullable<int> disclosureSMSId, string zcardId, string titleCode, string firstName, string lastName, Nullable<System.DateTime> birthDate, string mobileNumber, string email, Nullable<int> disclosureSMSStatusId, string ipAddress)
        {
            var disclosureSMSIdParameter = disclosureSMSId.HasValue ?
                new ObjectParameter("DisclosureSMSId", disclosureSMSId) :
                new ObjectParameter("DisclosureSMSId", typeof(int));
    
            var zcardIdParameter = zcardId != null ?
                new ObjectParameter("ZcardId", zcardId) :
                new ObjectParameter("ZcardId", typeof(string));
    
            var titleCodeParameter = titleCode != null ?
                new ObjectParameter("TitleCode", titleCode) :
                new ObjectParameter("TitleCode", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var birthDateParameter = birthDate.HasValue ?
                new ObjectParameter("BirthDate", birthDate) :
                new ObjectParameter("BirthDate", typeof(System.DateTime));
    
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var disclosureSMSStatusIdParameter = disclosureSMSStatusId.HasValue ?
                new ObjectParameter("DisclosureSMSStatusId", disclosureSMSStatusId) :
                new ObjectParameter("DisclosureSMSStatusId", typeof(int));
    
            var ipAddressParameter = ipAddress != null ?
                new ObjectParameter("IpAddress", ipAddress) :
                new ObjectParameter("IpAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DisclosureSMS_Update_Result>("usp_DisclosureSMS_Update", disclosureSMSIdParameter, zcardIdParameter, titleCodeParameter, firstNameParameter, lastNameParameter, birthDateParameter, mobileNumberParameter, emailParameter, disclosureSMSStatusIdParameter, ipAddressParameter);
        }
    
        public virtual ObjectResult<usp_DisclosureSMS_Select_Result> usp_DisclosureSMS_Select(string applicationCode, string iPAddress, string oS, string browser)
        {
            var applicationCodeParameter = applicationCode != null ?
                new ObjectParameter("ApplicationCode", applicationCode) :
                new ObjectParameter("ApplicationCode", typeof(string));
    
            var iPAddressParameter = iPAddress != null ?
                new ObjectParameter("IPAddress", iPAddress) :
                new ObjectParameter("IPAddress", typeof(string));
    
            var oSParameter = oS != null ?
                new ObjectParameter("OS", oS) :
                new ObjectParameter("OS", typeof(string));
    
            var browserParameter = browser != null ?
                new ObjectParameter("Browser", browser) :
                new ObjectParameter("Browser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DisclosureSMS_Select_Result>("usp_DisclosureSMS_Select", applicationCodeParameter, iPAddressParameter, oSParameter, browserParameter);
        }
    }
}
