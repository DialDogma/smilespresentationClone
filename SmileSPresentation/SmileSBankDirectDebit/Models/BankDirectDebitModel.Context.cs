//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmileSBankDirectDebit.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BankDirectDebitDBContext : DbContext
    {
        public BankDirectDebitDBContext()
            : base("name=BankDirectDebitDBContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BankDirectDebit> BankDirectDebits { get; set; }
        public virtual DbSet<BankDirectDebitDetail> BankDirectDebitDetails { get; set; }
        public virtual DbSet<BankDirectDebitHeader> BankDirectDebitHeaders { get; set; }
        public virtual DbSet<BankDirectDebitHeaderGroup> BankDirectDebitHeaderGroups { get; set; }
        public virtual DbSet<BankDirectDebitHeaderXAppCode> BankDirectDebitHeaderXAppCodes { get; set; }
        public virtual DbSet<BankDirectDebitPrintLog> BankDirectDebitPrintLogs { get; set; }
        public virtual DbSet<BankDirectDebitStatu> BankDirectDebitStatus { get; set; }
        public virtual DbSet<DDRStandardFormatDetail> DDRStandardFormatDetails { get; set; }
        public virtual DbSet<DDRStandardFormatHeader> DDRStandardFormatHeaders { get; set; }
        public virtual DbSet<DeliverStatu> DeliverStatus { get; set; }
        public virtual DbSet<EmailStatu> EmailStatus { get; set; }
        public virtual DbSet<KTBReportDetail> KTBReportDetails { get; set; }
        public virtual DbSet<KTBReportHeader> KTBReportHeaders { get; set; }
        public virtual DbSet<KTBReportStatu> KTBReportStatus { get; set; }
        public virtual DbSet<KTBTransactionStatu> KTBTransactionStatus { get; set; }
        public virtual DbSet<Log> Logs { get; set; }
        public virtual DbSet<ProgramConfig> ProgramConfigs { get; set; }
        public virtual DbSet<Status> Status { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<TransactionCodeControl> TransactionCodeControls { get; set; }
        public virtual DbSet<TransactionCodeControlType> TransactionCodeControlTypes { get; set; }
    
        public virtual ObjectResult<usp_DDRStandardFormatDetail_Select_Result> usp_DDRStandardFormatDetail_Select(Nullable<int> dDRStandardFormatHeaderId, Nullable<int> recordTypeId)
        {
            var dDRStandardFormatHeaderIdParameter = dDRStandardFormatHeaderId.HasValue ?
                new ObjectParameter("DDRStandardFormatHeaderId", dDRStandardFormatHeaderId) :
                new ObjectParameter("DDRStandardFormatHeaderId", typeof(int));
    
            var recordTypeIdParameter = recordTypeId.HasValue ?
                new ObjectParameter("RecordTypeId", recordTypeId) :
                new ObjectParameter("RecordTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DDRStandardFormatDetail_Select_Result>("usp_DDRStandardFormatDetail_Select", dDRStandardFormatHeaderIdParameter, recordTypeIdParameter);
        }
    
        public virtual ObjectResult<usp_DDRStandardFormatHeader_Insert_Result> usp_DDRStandardFormatHeader_Insert(string fileBackupPath, Nullable<int> totalCountRow, string headerText, string footerText, string firstSequenceNo, string bankCode, string companyName, Nullable<System.DateTime> processDate, string processDateText, string headerBlank, string lastSequenceNo, Nullable<int> totalRegisterRecords, Nullable<int> totalChangeRecords, Nullable<int> totalDeleteRecords, string footerBlank, Nullable<bool> isActive, Nullable<int> createByUserId)
        {
            var fileBackupPathParameter = fileBackupPath != null ?
                new ObjectParameter("FileBackupPath", fileBackupPath) :
                new ObjectParameter("FileBackupPath", typeof(string));
    
            var totalCountRowParameter = totalCountRow.HasValue ?
                new ObjectParameter("TotalCountRow", totalCountRow) :
                new ObjectParameter("TotalCountRow", typeof(int));
    
            var headerTextParameter = headerText != null ?
                new ObjectParameter("HeaderText", headerText) :
                new ObjectParameter("HeaderText", typeof(string));
    
            var footerTextParameter = footerText != null ?
                new ObjectParameter("FooterText", footerText) :
                new ObjectParameter("FooterText", typeof(string));
    
            var firstSequenceNoParameter = firstSequenceNo != null ?
                new ObjectParameter("FirstSequenceNo", firstSequenceNo) :
                new ObjectParameter("FirstSequenceNo", typeof(string));
    
            var bankCodeParameter = bankCode != null ?
                new ObjectParameter("BankCode", bankCode) :
                new ObjectParameter("BankCode", typeof(string));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var processDateParameter = processDate.HasValue ?
                new ObjectParameter("ProcessDate", processDate) :
                new ObjectParameter("ProcessDate", typeof(System.DateTime));
    
            var processDateTextParameter = processDateText != null ?
                new ObjectParameter("ProcessDateText", processDateText) :
                new ObjectParameter("ProcessDateText", typeof(string));
    
            var headerBlankParameter = headerBlank != null ?
                new ObjectParameter("HeaderBlank", headerBlank) :
                new ObjectParameter("HeaderBlank", typeof(string));
    
            var lastSequenceNoParameter = lastSequenceNo != null ?
                new ObjectParameter("LastSequenceNo", lastSequenceNo) :
                new ObjectParameter("LastSequenceNo", typeof(string));
    
            var totalRegisterRecordsParameter = totalRegisterRecords.HasValue ?
                new ObjectParameter("TotalRegisterRecords", totalRegisterRecords) :
                new ObjectParameter("TotalRegisterRecords", typeof(int));
    
            var totalChangeRecordsParameter = totalChangeRecords.HasValue ?
                new ObjectParameter("TotalChangeRecords", totalChangeRecords) :
                new ObjectParameter("TotalChangeRecords", typeof(int));
    
            var totalDeleteRecordsParameter = totalDeleteRecords.HasValue ?
                new ObjectParameter("TotalDeleteRecords", totalDeleteRecords) :
                new ObjectParameter("TotalDeleteRecords", typeof(int));
    
            var footerBlankParameter = footerBlank != null ?
                new ObjectParameter("FooterBlank", footerBlank) :
                new ObjectParameter("FooterBlank", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var createByUserIdParameter = createByUserId.HasValue ?
                new ObjectParameter("CreateByUserId", createByUserId) :
                new ObjectParameter("CreateByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DDRStandardFormatHeader_Insert_Result>("usp_DDRStandardFormatHeader_Insert", fileBackupPathParameter, totalCountRowParameter, headerTextParameter, footerTextParameter, firstSequenceNoParameter, bankCodeParameter, companyNameParameter, processDateParameter, processDateTextParameter, headerBlankParameter, lastSequenceNoParameter, totalRegisterRecordsParameter, totalChangeRecordsParameter, totalDeleteRecordsParameter, footerBlankParameter, isActiveParameter, createByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_DDRStandardFormatDetail_ByAccountNo_Select_Result> usp_DDRStandardFormatDetail_ByAccountNo_Select(string accountNo)
        {
            var accountNoParameter = accountNo != null ?
                new ObjectParameter("AccountNo", accountNo) :
                new ObjectParameter("AccountNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DDRStandardFormatDetail_ByAccountNo_Select_Result>("usp_DDRStandardFormatDetail_ByAccountNo_Select", accountNoParameter);
        }
    
        public virtual ObjectResult<usp_DDRStandardFormatHeader_Update_Result> usp_DDRStandardFormatHeader_Update(Nullable<int> dDRStandardFormatHeaderId, string headerText, string footerText, Nullable<int> updateByUserId)
        {
            var dDRStandardFormatHeaderIdParameter = dDRStandardFormatHeaderId.HasValue ?
                new ObjectParameter("DDRStandardFormatHeaderId", dDRStandardFormatHeaderId) :
                new ObjectParameter("DDRStandardFormatHeaderId", typeof(int));
    
            var headerTextParameter = headerText != null ?
                new ObjectParameter("HeaderText", headerText) :
                new ObjectParameter("HeaderText", typeof(string));
    
            var footerTextParameter = footerText != null ?
                new ObjectParameter("FooterText", footerText) :
                new ObjectParameter("FooterText", typeof(string));
    
            var updateByUserIdParameter = updateByUserId.HasValue ?
                new ObjectParameter("UpdateByUserId", updateByUserId) :
                new ObjectParameter("UpdateByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DDRStandardFormatHeader_Update_Result>("usp_DDRStandardFormatHeader_Update", dDRStandardFormatHeaderIdParameter, headerTextParameter, footerTextParameter, updateByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_BankDirectDebitMonitor_Select_Result> usp_BankDirectDebitMonitor_Select(Nullable<int> bankId, string accountNo, string accountName, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string search)
        {
            var bankIdParameter = bankId.HasValue ?
                new ObjectParameter("BankId", bankId) :
                new ObjectParameter("BankId", typeof(int));
    
            var accountNoParameter = accountNo != null ?
                new ObjectParameter("AccountNo", accountNo) :
                new ObjectParameter("AccountNo", typeof(string));
    
            var accountNameParameter = accountName != null ?
                new ObjectParameter("AccountName", accountName) :
                new ObjectParameter("AccountName", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BankDirectDebitMonitor_Select_Result>("usp_BankDirectDebitMonitor_Select", bankIdParameter, accountNoParameter, accountNameParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchParameter);
        }
    
        public virtual ObjectResult<usp_Bank_Select_Result> usp_Bank_Select(Nullable<int> bankId, string bankCode)
        {
            var bankIdParameter = bankId.HasValue ?
                new ObjectParameter("BankId", bankId) :
                new ObjectParameter("BankId", typeof(int));
    
            var bankCodeParameter = bankCode != null ?
                new ObjectParameter("BankCode", bankCode) :
                new ObjectParameter("BankCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Bank_Select_Result>("usp_Bank_Select", bankIdParameter, bankCodeParameter);
        }
    
        public virtual ObjectResult<usp_AccountNoFromSSS_Select_Result> usp_AccountNoFromSSS_Select(Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string search)
        {
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AccountNoFromSSS_Select_Result>("usp_AccountNoFromSSS_Select", indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationDetailByAccountNo_Select_Result> usp_ApplicationDetailByAccountNo_Select(string bankId, string accountNo, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var bankIdParameter = bankId != null ?
                new ObjectParameter("BankId", bankId) :
                new ObjectParameter("BankId", typeof(string));
    
            var accountNoParameter = accountNo != null ?
                new ObjectParameter("AccountNo", accountNo) :
                new ObjectParameter("AccountNo", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationDetailByAccountNo_Select_Result>("usp_ApplicationDetailByAccountNo_Select", bankIdParameter, accountNoParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_BankDirectDebitDetail_Select_Result> usp_BankDirectDebitDetail_Select(Nullable<int> bankDirectDebitHeaderId)
        {
            var bankDirectDebitHeaderIdParameter = bankDirectDebitHeaderId.HasValue ?
                new ObjectParameter("BankDirectDebitHeaderId", bankDirectDebitHeaderId) :
                new ObjectParameter("BankDirectDebitHeaderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BankDirectDebitDetail_Select_Result>("usp_BankDirectDebitDetail_Select", bankDirectDebitHeaderIdParameter);
        }
    
        public virtual ObjectResult<usp_BankDirectDebitHeader_Select_Result> usp_BankDirectDebitHeader_Select(string bankDirectDebitHeaderId, Nullable<int> branchId, Nullable<System.DateTime> createdDateFrom, Nullable<System.DateTime> createdDateTo, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var bankDirectDebitHeaderIdParameter = bankDirectDebitHeaderId != null ?
                new ObjectParameter("BankDirectDebitHeaderId", bankDirectDebitHeaderId) :
                new ObjectParameter("BankDirectDebitHeaderId", typeof(string));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var createdDateFromParameter = createdDateFrom.HasValue ?
                new ObjectParameter("CreatedDateFrom", createdDateFrom) :
                new ObjectParameter("CreatedDateFrom", typeof(System.DateTime));
    
            var createdDateToParameter = createdDateTo.HasValue ?
                new ObjectParameter("CreatedDateTo", createdDateTo) :
                new ObjectParameter("CreatedDateTo", typeof(System.DateTime));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BankDirectDebitHeader_Select_Result>("usp_BankDirectDebitHeader_Select", bankDirectDebitHeaderIdParameter, branchIdParameter, createdDateFromParameter, createdDateToParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_BankDirectDebitAccountNo_Select_Result> usp_BankDirectDebitAccountNo_Select(string bankId, Nullable<int> branchId, Nullable<int> bankDirectDebitStatusId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var bankIdParameter = bankId != null ?
                new ObjectParameter("BankId", bankId) :
                new ObjectParameter("BankId", typeof(string));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var bankDirectDebitStatusIdParameter = bankDirectDebitStatusId.HasValue ?
                new ObjectParameter("BankDirectDebitStatusId", bankDirectDebitStatusId) :
                new ObjectParameter("BankDirectDebitStatusId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BankDirectDebitAccountNo_Select_Result>("usp_BankDirectDebitAccountNo_Select", bankIdParameter, branchIdParameter, bankDirectDebitStatusIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_BankDirectDebitAccountNoDetail_Select_Result> usp_BankDirectDebitAccountNoDetail_Select(string bankId, string accountNo, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var bankIdParameter = bankId != null ?
                new ObjectParameter("BankId", bankId) :
                new ObjectParameter("BankId", typeof(string));
    
            var accountNoParameter = accountNo != null ?
                new ObjectParameter("AccountNo", accountNo) :
                new ObjectParameter("AccountNo", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BankDirectDebitAccountNoDetail_Select_Result>("usp_BankDirectDebitAccountNoDetail_Select", bankIdParameter, accountNoParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_BankDirectDebitDetail_Insert_Result> usp_BankDirectDebitDetail_Insert(string bankId, string accountNoList, Nullable<int> createdByUserId)
        {
            var bankIdParameter = bankId != null ?
                new ObjectParameter("BankId", bankId) :
                new ObjectParameter("BankId", typeof(string));
    
            var accountNoListParameter = accountNoList != null ?
                new ObjectParameter("AccountNoList", accountNoList) :
                new ObjectParameter("AccountNoList", typeof(string));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BankDirectDebitDetail_Insert_Result>("usp_BankDirectDebitDetail_Insert", bankIdParameter, accountNoListParameter, createdByUserIdParameter);
        }
    
        public virtual int usp_BankDirectDebit_Update(Nullable<int> dDRStandardFormatHeaderId)
        {
            var dDRStandardFormatHeaderIdParameter = dDRStandardFormatHeaderId.HasValue ?
                new ObjectParameter("DDRStandardFormatHeaderId", dDRStandardFormatHeaderId) :
                new ObjectParameter("DDRStandardFormatHeaderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_BankDirectDebit_Update", dDRStandardFormatHeaderIdParameter);
        }
    
        public virtual ObjectResult<usp_BankDirectDebitHeader_Delete_Result> usp_BankDirectDebitHeader_Delete(string bankDirectDebitHeaderId, Nullable<int> createdByUserId)
        {
            var bankDirectDebitHeaderIdParameter = bankDirectDebitHeaderId != null ?
                new ObjectParameter("BankDirectDebitHeaderId", bankDirectDebitHeaderId) :
                new ObjectParameter("BankDirectDebitHeaderId", typeof(string));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BankDirectDebitHeader_Delete_Result>("usp_BankDirectDebitHeader_Delete", bankDirectDebitHeaderIdParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_BankDirectDebitMonitor_Select_V2_Result> usp_BankDirectDebitMonitor_Select_V2(Nullable<int> bankId, string accountNo, string accountName, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string search)
        {
            var bankIdParameter = bankId.HasValue ?
                new ObjectParameter("BankId", bankId) :
                new ObjectParameter("BankId", typeof(int));
    
            var accountNoParameter = accountNo != null ?
                new ObjectParameter("AccountNo", accountNo) :
                new ObjectParameter("AccountNo", typeof(string));
    
            var accountNameParameter = accountName != null ?
                new ObjectParameter("AccountName", accountName) :
                new ObjectParameter("AccountName", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BankDirectDebitMonitor_Select_V2_Result>("usp_BankDirectDebitMonitor_Select_V2", bankIdParameter, accountNoParameter, accountNameParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> usp_BankDirectDebitPrintLog_Insert(Nullable<int> bankDirectDebitHeaderId, Nullable<int> createByUserId)
        {
            var bankDirectDebitHeaderIdParameter = bankDirectDebitHeaderId.HasValue ?
                new ObjectParameter("BankDirectDebitHeaderId", bankDirectDebitHeaderId) :
                new ObjectParameter("BankDirectDebitHeaderId", typeof(int));
    
            var createByUserIdParameter = createByUserId.HasValue ?
                new ObjectParameter("CreateByUserId", createByUserId) :
                new ObjectParameter("CreateByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("usp_BankDirectDebitPrintLog_Insert", bankDirectDebitHeaderIdParameter, createByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_Branch_Select_Result> usp_Branch_Select(Nullable<int> branchId)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Branch_Select_Result>("usp_Branch_Select", branchIdParameter);
        }
    
        public virtual int usp_BankDirectDebit_KTBReport_Update(Nullable<int> kTBReportHeaderId)
        {
            var kTBReportHeaderIdParameter = kTBReportHeaderId.HasValue ?
                new ObjectParameter("KTBReportHeaderId", kTBReportHeaderId) :
                new ObjectParameter("KTBReportHeaderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_BankDirectDebit_KTBReport_Update", kTBReportHeaderIdParameter);
        }
    
        public virtual ObjectResult<usp_BankDirectDebitHeaderGroupDetail_Select_Result> usp_BankDirectDebitHeaderGroupDetail_Select(Nullable<int> bankDirectDebitHeaderGroupId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var bankDirectDebitHeaderGroupIdParameter = bankDirectDebitHeaderGroupId.HasValue ?
                new ObjectParameter("BankDirectDebitHeaderGroupId", bankDirectDebitHeaderGroupId) :
                new ObjectParameter("BankDirectDebitHeaderGroupId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BankDirectDebitHeaderGroupDetail_Select_Result>("usp_BankDirectDebitHeaderGroupDetail_Select", bankDirectDebitHeaderGroupIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_BankDirectDebitHeaderGroup_Select_Result> usp_BankDirectDebitHeaderGroup_Select(Nullable<System.DateTime> createdDateFrom, Nullable<System.DateTime> createdDateTo, Nullable<int> emailStatusId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var createdDateFromParameter = createdDateFrom.HasValue ?
                new ObjectParameter("CreatedDateFrom", createdDateFrom) :
                new ObjectParameter("CreatedDateFrom", typeof(System.DateTime));
    
            var createdDateToParameter = createdDateTo.HasValue ?
                new ObjectParameter("CreatedDateTo", createdDateTo) :
                new ObjectParameter("CreatedDateTo", typeof(System.DateTime));
    
            var emailStatusIdParameter = emailStatusId.HasValue ?
                new ObjectParameter("EmailStatusId", emailStatusId) :
                new ObjectParameter("EmailStatusId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BankDirectDebitHeaderGroup_Select_Result>("usp_BankDirectDebitHeaderGroup_Select", createdDateFromParameter, createdDateToParameter, emailStatusIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_BankDirectDebitHeaderGroup_Insert_Result> usp_BankDirectDebitHeaderGroup_Insert(string bankId, Nullable<int> createdByUserId)
        {
            var bankIdParameter = bankId != null ?
                new ObjectParameter("BankId", bankId) :
                new ObjectParameter("BankId", typeof(string));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BankDirectDebitHeaderGroup_Insert_Result>("usp_BankDirectDebitHeaderGroup_Insert", bankIdParameter, createdByUserIdParameter);
        }
    
        public virtual int usp_BankDirectDebitHeaderGroup_Update(string bankDirectDebitHeaderGroupCode, Nullable<int> emailStatusId, Nullable<int> createdByUserId)
        {
            var bankDirectDebitHeaderGroupCodeParameter = bankDirectDebitHeaderGroupCode != null ?
                new ObjectParameter("BankDirectDebitHeaderGroupCode", bankDirectDebitHeaderGroupCode) :
                new ObjectParameter("BankDirectDebitHeaderGroupCode", typeof(string));
    
            var emailStatusIdParameter = emailStatusId.HasValue ?
                new ObjectParameter("EmailStatusId", emailStatusId) :
                new ObjectParameter("EmailStatusId", typeof(int));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_BankDirectDebitHeaderGroup_Update", bankDirectDebitHeaderGroupCodeParameter, emailStatusIdParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_DeliverStatus_Select_Result> usp_DeliverStatus_Select(Nullable<int> deliverStatusId)
        {
            var deliverStatusIdParameter = deliverStatusId.HasValue ?
                new ObjectParameter("DeliverStatusId", deliverStatusId) :
                new ObjectParameter("DeliverStatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DeliverStatus_Select_Result>("usp_DeliverStatus_Select", deliverStatusIdParameter);
        }
    
        public virtual ObjectResult<usp_ReportBankDirectDebitDeliver_Result> usp_ReportBankDirectDebitDeliver(Nullable<System.DateTime> createdDateFrom, Nullable<System.DateTime> createdDateTo, Nullable<int> branchId, string bankId, Nullable<int> deliverStatusId, Nullable<int> bankDirectDebitStatusDisplayId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var createdDateFromParameter = createdDateFrom.HasValue ?
                new ObjectParameter("CreatedDateFrom", createdDateFrom) :
                new ObjectParameter("CreatedDateFrom", typeof(System.DateTime));
    
            var createdDateToParameter = createdDateTo.HasValue ?
                new ObjectParameter("CreatedDateTo", createdDateTo) :
                new ObjectParameter("CreatedDateTo", typeof(System.DateTime));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var bankIdParameter = bankId != null ?
                new ObjectParameter("BankId", bankId) :
                new ObjectParameter("BankId", typeof(string));
    
            var deliverStatusIdParameter = deliverStatusId.HasValue ?
                new ObjectParameter("DeliverStatusId", deliverStatusId) :
                new ObjectParameter("DeliverStatusId", typeof(int));
    
            var bankDirectDebitStatusDisplayIdParameter = bankDirectDebitStatusDisplayId.HasValue ?
                new ObjectParameter("BankDirectDebitStatusDisplayId", bankDirectDebitStatusDisplayId) :
                new ObjectParameter("BankDirectDebitStatusDisplayId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReportBankDirectDebitDeliver_Result>("usp_ReportBankDirectDebitDeliver", createdDateFromParameter, createdDateToParameter, branchIdParameter, bankIdParameter, deliverStatusIdParameter, bankDirectDebitStatusDisplayIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_KTBReportDetail_Select_Result> usp_KTBReportDetail_Select(Nullable<int> kTBReportHeaderId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var kTBReportHeaderIdParameter = kTBReportHeaderId.HasValue ?
                new ObjectParameter("KTBReportHeaderId", kTBReportHeaderId) :
                new ObjectParameter("KTBReportHeaderId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_KTBReportDetail_Select_Result>("usp_KTBReportDetail_Select", kTBReportHeaderIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_KTBReportHeader_Select_Result> usp_KTBReportHeader_Select(string bankId, Nullable<System.DateTime> createdDateFrom, Nullable<System.DateTime> createdDateTo, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var bankIdParameter = bankId != null ?
                new ObjectParameter("BankId", bankId) :
                new ObjectParameter("BankId", typeof(string));
    
            var createdDateFromParameter = createdDateFrom.HasValue ?
                new ObjectParameter("CreatedDateFrom", createdDateFrom) :
                new ObjectParameter("CreatedDateFrom", typeof(System.DateTime));
    
            var createdDateToParameter = createdDateTo.HasValue ?
                new ObjectParameter("CreatedDateTo", createdDateTo) :
                new ObjectParameter("CreatedDateTo", typeof(System.DateTime));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_KTBReportHeader_Select_Result>("usp_KTBReportHeader_Select", bankIdParameter, createdDateFromParameter, createdDateToParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_BankDirectDebitAccountNo_SelectV2_Result> usp_BankDirectDebitAccountNo_SelectV2(string bankId, Nullable<int> branchId, Nullable<int> bankDirectDebitStatusId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var bankIdParameter = bankId != null ?
                new ObjectParameter("BankId", bankId) :
                new ObjectParameter("BankId", typeof(string));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var bankDirectDebitStatusIdParameter = bankDirectDebitStatusId.HasValue ?
                new ObjectParameter("BankDirectDebitStatusId", bankDirectDebitStatusId) :
                new ObjectParameter("BankDirectDebitStatusId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BankDirectDebitAccountNo_SelectV2_Result>("usp_BankDirectDebitAccountNo_SelectV2", bankIdParameter, branchIdParameter, bankDirectDebitStatusIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        [DbFunction("BankDirectDebitDBContext", "func_SplitStringToTable")]
        public virtual IQueryable<func_SplitStringToTable_Result> func_SplitStringToTable(string stringToSplit, string delimiter)
        {
            var stringToSplitParameter = stringToSplit != null ?
                new ObjectParameter("StringToSplit", stringToSplit) :
                new ObjectParameter("StringToSplit", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("Delimiter", delimiter) :
                new ObjectParameter("Delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<func_SplitStringToTable_Result>("[BankDirectDebitDBContext].[func_SplitStringToTable](@StringToSplit, @Delimiter)", stringToSplitParameter, delimiterParameter);
        }
    
        public virtual int GetNextRunningCode(string codeCategory, string yearText, string monthText)
        {
            var codeCategoryParameter = codeCategory != null ?
                new ObjectParameter("CodeCategory", codeCategory) :
                new ObjectParameter("CodeCategory", typeof(string));
    
            var yearTextParameter = yearText != null ?
                new ObjectParameter("YearText", yearText) :
                new ObjectParameter("YearText", typeof(string));
    
            var monthTextParameter = monthText != null ?
                new ObjectParameter("MonthText", monthText) :
                new ObjectParameter("MonthText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetNextRunningCode", codeCategoryParameter, yearTextParameter, monthTextParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int usp_BankDirectDebit_Insert(string bankId)
        {
            var bankIdParameter = bankId != null ?
                new ObjectParameter("BankId", bankId) :
                new ObjectParameter("BankId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_BankDirectDebit_Insert", bankIdParameter);
        }
    
        public virtual ObjectResult<string> usp_BatchGenerate_KTBiPayOutputDetail_Select(string batchHeader)
        {
            var batchHeaderParameter = batchHeader != null ?
                new ObjectParameter("BatchHeader", batchHeader) :
                new ObjectParameter("BatchHeader", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_BatchGenerate_KTBiPayOutputDetail_Select", batchHeaderParameter);
        }
    
        public virtual ObjectResult<string> usp_BatchGenerate_KTBiPayOutputHeader_Select(string batchHeader)
        {
            var batchHeaderParameter = batchHeader != null ?
                new ObjectParameter("BatchHeader", batchHeader) :
                new ObjectParameter("BatchHeader", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_BatchGenerate_KTBiPayOutputHeader_Select", batchHeaderParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_Generate_KTBiPayInputFile()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_Generate_KTBiPayInputFile");
        }
    
        public virtual ObjectResult<string> usp_Generate_KTBiPayOutputFile()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_Generate_KTBiPayOutputFile");
        }
    
        public virtual int usp_GenerateCode(string transactionCodeControlTypeDetail, Nullable<int> runningLenght, ObjectParameter result)
        {
            var transactionCodeControlTypeDetailParameter = transactionCodeControlTypeDetail != null ?
                new ObjectParameter("TransactionCodeControlTypeDetail", transactionCodeControlTypeDetail) :
                new ObjectParameter("TransactionCodeControlTypeDetail", typeof(string));
    
            var runningLenghtParameter = runningLenght.HasValue ?
                new ObjectParameter("RunningLenght", runningLenght) :
                new ObjectParameter("RunningLenght", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GenerateCode", transactionCodeControlTypeDetailParameter, runningLenghtParameter, result);
        }
    
        public virtual int usp_GenerateCode_BankDirectDebitDetail(Nullable<int> total, ObjectParameter yY, ObjectParameter runningFrom, ObjectParameter runningTo)
        {
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GenerateCode_BankDirectDebitDetail", totalParameter, yY, runningFrom, runningTo);
        }
    
        public virtual ObjectResult<usp_KTBReportExcelForExport_Select_Result> usp_KTBReportExcelForExport_Select(string bankId, Nullable<System.DateTime> createdDateFrom, Nullable<System.DateTime> createdDateTo, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var bankIdParameter = bankId != null ?
                new ObjectParameter("BankId", bankId) :
                new ObjectParameter("BankId", typeof(string));
    
            var createdDateFromParameter = createdDateFrom.HasValue ?
                new ObjectParameter("CreatedDateFrom", createdDateFrom) :
                new ObjectParameter("CreatedDateFrom", typeof(System.DateTime));
    
            var createdDateToParameter = createdDateTo.HasValue ?
                new ObjectParameter("CreatedDateTo", createdDateTo) :
                new ObjectParameter("CreatedDateTo", typeof(System.DateTime));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_KTBReportExcelForExport_Select_Result>("usp_KTBReportExcelForExport_Select", bankIdParameter, createdDateFromParameter, createdDateToParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_BankDirectDebitHeader_Insert_Result> usp_BankDirectDebitHeader_Insert(string bankId, Nullable<int> createdByUserId)
        {
            var bankIdParameter = bankId != null ?
                new ObjectParameter("BankId", bankId) :
                new ObjectParameter("BankId", typeof(string));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BankDirectDebitHeader_Insert_Result>("usp_BankDirectDebitHeader_Insert", bankIdParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<string> usp_AccountName_Select(string accountNo)
        {
            var accountNoParameter = accountNo != null ?
                new ObjectParameter("AccountNo", accountNo) :
                new ObjectParameter("AccountNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_AccountName_Select", accountNoParameter);
        }
    
        public virtual ObjectResult<usp_BankDirectDebitDetailV2_Insert_Result> usp_BankDirectDebitDetailV2_Insert(Nullable<int> bankDirectDebitHeaderId, string bankId, string accountNo, string accountName, Nullable<int> createdByUserId)
        {
            var bankDirectDebitHeaderIdParameter = bankDirectDebitHeaderId.HasValue ?
                new ObjectParameter("BankDirectDebitHeaderId", bankDirectDebitHeaderId) :
                new ObjectParameter("BankDirectDebitHeaderId", typeof(int));
    
            var bankIdParameter = bankId != null ?
                new ObjectParameter("BankId", bankId) :
                new ObjectParameter("BankId", typeof(string));
    
            var accountNoParameter = accountNo != null ?
                new ObjectParameter("AccountNo", accountNo) :
                new ObjectParameter("AccountNo", typeof(string));
    
            var accountNameParameter = accountName != null ?
                new ObjectParameter("AccountName", accountName) :
                new ObjectParameter("AccountName", typeof(string));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BankDirectDebitDetailV2_Insert_Result>("usp_BankDirectDebitDetailV2_Insert", bankDirectDebitHeaderIdParameter, bankIdParameter, accountNoParameter, accountNameParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_BankDirectDebitDetailV2_Select_Result> usp_BankDirectDebitDetailV2_Select(Nullable<int> bankDirectDebitHeaderId)
        {
            var bankDirectDebitHeaderIdParameter = bankDirectDebitHeaderId.HasValue ?
                new ObjectParameter("BankDirectDebitHeaderId", bankDirectDebitHeaderId) :
                new ObjectParameter("BankDirectDebitHeaderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BankDirectDebitDetailV2_Select_Result>("usp_BankDirectDebitDetailV2_Select", bankDirectDebitHeaderIdParameter);
        }
    
        public virtual ObjectResult<usp_DataCenterV1Address_Select_Result> usp_DataCenterV1Address_Select(Nullable<int> bankDirectDebitHeaderId)
        {
            var bankDirectDebitHeaderIdParameter = bankDirectDebitHeaderId.HasValue ?
                new ObjectParameter("BankDirectDebitHeaderId", bankDirectDebitHeaderId) :
                new ObjectParameter("BankDirectDebitHeaderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DataCenterV1Address_Select_Result>("usp_DataCenterV1Address_Select", bankDirectDebitHeaderIdParameter);
        }
    
        public virtual ObjectResult<usp_BankDirectDebitStatusDisplay_Select_Result> usp_BankDirectDebitStatusDisplay_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BankDirectDebitStatusDisplay_Select_Result>("usp_BankDirectDebitStatusDisplay_Select");
        }
    
        public virtual ObjectResult<usp_BankDirectDebitDetail_Delete_Result> usp_BankDirectDebitDetail_Delete(Nullable<int> bankDirectDebitDetailId, Nullable<int> updateByUserId)
        {
            var bankDirectDebitDetailIdParameter = bankDirectDebitDetailId.HasValue ?
                new ObjectParameter("BankDirectDebitDetailId", bankDirectDebitDetailId) :
                new ObjectParameter("BankDirectDebitDetailId", typeof(int));
    
            var updateByUserIdParameter = updateByUserId.HasValue ?
                new ObjectParameter("UpdateByUserId", updateByUserId) :
                new ObjectParameter("UpdateByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BankDirectDebitDetail_Delete_Result>("usp_BankDirectDebitDetail_Delete", bankDirectDebitDetailIdParameter, updateByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_BankDirectDebitHeader_Confirm_Update_Result> usp_BankDirectDebitHeader_Confirm_Update(Nullable<int> bankDirectDebitHeaderId, Nullable<int> confirmByUserId)
        {
            var bankDirectDebitHeaderIdParameter = bankDirectDebitHeaderId.HasValue ?
                new ObjectParameter("BankDirectDebitHeaderId", bankDirectDebitHeaderId) :
                new ObjectParameter("BankDirectDebitHeaderId", typeof(int));
    
            var confirmByUserIdParameter = confirmByUserId.HasValue ?
                new ObjectParameter("ConfirmByUserId", confirmByUserId) :
                new ObjectParameter("ConfirmByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BankDirectDebitHeader_Confirm_Update_Result>("usp_BankDirectDebitHeader_Confirm_Update", bankDirectDebitHeaderIdParameter, confirmByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_BankDirectDebitHeader_NotIsConfirm_Select_Result> usp_BankDirectDebitHeader_NotIsConfirm_Select(string bankDirectDebitHeaderId, Nullable<int> branchId, Nullable<System.DateTime> createdDateFrom, Nullable<System.DateTime> createdDateTo, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var bankDirectDebitHeaderIdParameter = bankDirectDebitHeaderId != null ?
                new ObjectParameter("BankDirectDebitHeaderId", bankDirectDebitHeaderId) :
                new ObjectParameter("BankDirectDebitHeaderId", typeof(string));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var createdDateFromParameter = createdDateFrom.HasValue ?
                new ObjectParameter("CreatedDateFrom", createdDateFrom) :
                new ObjectParameter("CreatedDateFrom", typeof(System.DateTime));
    
            var createdDateToParameter = createdDateTo.HasValue ?
                new ObjectParameter("CreatedDateTo", createdDateTo) :
                new ObjectParameter("CreatedDateTo", typeof(System.DateTime));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BankDirectDebitHeader_NotIsConfirm_Select_Result>("usp_BankDirectDebitHeader_NotIsConfirm_Select", bankDirectDebitHeaderIdParameter, branchIdParameter, createdDateFromParameter, createdDateToParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_DDRStandardFormatHeader_Select_Result> usp_DDRStandardFormatHeader_Select(string bankId, Nullable<System.DateTime> createdDateFrom, Nullable<System.DateTime> createdDateTo, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var bankIdParameter = bankId != null ?
                new ObjectParameter("BankId", bankId) :
                new ObjectParameter("BankId", typeof(string));
    
            var createdDateFromParameter = createdDateFrom.HasValue ?
                new ObjectParameter("CreatedDateFrom", createdDateFrom) :
                new ObjectParameter("CreatedDateFrom", typeof(System.DateTime));
    
            var createdDateToParameter = createdDateTo.HasValue ?
                new ObjectParameter("CreatedDateTo", createdDateTo) :
                new ObjectParameter("CreatedDateTo", typeof(System.DateTime));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DDRStandardFormatHeader_Select_Result>("usp_DDRStandardFormatHeader_Select", bankIdParameter, createdDateFromParameter, createdDateToParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<string> usp_DDRStandardFormatHeader_FilePath_Select(Nullable<int> dDRStandardFormatHeaderId)
        {
            var dDRStandardFormatHeaderIdParameter = dDRStandardFormatHeaderId.HasValue ?
                new ObjectParameter("DDRStandardFormatHeaderId", dDRStandardFormatHeaderId) :
                new ObjectParameter("DDRStandardFormatHeaderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_DDRStandardFormatHeader_FilePath_Select", dDRStandardFormatHeaderIdParameter);
        }
    
        public virtual ObjectResult<string> usp_KTBReportHeader_FilePath_Select(Nullable<int> headerId)
        {
            var headerIdParameter = headerId.HasValue ?
                new ObjectParameter("HeaderId", headerId) :
                new ObjectParameter("HeaderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_KTBReportHeader_FilePath_Select", headerIdParameter);
        }
    
        public virtual ObjectResult<usp_TrackAccountMonitor_Select_Result> usp_TrackAccountMonitor_Select(Nullable<int> payerBranchId)
        {
            var payerBranchIdParameter = payerBranchId.HasValue ?
                new ObjectParameter("PayerBranchId", payerBranchId) :
                new ObjectParameter("PayerBranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TrackAccountMonitor_Select_Result>("usp_TrackAccountMonitor_Select", payerBranchIdParameter);
        }
    
        public virtual ObjectResult<usp_TrackAccount_Select_Result> usp_TrackAccount_Select(Nullable<int> payerBranchId, string accountNo, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var payerBranchIdParameter = payerBranchId.HasValue ?
                new ObjectParameter("PayerBranchId", payerBranchId) :
                new ObjectParameter("PayerBranchId", typeof(int));
    
            var accountNoParameter = accountNo != null ?
                new ObjectParameter("AccountNo", accountNo) :
                new ObjectParameter("AccountNo", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TrackAccount_Select_Result>("usp_TrackAccount_Select", payerBranchIdParameter, accountNoParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_TrackAccountDetail_Select_Result> usp_TrackAccountDetail_Select(Nullable<int> payerBranchId, Nullable<int> bankDirectDebitStatusDisplayId)
        {
            var payerBranchIdParameter = payerBranchId.HasValue ?
                new ObjectParameter("PayerBranchId", payerBranchId) :
                new ObjectParameter("PayerBranchId", typeof(int));
    
            var bankDirectDebitStatusDisplayIdParameter = bankDirectDebitStatusDisplayId.HasValue ?
                new ObjectParameter("BankDirectDebitStatusDisplayId", bankDirectDebitStatusDisplayId) :
                new ObjectParameter("BankDirectDebitStatusDisplayId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TrackAccountDetail_Select_Result>("usp_TrackAccountDetail_Select", payerBranchIdParameter, bankDirectDebitStatusDisplayIdParameter);
        }
    
        public virtual ObjectResult<usp_TrackAccountList_Select_Result> usp_TrackAccountList_Select(Nullable<int> payerBranchId, Nullable<int> bankDirectDebitStatusDisplayId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var payerBranchIdParameter = payerBranchId.HasValue ?
                new ObjectParameter("PayerBranchId", payerBranchId) :
                new ObjectParameter("PayerBranchId", typeof(int));
    
            var bankDirectDebitStatusDisplayIdParameter = bankDirectDebitStatusDisplayId.HasValue ?
                new ObjectParameter("BankDirectDebitStatusDisplayId", bankDirectDebitStatusDisplayId) :
                new ObjectParameter("BankDirectDebitStatusDisplayId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TrackAccountList_Select_Result>("usp_TrackAccountList_Select", payerBranchIdParameter, bankDirectDebitStatusDisplayIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_TrackAccountStatus_Select_Result> usp_TrackAccountStatus_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TrackAccountStatus_Select_Result>("usp_TrackAccountStatus_Select");
        }
    
        public virtual ObjectResult<usp_AccountValidateImport_Delete_Result> usp_AccountValidateImport_Delete()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AccountValidateImport_Delete_Result>("usp_AccountValidateImport_Delete");
        }
    
        public virtual ObjectResult<usp_AccountValidateImport_Insert_Result> usp_AccountValidateImport_Insert(string accountNo, Nullable<int> createdByUserId)
        {
            var accountNoParameter = accountNo != null ?
                new ObjectParameter("AccountNo", accountNo) :
                new ObjectParameter("AccountNo", typeof(string));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AccountValidateImport_Insert_Result>("usp_AccountValidateImport_Insert", accountNoParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_AccountValidateImport_Select_Result> usp_AccountValidateImport_Select(Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType)
        {
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AccountValidateImport_Select_Result>("usp_AccountValidateImport_Select", indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter);
        }
    
        public virtual ObjectResult<usp_BankDirectDebitAccountReport_Select_Result> usp_BankDirectDebitAccountReport_Select(Nullable<int> bankDirectDebitStatusId, Nullable<System.DateTime> startCoverDateFrom, Nullable<System.DateTime> startCoverDateTo, Nullable<int> branchId, string employeeCode)
        {
            var bankDirectDebitStatusIdParameter = bankDirectDebitStatusId.HasValue ?
                new ObjectParameter("BankDirectDebitStatusId", bankDirectDebitStatusId) :
                new ObjectParameter("BankDirectDebitStatusId", typeof(int));
    
            var startCoverDateFromParameter = startCoverDateFrom.HasValue ?
                new ObjectParameter("StartCoverDateFrom", startCoverDateFrom) :
                new ObjectParameter("StartCoverDateFrom", typeof(System.DateTime));
    
            var startCoverDateToParameter = startCoverDateTo.HasValue ?
                new ObjectParameter("StartCoverDateTo", startCoverDateTo) :
                new ObjectParameter("StartCoverDateTo", typeof(System.DateTime));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BankDirectDebitAccountReport_Select_Result>("usp_BankDirectDebitAccountReport_Select", bankDirectDebitStatusIdParameter, startCoverDateFromParameter, startCoverDateToParameter, branchIdParameter, employeeCodeParameter);
        }
    
        public virtual ObjectResult<usp_BankDirectDebitAccountReportSummary_Select_Result> usp_BankDirectDebitAccountReportSummary_Select(Nullable<int> bankDirectDebitStatusId, Nullable<System.DateTime> startCoverDateFrom, Nullable<System.DateTime> startCoverDateTo, Nullable<int> branchId, string employeeCode)
        {
            var bankDirectDebitStatusIdParameter = bankDirectDebitStatusId.HasValue ?
                new ObjectParameter("BankDirectDebitStatusId", bankDirectDebitStatusId) :
                new ObjectParameter("BankDirectDebitStatusId", typeof(int));
    
            var startCoverDateFromParameter = startCoverDateFrom.HasValue ?
                new ObjectParameter("StartCoverDateFrom", startCoverDateFrom) :
                new ObjectParameter("StartCoverDateFrom", typeof(System.DateTime));
    
            var startCoverDateToParameter = startCoverDateTo.HasValue ?
                new ObjectParameter("StartCoverDateTo", startCoverDateTo) :
                new ObjectParameter("StartCoverDateTo", typeof(System.DateTime));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BankDirectDebitAccountReportSummary_Select_Result>("usp_BankDirectDebitAccountReportSummary_Select", bankDirectDebitStatusIdParameter, startCoverDateFromParameter, startCoverDateToParameter, branchIdParameter, employeeCodeParameter);
        }
    
        public virtual ObjectResult<usp_BankDirectDebitLog_Insert_Result> usp_BankDirectDebitLog_Insert(Nullable<int> groupId, Nullable<int> bankDirectDebitLogType, Nullable<int> createdByUserId)
        {
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(int));
    
            var bankDirectDebitLogTypeParameter = bankDirectDebitLogType.HasValue ?
                new ObjectParameter("BankDirectDebitLogType", bankDirectDebitLogType) :
                new ObjectParameter("BankDirectDebitLogType", typeof(int));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BankDirectDebitLog_Insert_Result>("usp_BankDirectDebitLog_Insert", groupIdParameter, bankDirectDebitLogTypeParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_BankDirectDebitLog_Select_Result> usp_BankDirectDebitLog_Select(string bankId, string accountNo, Nullable<int> bankDirectDebitId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType)
        {
            var bankIdParameter = bankId != null ?
                new ObjectParameter("BankId", bankId) :
                new ObjectParameter("BankId", typeof(string));
    
            var accountNoParameter = accountNo != null ?
                new ObjectParameter("AccountNo", accountNo) :
                new ObjectParameter("AccountNo", typeof(string));
    
            var bankDirectDebitIdParameter = bankDirectDebitId.HasValue ?
                new ObjectParameter("BankDirectDebitId", bankDirectDebitId) :
                new ObjectParameter("BankDirectDebitId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BankDirectDebitLog_Select_Result>("usp_BankDirectDebitLog_Select", bankIdParameter, accountNoParameter, bankDirectDebitIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationDetailfromDataCenter_Select_Result> usp_ApplicationDetailfromDataCenter_Select(string bankOrganizeCode, Nullable<int> bankOrganizeId, string accountNo, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var bankOrganizeCodeParameter = bankOrganizeCode != null ?
                new ObjectParameter("BankOrganizeCode", bankOrganizeCode) :
                new ObjectParameter("BankOrganizeCode", typeof(string));
    
            var bankOrganizeIdParameter = bankOrganizeId.HasValue ?
                new ObjectParameter("BankOrganizeId", bankOrganizeId) :
                new ObjectParameter("BankOrganizeId", typeof(int));
    
            var accountNoParameter = accountNo != null ?
                new ObjectParameter("AccountNo", accountNo) :
                new ObjectParameter("AccountNo", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationDetailfromDataCenter_Select_Result>("usp_ApplicationDetailfromDataCenter_Select", bankOrganizeCodeParameter, bankOrganizeIdParameter, accountNoParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    }
}
