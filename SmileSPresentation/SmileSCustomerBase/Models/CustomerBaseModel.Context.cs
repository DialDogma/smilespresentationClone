//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmileSCustomerBase.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CustomerBaseDBContext : DbContext
    {
        public CustomerBaseDBContext()
            : base("name=CustomerBaseDBContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<usp_CleanCustomer_Select_Result> usp_CleanCustomer_Select(string applicationCode)
        {
            var applicationCodeParameter = applicationCode != null ?
                new ObjectParameter("ApplicationCode", applicationCode) :
                new ObjectParameter("ApplicationCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CleanCustomer_Select_Result>("usp_CleanCustomer_Select", applicationCodeParameter);
        }
    
        public virtual ObjectResult<usp_Queue_Select_Result> usp_Queue_Select(Nullable<int> queueId, Nullable<int> queueTypeId, Nullable<int> queueStatusId, Nullable<int> queueGroupStatusShowId, Nullable<int> assignToUserId, Nullable<System.DateTime> createDateFrom, Nullable<System.DateTime> createDateTo, Nullable<System.DateTime> assignDateFrom, Nullable<System.DateTime> assignDateTo, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchQueueDetail, string searchReferenceCode, string searchDetail1, string searchDetail2, string searchDetail3, string searchDetail4)
        {
            var queueIdParameter = queueId.HasValue ?
                new ObjectParameter("QueueId", queueId) :
                new ObjectParameter("QueueId", typeof(int));
    
            var queueTypeIdParameter = queueTypeId.HasValue ?
                new ObjectParameter("QueueTypeId", queueTypeId) :
                new ObjectParameter("QueueTypeId", typeof(int));
    
            var queueStatusIdParameter = queueStatusId.HasValue ?
                new ObjectParameter("QueueStatusId", queueStatusId) :
                new ObjectParameter("QueueStatusId", typeof(int));
    
            var queueGroupStatusShowIdParameter = queueGroupStatusShowId.HasValue ?
                new ObjectParameter("QueueGroupStatusShowId", queueGroupStatusShowId) :
                new ObjectParameter("QueueGroupStatusShowId", typeof(int));
    
            var assignToUserIdParameter = assignToUserId.HasValue ?
                new ObjectParameter("AssignToUserId", assignToUserId) :
                new ObjectParameter("AssignToUserId", typeof(int));
    
            var createDateFromParameter = createDateFrom.HasValue ?
                new ObjectParameter("CreateDateFrom", createDateFrom) :
                new ObjectParameter("CreateDateFrom", typeof(System.DateTime));
    
            var createDateToParameter = createDateTo.HasValue ?
                new ObjectParameter("CreateDateTo", createDateTo) :
                new ObjectParameter("CreateDateTo", typeof(System.DateTime));
    
            var assignDateFromParameter = assignDateFrom.HasValue ?
                new ObjectParameter("AssignDateFrom", assignDateFrom) :
                new ObjectParameter("AssignDateFrom", typeof(System.DateTime));
    
            var assignDateToParameter = assignDateTo.HasValue ?
                new ObjectParameter("AssignDateTo", assignDateTo) :
                new ObjectParameter("AssignDateTo", typeof(System.DateTime));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchQueueDetailParameter = searchQueueDetail != null ?
                new ObjectParameter("SearchQueueDetail", searchQueueDetail) :
                new ObjectParameter("SearchQueueDetail", typeof(string));
    
            var searchReferenceCodeParameter = searchReferenceCode != null ?
                new ObjectParameter("SearchReferenceCode", searchReferenceCode) :
                new ObjectParameter("SearchReferenceCode", typeof(string));
    
            var searchDetail1Parameter = searchDetail1 != null ?
                new ObjectParameter("SearchDetail1", searchDetail1) :
                new ObjectParameter("SearchDetail1", typeof(string));
    
            var searchDetail2Parameter = searchDetail2 != null ?
                new ObjectParameter("SearchDetail2", searchDetail2) :
                new ObjectParameter("SearchDetail2", typeof(string));
    
            var searchDetail3Parameter = searchDetail3 != null ?
                new ObjectParameter("SearchDetail3", searchDetail3) :
                new ObjectParameter("SearchDetail3", typeof(string));
    
            var searchDetail4Parameter = searchDetail4 != null ?
                new ObjectParameter("SearchDetail4", searchDetail4) :
                new ObjectParameter("SearchDetail4", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Queue_Select_Result>("usp_Queue_Select", queueIdParameter, queueTypeIdParameter, queueStatusIdParameter, queueGroupStatusShowIdParameter, assignToUserIdParameter, createDateFromParameter, createDateToParameter, assignDateFromParameter, assignDateToParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchQueueDetailParameter, searchReferenceCodeParameter, searchDetail1Parameter, searchDetail2Parameter, searchDetail3Parameter, searchDetail4Parameter);
        }
    
        public virtual ObjectResult<usp_CleanCustomer_Update_Result> usp_CleanCustomer_Update(Nullable<int> cleanCustomerId, string queueId, string custTitleCode, string custFirstName, string custLastName, Nullable<System.DateTime> custBirthDate, Nullable<int> custNationalityId, string custPassPort, string custZcardId, Nullable<int> custCheckStatusId, string payerTitleCode, string payerFirstName, string payerLastName, Nullable<System.DateTime> payerBirthDate, Nullable<int> payerNationalityId, string payerPassport, string payerZcardId, Nullable<int> payerCheckStatusId, string remark, Nullable<int> createdByUserId)
        {
            var cleanCustomerIdParameter = cleanCustomerId.HasValue ?
                new ObjectParameter("CleanCustomerId", cleanCustomerId) :
                new ObjectParameter("CleanCustomerId", typeof(int));
    
            var queueIdParameter = queueId != null ?
                new ObjectParameter("QueueId", queueId) :
                new ObjectParameter("QueueId", typeof(string));
    
            var custTitleCodeParameter = custTitleCode != null ?
                new ObjectParameter("CustTitleCode", custTitleCode) :
                new ObjectParameter("CustTitleCode", typeof(string));
    
            var custFirstNameParameter = custFirstName != null ?
                new ObjectParameter("CustFirstName", custFirstName) :
                new ObjectParameter("CustFirstName", typeof(string));
    
            var custLastNameParameter = custLastName != null ?
                new ObjectParameter("CustLastName", custLastName) :
                new ObjectParameter("CustLastName", typeof(string));
    
            var custBirthDateParameter = custBirthDate.HasValue ?
                new ObjectParameter("CustBirthDate", custBirthDate) :
                new ObjectParameter("CustBirthDate", typeof(System.DateTime));
    
            var custNationalityIdParameter = custNationalityId.HasValue ?
                new ObjectParameter("CustNationalityId", custNationalityId) :
                new ObjectParameter("CustNationalityId", typeof(int));
    
            var custPassPortParameter = custPassPort != null ?
                new ObjectParameter("CustPassPort", custPassPort) :
                new ObjectParameter("CustPassPort", typeof(string));
    
            var custZcardIdParameter = custZcardId != null ?
                new ObjectParameter("CustZcardId", custZcardId) :
                new ObjectParameter("CustZcardId", typeof(string));
    
            var custCheckStatusIdParameter = custCheckStatusId.HasValue ?
                new ObjectParameter("CustCheckStatusId", custCheckStatusId) :
                new ObjectParameter("CustCheckStatusId", typeof(int));
    
            var payerTitleCodeParameter = payerTitleCode != null ?
                new ObjectParameter("PayerTitleCode", payerTitleCode) :
                new ObjectParameter("PayerTitleCode", typeof(string));
    
            var payerFirstNameParameter = payerFirstName != null ?
                new ObjectParameter("PayerFirstName", payerFirstName) :
                new ObjectParameter("PayerFirstName", typeof(string));
    
            var payerLastNameParameter = payerLastName != null ?
                new ObjectParameter("PayerLastName", payerLastName) :
                new ObjectParameter("PayerLastName", typeof(string));
    
            var payerBirthDateParameter = payerBirthDate.HasValue ?
                new ObjectParameter("PayerBirthDate", payerBirthDate) :
                new ObjectParameter("PayerBirthDate", typeof(System.DateTime));
    
            var payerNationalityIdParameter = payerNationalityId.HasValue ?
                new ObjectParameter("PayerNationalityId", payerNationalityId) :
                new ObjectParameter("PayerNationalityId", typeof(int));
    
            var payerPassportParameter = payerPassport != null ?
                new ObjectParameter("PayerPassport", payerPassport) :
                new ObjectParameter("PayerPassport", typeof(string));
    
            var payerZcardIdParameter = payerZcardId != null ?
                new ObjectParameter("PayerZcardId", payerZcardId) :
                new ObjectParameter("PayerZcardId", typeof(string));
    
            var payerCheckStatusIdParameter = payerCheckStatusId.HasValue ?
                new ObjectParameter("PayerCheckStatusId", payerCheckStatusId) :
                new ObjectParameter("PayerCheckStatusId", typeof(int));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CleanCustomer_Update_Result>("usp_CleanCustomer_Update", cleanCustomerIdParameter, queueIdParameter, custTitleCodeParameter, custFirstNameParameter, custLastNameParameter, custBirthDateParameter, custNationalityIdParameter, custPassPortParameter, custZcardIdParameter, custCheckStatusIdParameter, payerTitleCodeParameter, payerFirstNameParameter, payerLastNameParameter, payerBirthDateParameter, payerNationalityIdParameter, payerPassportParameter, payerZcardIdParameter, payerCheckStatusIdParameter, remarkParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_QueueCleanCustomer_Select_Result> usp_QueueCleanCustomer_Select(Nullable<int> queueId)
        {
            var queueIdParameter = queueId.HasValue ?
                new ObjectParameter("QueueId", queueId) :
                new ObjectParameter("QueueId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_QueueCleanCustomer_Select_Result>("usp_QueueCleanCustomer_Select", queueIdParameter);
        }
    
        public virtual ObjectResult<usp_AssignQueue_Result> usp_AssignQueue(Nullable<int> queueId, Nullable<int> assignToUserId, Nullable<int> createdByUserId)
        {
            var queueIdParameter = queueId.HasValue ?
                new ObjectParameter("QueueId", queueId) :
                new ObjectParameter("QueueId", typeof(int));
    
            var assignToUserIdParameter = assignToUserId.HasValue ?
                new ObjectParameter("AssignToUserId", assignToUserId) :
                new ObjectParameter("AssignToUserId", typeof(int));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AssignQueue_Result>("usp_AssignQueue", queueIdParameter, assignToUserIdParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_CheckStatus_Select_Result> usp_CheckStatus_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CheckStatus_Select_Result>("usp_CheckStatus_Select");
        }
    
        public virtual ObjectResult<usp_CloseQueueCount_Select_Result> usp_CloseQueueCount_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CloseQueueCount_Select_Result>("usp_CloseQueueCount_Select");
        }
    
        public virtual int usp_QueueMonitorByBranch_Select(Nullable<int> queueTypeId, Nullable<int> branchId, Nullable<System.DateTime> createdDateFrom, Nullable<System.DateTime> createdDateTo)
        {
            var queueTypeIdParameter = queueTypeId.HasValue ?
                new ObjectParameter("QueueTypeId", queueTypeId) :
                new ObjectParameter("QueueTypeId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var createdDateFromParameter = createdDateFrom.HasValue ?
                new ObjectParameter("CreatedDateFrom", createdDateFrom) :
                new ObjectParameter("CreatedDateFrom", typeof(System.DateTime));
    
            var createdDateToParameter = createdDateTo.HasValue ?
                new ObjectParameter("CreatedDateTo", createdDateTo) :
                new ObjectParameter("CreatedDateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_QueueMonitorByBranch_Select", queueTypeIdParameter, branchIdParameter, createdDateFromParameter, createdDateToParameter);
        }
    
        public virtual ObjectResult<usp_AssignQueueList_Result> usp_AssignQueueList(Nullable<int> queueTotal, Nullable<int> queueTypeId, Nullable<int> queueStatusId, Nullable<int> assignToUserId, Nullable<int> createdByUserId)
        {
            var queueTotalParameter = queueTotal.HasValue ?
                new ObjectParameter("QueueTotal", queueTotal) :
                new ObjectParameter("QueueTotal", typeof(int));
    
            var queueTypeIdParameter = queueTypeId.HasValue ?
                new ObjectParameter("QueueTypeId", queueTypeId) :
                new ObjectParameter("QueueTypeId", typeof(int));
    
            var queueStatusIdParameter = queueStatusId.HasValue ?
                new ObjectParameter("QueueStatusId", queueStatusId) :
                new ObjectParameter("QueueStatusId", typeof(int));
    
            var assignToUserIdParameter = assignToUserId.HasValue ?
                new ObjectParameter("AssignToUserId", assignToUserId) :
                new ObjectParameter("AssignToUserId", typeof(int));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AssignQueueList_Result>("usp_AssignQueueList", queueTotalParameter, queueTypeIdParameter, queueStatusIdParameter, assignToUserIdParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_QueueType_Select_Result> usp_QueueType_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_QueueType_Select_Result>("usp_QueueType_Select");
        }
    
        public virtual ObjectResult<usp_QueueTypeMonitor_Select_Result> usp_QueueTypeMonitor_Select(Nullable<int> queueTypeId)
        {
            var queueTypeIdParameter = queueTypeId.HasValue ?
                new ObjectParameter("QueueTypeId", queueTypeId) :
                new ObjectParameter("QueueTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_QueueTypeMonitor_Select_Result>("usp_QueueTypeMonitor_Select", queueTypeIdParameter);
        }
    
        public virtual ObjectResult<usp_QueueMonitor_Select_Result> usp_QueueMonitor_Select(Nullable<int> queueTypeId, Nullable<int> branchId, Nullable<int> assignToUserId, Nullable<System.DateTime> createdDateFrom, Nullable<System.DateTime> createdDateTo, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string search)
        {
            var queueTypeIdParameter = queueTypeId.HasValue ?
                new ObjectParameter("QueueTypeId", queueTypeId) :
                new ObjectParameter("QueueTypeId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var assignToUserIdParameter = assignToUserId.HasValue ?
                new ObjectParameter("AssignToUserId", assignToUserId) :
                new ObjectParameter("AssignToUserId", typeof(int));
    
            var createdDateFromParameter = createdDateFrom.HasValue ?
                new ObjectParameter("CreatedDateFrom", createdDateFrom) :
                new ObjectParameter("CreatedDateFrom", typeof(System.DateTime));
    
            var createdDateToParameter = createdDateTo.HasValue ?
                new ObjectParameter("CreatedDateTo", createdDateTo) :
                new ObjectParameter("CreatedDateTo", typeof(System.DateTime));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_QueueMonitor_Select_Result>("usp_QueueMonitor_Select", queueTypeIdParameter, branchIdParameter, assignToUserIdParameter, createdDateFromParameter, createdDateToParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchParameter);
        }
    
        public virtual ObjectResult<usp_QueueMonitorByUserId_SelectV2_Result> usp_QueueMonitorByUserId_SelectV2(Nullable<int> queueTypeId, Nullable<int> assignToUserId)
        {
            var queueTypeIdParameter = queueTypeId.HasValue ?
                new ObjectParameter("QueueTypeId", queueTypeId) :
                new ObjectParameter("QueueTypeId", typeof(int));
    
            var assignToUserIdParameter = assignToUserId.HasValue ?
                new ObjectParameter("AssignToUserId", assignToUserId) :
                new ObjectParameter("AssignToUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_QueueMonitorByUserId_SelectV2_Result>("usp_QueueMonitorByUserId_SelectV2", queueTypeIdParameter, assignToUserIdParameter);
        }
    
        public virtual ObjectResult<usp_SSSDocLink_Select_Result> usp_SSSDocLink_Select(string applicationCode)
        {
            var applicationCodeParameter = applicationCode != null ?
                new ObjectParameter("ApplicationCode", applicationCode) :
                new ObjectParameter("ApplicationCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SSSDocLink_Select_Result>("usp_SSSDocLink_Select", applicationCodeParameter);
        }
    
        public virtual int usp_AppAudit_Insert(Nullable<int> auditPercent, Nullable<int> createdByUserId)
        {
            var auditPercentParameter = auditPercent.HasValue ?
                new ObjectParameter("AuditPercent", auditPercent) :
                new ObjectParameter("AuditPercent", typeof(int));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AppAudit_Insert", auditPercentParameter, createdByUserIdParameter);
        }
    
        public virtual int usp_AppAudit_Update(Nullable<int> cleanCustomerId, Nullable<int> auditCheckStatusId, string auditRemark, Nullable<int> createdByUserId)
        {
            var cleanCustomerIdParameter = cleanCustomerId.HasValue ?
                new ObjectParameter("CleanCustomerId", cleanCustomerId) :
                new ObjectParameter("CleanCustomerId", typeof(int));
    
            var auditCheckStatusIdParameter = auditCheckStatusId.HasValue ?
                new ObjectParameter("AuditCheckStatusId", auditCheckStatusId) :
                new ObjectParameter("AuditCheckStatusId", typeof(int));
    
            var auditRemarkParameter = auditRemark != null ?
                new ObjectParameter("AuditRemark", auditRemark) :
                new ObjectParameter("AuditRemark", typeof(string));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AppAudit_Update", cleanCustomerIdParameter, auditCheckStatusIdParameter, auditRemarkParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_AuditMonitor_Select_Result> usp_AuditMonitor_Select(Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AuditMonitor_Select_Result>("usp_AuditMonitor_Select", indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_AuditCheckStatus_Select_Result> usp_AuditCheckStatus_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AuditCheckStatus_Select_Result>("usp_AuditCheckStatus_Select");
        }
    
        public virtual ObjectResult<usp_AuditCountAssign_Select_Result> usp_AuditCountAssign_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AuditCountAssign_Select_Result>("usp_AuditCountAssign_Select");
        }
    
        public virtual ObjectResult<Nullable<int>> usp_AuditCountCreated_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_AuditCountCreated_Select");
        }
    
        public virtual ObjectResult<usp_AuditCreated_Insert_Result> usp_AuditCreated_Insert(Nullable<int> auditPercent, Nullable<int> createdByUserId)
        {
            var auditPercentParameter = auditPercent.HasValue ?
                new ObjectParameter("AuditPercent", auditPercent) :
                new ObjectParameter("AuditPercent", typeof(int));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AuditCreated_Insert_Result>("usp_AuditCreated_Insert", auditPercentParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_AuditCreatedLog_Select_Result> usp_AuditCreatedLog_Select(Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AuditCreatedLog_Select_Result>("usp_AuditCreatedLog_Select", indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_AuditList_Select_Result> usp_AuditList_Select(Nullable<int> auditByUserId, Nullable<bool> auditIsCheck, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail, string searchProduct, string searchApplication, string searchCustName, string searchPayerName)
        {
            var auditByUserIdParameter = auditByUserId.HasValue ?
                new ObjectParameter("AuditByUserId", auditByUserId) :
                new ObjectParameter("AuditByUserId", typeof(int));
    
            var auditIsCheckParameter = auditIsCheck.HasValue ?
                new ObjectParameter("AuditIsCheck", auditIsCheck) :
                new ObjectParameter("AuditIsCheck", typeof(bool));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            var searchProductParameter = searchProduct != null ?
                new ObjectParameter("SearchProduct", searchProduct) :
                new ObjectParameter("SearchProduct", typeof(string));
    
            var searchApplicationParameter = searchApplication != null ?
                new ObjectParameter("SearchApplication", searchApplication) :
                new ObjectParameter("SearchApplication", typeof(string));
    
            var searchCustNameParameter = searchCustName != null ?
                new ObjectParameter("SearchCustName", searchCustName) :
                new ObjectParameter("SearchCustName", typeof(string));
    
            var searchPayerNameParameter = searchPayerName != null ?
                new ObjectParameter("SearchPayerName", searchPayerName) :
                new ObjectParameter("SearchPayerName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AuditList_Select_Result>("usp_AuditList_Select", auditByUserIdParameter, auditIsCheckParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter, searchProductParameter, searchApplicationParameter, searchCustNameParameter, searchPayerNameParameter);
        }
    
        public virtual ObjectResult<usp_Audit_Update_Result> usp_Audit_Update(Nullable<int> cleanCustomerId, string custTitleCode, string custFirstName, string custLastName, Nullable<System.DateTime> custBirthDate, Nullable<int> custNationalityId, string custPassPort, string custZcardId, string payerTitleCode, string payerFirstName, string payerLastName, Nullable<System.DateTime> payerBirthDate, Nullable<int> payerNationalityId, string payerPassport, string payerZcardId, Nullable<int> auditCheckStatusId, Nullable<bool> isFalseCustTitle, Nullable<bool> isFalseCustName, Nullable<bool> isFalseCustBirthDate, Nullable<bool> isFalseCustZcard_Passport, Nullable<bool> isFalsePayerTitle, Nullable<bool> isFalsePayertName, Nullable<bool> isFalsePayerBirthDate, Nullable<bool> isFalsePayerZcard_Passport, string auditRemark, Nullable<int> createdByUserId)
        {
            var cleanCustomerIdParameter = cleanCustomerId.HasValue ?
                new ObjectParameter("CleanCustomerId", cleanCustomerId) :
                new ObjectParameter("CleanCustomerId", typeof(int));
    
            var custTitleCodeParameter = custTitleCode != null ?
                new ObjectParameter("CustTitleCode", custTitleCode) :
                new ObjectParameter("CustTitleCode", typeof(string));
    
            var custFirstNameParameter = custFirstName != null ?
                new ObjectParameter("CustFirstName", custFirstName) :
                new ObjectParameter("CustFirstName", typeof(string));
    
            var custLastNameParameter = custLastName != null ?
                new ObjectParameter("CustLastName", custLastName) :
                new ObjectParameter("CustLastName", typeof(string));
    
            var custBirthDateParameter = custBirthDate.HasValue ?
                new ObjectParameter("CustBirthDate", custBirthDate) :
                new ObjectParameter("CustBirthDate", typeof(System.DateTime));
    
            var custNationalityIdParameter = custNationalityId.HasValue ?
                new ObjectParameter("CustNationalityId", custNationalityId) :
                new ObjectParameter("CustNationalityId", typeof(int));
    
            var custPassPortParameter = custPassPort != null ?
                new ObjectParameter("CustPassPort", custPassPort) :
                new ObjectParameter("CustPassPort", typeof(string));
    
            var custZcardIdParameter = custZcardId != null ?
                new ObjectParameter("CustZcardId", custZcardId) :
                new ObjectParameter("CustZcardId", typeof(string));
    
            var payerTitleCodeParameter = payerTitleCode != null ?
                new ObjectParameter("PayerTitleCode", payerTitleCode) :
                new ObjectParameter("PayerTitleCode", typeof(string));
    
            var payerFirstNameParameter = payerFirstName != null ?
                new ObjectParameter("PayerFirstName", payerFirstName) :
                new ObjectParameter("PayerFirstName", typeof(string));
    
            var payerLastNameParameter = payerLastName != null ?
                new ObjectParameter("PayerLastName", payerLastName) :
                new ObjectParameter("PayerLastName", typeof(string));
    
            var payerBirthDateParameter = payerBirthDate.HasValue ?
                new ObjectParameter("PayerBirthDate", payerBirthDate) :
                new ObjectParameter("PayerBirthDate", typeof(System.DateTime));
    
            var payerNationalityIdParameter = payerNationalityId.HasValue ?
                new ObjectParameter("PayerNationalityId", payerNationalityId) :
                new ObjectParameter("PayerNationalityId", typeof(int));
    
            var payerPassportParameter = payerPassport != null ?
                new ObjectParameter("PayerPassport", payerPassport) :
                new ObjectParameter("PayerPassport", typeof(string));
    
            var payerZcardIdParameter = payerZcardId != null ?
                new ObjectParameter("PayerZcardId", payerZcardId) :
                new ObjectParameter("PayerZcardId", typeof(string));
    
            var auditCheckStatusIdParameter = auditCheckStatusId.HasValue ?
                new ObjectParameter("AuditCheckStatusId", auditCheckStatusId) :
                new ObjectParameter("AuditCheckStatusId", typeof(int));
    
            var isFalseCustTitleParameter = isFalseCustTitle.HasValue ?
                new ObjectParameter("IsFalseCustTitle", isFalseCustTitle) :
                new ObjectParameter("IsFalseCustTitle", typeof(bool));
    
            var isFalseCustNameParameter = isFalseCustName.HasValue ?
                new ObjectParameter("IsFalseCustName", isFalseCustName) :
                new ObjectParameter("IsFalseCustName", typeof(bool));
    
            var isFalseCustBirthDateParameter = isFalseCustBirthDate.HasValue ?
                new ObjectParameter("IsFalseCustBirthDate", isFalseCustBirthDate) :
                new ObjectParameter("IsFalseCustBirthDate", typeof(bool));
    
            var isFalseCustZcard_PassportParameter = isFalseCustZcard_Passport.HasValue ?
                new ObjectParameter("IsFalseCustZcard_Passport", isFalseCustZcard_Passport) :
                new ObjectParameter("IsFalseCustZcard_Passport", typeof(bool));
    
            var isFalsePayerTitleParameter = isFalsePayerTitle.HasValue ?
                new ObjectParameter("IsFalsePayerTitle", isFalsePayerTitle) :
                new ObjectParameter("IsFalsePayerTitle", typeof(bool));
    
            var isFalsePayertNameParameter = isFalsePayertName.HasValue ?
                new ObjectParameter("IsFalsePayertName", isFalsePayertName) :
                new ObjectParameter("IsFalsePayertName", typeof(bool));
    
            var isFalsePayerBirthDateParameter = isFalsePayerBirthDate.HasValue ?
                new ObjectParameter("IsFalsePayerBirthDate", isFalsePayerBirthDate) :
                new ObjectParameter("IsFalsePayerBirthDate", typeof(bool));
    
            var isFalsePayerZcard_PassportParameter = isFalsePayerZcard_Passport.HasValue ?
                new ObjectParameter("IsFalsePayerZcard_Passport", isFalsePayerZcard_Passport) :
                new ObjectParameter("IsFalsePayerZcard_Passport", typeof(bool));
    
            var auditRemarkParameter = auditRemark != null ?
                new ObjectParameter("AuditRemark", auditRemark) :
                new ObjectParameter("AuditRemark", typeof(string));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Audit_Update_Result>("usp_Audit_Update", cleanCustomerIdParameter, custTitleCodeParameter, custFirstNameParameter, custLastNameParameter, custBirthDateParameter, custNationalityIdParameter, custPassPortParameter, custZcardIdParameter, payerTitleCodeParameter, payerFirstNameParameter, payerLastNameParameter, payerBirthDateParameter, payerNationalityIdParameter, payerPassportParameter, payerZcardIdParameter, auditCheckStatusIdParameter, isFalseCustTitleParameter, isFalseCustNameParameter, isFalseCustBirthDateParameter, isFalseCustZcard_PassportParameter, isFalsePayerTitleParameter, isFalsePayertNameParameter, isFalsePayerBirthDateParameter, isFalsePayerZcard_PassportParameter, auditRemarkParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_AuditMonitor_SelectV2_Result> usp_AuditMonitor_SelectV2(Nullable<int> auditByUserId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var auditByUserIdParameter = auditByUserId.HasValue ?
                new ObjectParameter("AuditByUserId", auditByUserId) :
                new ObjectParameter("AuditByUserId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AuditMonitor_SelectV2_Result>("usp_AuditMonitor_SelectV2", auditByUserIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_AuditAssignList_Result> usp_AuditAssignList(Nullable<int> assignTotal, Nullable<int> auditbyUserId)
        {
            var assignTotalParameter = assignTotal.HasValue ?
                new ObjectParameter("AssignTotal", assignTotal) :
                new ObjectParameter("AssignTotal", typeof(int));
    
            var auditbyUserIdParameter = auditbyUserId.HasValue ?
                new ObjectParameter("AuditbyUserId", auditbyUserId) :
                new ObjectParameter("AuditbyUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AuditAssignList_Result>("usp_AuditAssignList", assignTotalParameter, auditbyUserIdParameter);
        }
    
        public virtual ObjectResult<usp_AuditAppDetail_Select_Result> usp_AuditAppDetail_Select(Nullable<int> cleanCustomerId)
        {
            var cleanCustomerIdParameter = cleanCustomerId.HasValue ?
                new ObjectParameter("CleanCustomerId", cleanCustomerId) :
                new ObjectParameter("CleanCustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AuditAppDetail_Select_Result>("usp_AuditAppDetail_Select", cleanCustomerIdParameter);
        }
    
        public virtual ObjectResult<usp_QueueMonitorDetail_Select_Result> usp_QueueMonitorDetail_Select(Nullable<int> queueTypeId, Nullable<int> branchId, Nullable<int> assignToUserId)
        {
            var queueTypeIdParameter = queueTypeId.HasValue ?
                new ObjectParameter("QueueTypeId", queueTypeId) :
                new ObjectParameter("QueueTypeId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var assignToUserIdParameter = assignToUserId.HasValue ?
                new ObjectParameter("AssignToUserId", assignToUserId) :
                new ObjectParameter("AssignToUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_QueueMonitorDetail_Select_Result>("usp_QueueMonitorDetail_Select", queueTypeIdParameter, branchIdParameter, assignToUserIdParameter);
        }
    
        public virtual ObjectResult<usp_ReportAppAuditChecked_Select_Result> usp_ReportAppAuditChecked_Select(Nullable<int> auditCreatedId)
        {
            var auditCreatedIdParameter = auditCreatedId.HasValue ?
                new ObjectParameter("AuditCreatedId", auditCreatedId) :
                new ObjectParameter("AuditCreatedId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReportAppAuditChecked_Select_Result>("usp_ReportAppAuditChecked_Select", auditCreatedIdParameter);
        }
    
        public virtual ObjectResult<usp_ReportAppAuditCheckedDetail_Select_Result> usp_ReportAppAuditCheckedDetail_Select(Nullable<int> auditCreatedId)
        {
            var auditCreatedIdParameter = auditCreatedId.HasValue ?
                new ObjectParameter("AuditCreatedId", auditCreatedId) :
                new ObjectParameter("AuditCreatedId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReportAppAuditCheckedDetail_Select_Result>("usp_ReportAppAuditCheckedDetail_Select", auditCreatedIdParameter);
        }
    
        public virtual ObjectResult<usp_AuditCreatedSummary_Select_Result> usp_AuditCreatedSummary_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AuditCreatedSummary_Select_Result>("usp_AuditCreatedSummary_Select");
        }
    
        public virtual ObjectResult<usp_Wage_Select_Result> usp_Wage_Select(Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Wage_Select_Result>("usp_Wage_Select", indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_WageHistory_Select_Result> usp_WageHistory_Select(Nullable<int> wageId)
        {
            var wageIdParameter = wageId.HasValue ?
                new ObjectParameter("WageId", wageId) :
                new ObjectParameter("WageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WageHistory_Select_Result>("usp_WageHistory_Select", wageIdParameter);
        }
    
        public virtual ObjectResult<usp_Wage_Insert_Result> usp_Wage_Insert(Nullable<System.DateTime> closeDateTo, Nullable<int> createdByUerId)
        {
            var closeDateToParameter = closeDateTo.HasValue ?
                new ObjectParameter("CloseDateTo", closeDateTo) :
                new ObjectParameter("CloseDateTo", typeof(System.DateTime));
    
            var createdByUerIdParameter = createdByUerId.HasValue ?
                new ObjectParameter("CreatedByUerId", createdByUerId) :
                new ObjectParameter("CreatedByUerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Wage_Insert_Result>("usp_Wage_Insert", closeDateToParameter, createdByUerIdParameter);
        }
    
        public virtual ObjectResult<usp_CheckStatus_SelectV2_Result> usp_CheckStatus_SelectV2(Nullable<int> queueTypeId, Nullable<int> listCheckStatusId)
        {
            var queueTypeIdParameter = queueTypeId.HasValue ?
                new ObjectParameter("QueueTypeId", queueTypeId) :
                new ObjectParameter("QueueTypeId", typeof(int));
    
            var listCheckStatusIdParameter = listCheckStatusId.HasValue ?
                new ObjectParameter("ListCheckStatusId", listCheckStatusId) :
                new ObjectParameter("ListCheckStatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CheckStatus_SelectV2_Result>("usp_CheckStatus_SelectV2", queueTypeIdParameter, listCheckStatusIdParameter);
        }
    
        public virtual ObjectResult<usp_QueueTypeMonitorAll_Select_Result> usp_QueueTypeMonitorAll_Select(Nullable<int> queueTypeId)
        {
            var queueTypeIdParameter = queueTypeId.HasValue ?
                new ObjectParameter("QueueTypeId", queueTypeId) :
                new ObjectParameter("QueueTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_QueueTypeMonitorAll_Select_Result>("usp_QueueTypeMonitorAll_Select", queueTypeIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_UnAssignQueue_Select(Nullable<int> queueTypeId)
        {
            var queueTypeIdParameter = queueTypeId.HasValue ?
                new ObjectParameter("QueueTypeId", queueTypeId) :
                new ObjectParameter("QueueTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_UnAssignQueue_Select", queueTypeIdParameter);
        }
    
        public virtual ObjectResult<usp_QueueCleanCustomer_ByApplicationCode_Select_Result> usp_QueueCleanCustomer_ByApplicationCode_Select(string applicationCode)
        {
            var applicationCodeParameter = applicationCode != null ?
                new ObjectParameter("ApplicationCode", applicationCode) :
                new ObjectParameter("ApplicationCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_QueueCleanCustomer_ByApplicationCode_Select_Result>("usp_QueueCleanCustomer_ByApplicationCode_Select", applicationCodeParameter);
        }
    
        public virtual ObjectResult<usp_UndoQueue_Update_Result> usp_UndoQueue_Update(string applicationCode, Nullable<bool> isCustomer, Nullable<int> customerStatusId, Nullable<bool> isPayer, Nullable<int> payerStatusId)
        {
            var applicationCodeParameter = applicationCode != null ?
                new ObjectParameter("ApplicationCode", applicationCode) :
                new ObjectParameter("ApplicationCode", typeof(string));
    
            var isCustomerParameter = isCustomer.HasValue ?
                new ObjectParameter("IsCustomer", isCustomer) :
                new ObjectParameter("IsCustomer", typeof(bool));
    
            var customerStatusIdParameter = customerStatusId.HasValue ?
                new ObjectParameter("CustomerStatusId", customerStatusId) :
                new ObjectParameter("CustomerStatusId", typeof(int));
    
            var isPayerParameter = isPayer.HasValue ?
                new ObjectParameter("IsPayer", isPayer) :
                new ObjectParameter("IsPayer", typeof(bool));
    
            var payerStatusIdParameter = payerStatusId.HasValue ?
                new ObjectParameter("PayerStatusId", payerStatusId) :
                new ObjectParameter("PayerStatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UndoQueue_Update_Result>("usp_UndoQueue_Update", applicationCodeParameter, isCustomerParameter, customerStatusIdParameter, isPayerParameter, payerStatusIdParameter);
        }
    
        public virtual ObjectResult<usp_TrackAccountStatus_Select_Result> usp_TrackAccountStatus_Select(Nullable<int> trackAccountStatusId)
        {
            var trackAccountStatusIdParameter = trackAccountStatusId.HasValue ?
                new ObjectParameter("TrackAccountStatusId", trackAccountStatusId) :
                new ObjectParameter("TrackAccountStatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TrackAccountStatus_Select_Result>("usp_TrackAccountStatus_Select", trackAccountStatusIdParameter);
        }
    
        public virtual ObjectResult<usp_CleanCustomerTrackAccountList_Select_Result> usp_CleanCustomerTrackAccountList_Select(Nullable<int> payerbranchId, string searchApplication, string searchCustName, string searchPayerName, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var payerbranchIdParameter = payerbranchId.HasValue ?
                new ObjectParameter("PayerbranchId", payerbranchId) :
                new ObjectParameter("PayerbranchId", typeof(int));
    
            var searchApplicationParameter = searchApplication != null ?
                new ObjectParameter("SearchApplication", searchApplication) :
                new ObjectParameter("SearchApplication", typeof(string));
    
            var searchCustNameParameter = searchCustName != null ?
                new ObjectParameter("SearchCustName", searchCustName) :
                new ObjectParameter("SearchCustName", typeof(string));
    
            var searchPayerNameParameter = searchPayerName != null ?
                new ObjectParameter("SearchPayerName", searchPayerName) :
                new ObjectParameter("SearchPayerName", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CleanCustomerTrackAccountList_Select_Result>("usp_CleanCustomerTrackAccountList_Select", payerbranchIdParameter, searchApplicationParameter, searchCustNameParameter, searchPayerNameParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_CleanCustomerTrackAccount_Select_Result> usp_CleanCustomerTrackAccount_Select(Nullable<int> cleanCustomerTrackAccountId)
        {
            var cleanCustomerTrackAccountIdParameter = cleanCustomerTrackAccountId.HasValue ?
                new ObjectParameter("CleanCustomerTrackAccountId", cleanCustomerTrackAccountId) :
                new ObjectParameter("CleanCustomerTrackAccountId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CleanCustomerTrackAccount_Select_Result>("usp_CleanCustomerTrackAccount_Select", cleanCustomerTrackAccountIdParameter);
        }
    
        public virtual ObjectResult<usp_CleanCustomerTrackAccount_Update_Result> usp_CleanCustomerTrackAccount_Update(Nullable<int> cleanCustomerTrackAccountId, string custTitleCode, string custFirstName, string custLastName, Nullable<System.DateTime> custBirthDate, Nullable<int> custNationalityId, string custPassPort, string custZcardId, string custPhoneNo, Nullable<int> custCheckGroupStatusId, string payerTitleCode, string payerFirstName, string payerLastName, Nullable<System.DateTime> payerBirthDate, Nullable<int> payerNationalityId, string payerPassPort, string payerZcardId, string payerPhoneNo, Nullable<int> payerCheckGroupStatusId, Nullable<int> trackAccountStatusId, string remark, Nullable<int> createdByUserId)
        {
            var cleanCustomerTrackAccountIdParameter = cleanCustomerTrackAccountId.HasValue ?
                new ObjectParameter("CleanCustomerTrackAccountId", cleanCustomerTrackAccountId) :
                new ObjectParameter("CleanCustomerTrackAccountId", typeof(int));
    
            var custTitleCodeParameter = custTitleCode != null ?
                new ObjectParameter("CustTitleCode", custTitleCode) :
                new ObjectParameter("CustTitleCode", typeof(string));
    
            var custFirstNameParameter = custFirstName != null ?
                new ObjectParameter("CustFirstName", custFirstName) :
                new ObjectParameter("CustFirstName", typeof(string));
    
            var custLastNameParameter = custLastName != null ?
                new ObjectParameter("CustLastName", custLastName) :
                new ObjectParameter("CustLastName", typeof(string));
    
            var custBirthDateParameter = custBirthDate.HasValue ?
                new ObjectParameter("CustBirthDate", custBirthDate) :
                new ObjectParameter("CustBirthDate", typeof(System.DateTime));
    
            var custNationalityIdParameter = custNationalityId.HasValue ?
                new ObjectParameter("CustNationalityId", custNationalityId) :
                new ObjectParameter("CustNationalityId", typeof(int));
    
            var custPassPortParameter = custPassPort != null ?
                new ObjectParameter("CustPassPort", custPassPort) :
                new ObjectParameter("CustPassPort", typeof(string));
    
            var custZcardIdParameter = custZcardId != null ?
                new ObjectParameter("CustZcardId", custZcardId) :
                new ObjectParameter("CustZcardId", typeof(string));
    
            var custPhoneNoParameter = custPhoneNo != null ?
                new ObjectParameter("CustPhoneNo", custPhoneNo) :
                new ObjectParameter("CustPhoneNo", typeof(string));
    
            var custCheckGroupStatusIdParameter = custCheckGroupStatusId.HasValue ?
                new ObjectParameter("CustCheckGroupStatusId", custCheckGroupStatusId) :
                new ObjectParameter("CustCheckGroupStatusId", typeof(int));
    
            var payerTitleCodeParameter = payerTitleCode != null ?
                new ObjectParameter("PayerTitleCode", payerTitleCode) :
                new ObjectParameter("PayerTitleCode", typeof(string));
    
            var payerFirstNameParameter = payerFirstName != null ?
                new ObjectParameter("PayerFirstName", payerFirstName) :
                new ObjectParameter("PayerFirstName", typeof(string));
    
            var payerLastNameParameter = payerLastName != null ?
                new ObjectParameter("PayerLastName", payerLastName) :
                new ObjectParameter("PayerLastName", typeof(string));
    
            var payerBirthDateParameter = payerBirthDate.HasValue ?
                new ObjectParameter("PayerBirthDate", payerBirthDate) :
                new ObjectParameter("PayerBirthDate", typeof(System.DateTime));
    
            var payerNationalityIdParameter = payerNationalityId.HasValue ?
                new ObjectParameter("PayerNationalityId", payerNationalityId) :
                new ObjectParameter("PayerNationalityId", typeof(int));
    
            var payerPassPortParameter = payerPassPort != null ?
                new ObjectParameter("PayerPassPort", payerPassPort) :
                new ObjectParameter("PayerPassPort", typeof(string));
    
            var payerZcardIdParameter = payerZcardId != null ?
                new ObjectParameter("PayerZcardId", payerZcardId) :
                new ObjectParameter("PayerZcardId", typeof(string));
    
            var payerPhoneNoParameter = payerPhoneNo != null ?
                new ObjectParameter("PayerPhoneNo", payerPhoneNo) :
                new ObjectParameter("PayerPhoneNo", typeof(string));
    
            var payerCheckGroupStatusIdParameter = payerCheckGroupStatusId.HasValue ?
                new ObjectParameter("PayerCheckGroupStatusId", payerCheckGroupStatusId) :
                new ObjectParameter("PayerCheckGroupStatusId", typeof(int));
    
            var trackAccountStatusIdParameter = trackAccountStatusId.HasValue ?
                new ObjectParameter("TrackAccountStatusId", trackAccountStatusId) :
                new ObjectParameter("TrackAccountStatusId", typeof(int));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CleanCustomerTrackAccount_Update_Result>("usp_CleanCustomerTrackAccount_Update", cleanCustomerTrackAccountIdParameter, custTitleCodeParameter, custFirstNameParameter, custLastNameParameter, custBirthDateParameter, custNationalityIdParameter, custPassPortParameter, custZcardIdParameter, custPhoneNoParameter, custCheckGroupStatusIdParameter, payerTitleCodeParameter, payerFirstNameParameter, payerLastNameParameter, payerBirthDateParameter, payerNationalityIdParameter, payerPassPortParameter, payerZcardIdParameter, payerPhoneNoParameter, payerCheckGroupStatusIdParameter, trackAccountStatusIdParameter, remarkParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_CleanCustomerTrackAccountMonitor_Select_Result> usp_CleanCustomerTrackAccountMonitor_Select(Nullable<int> payerBranchId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var payerBranchIdParameter = payerBranchId.HasValue ?
                new ObjectParameter("PayerBranchId", payerBranchId) :
                new ObjectParameter("PayerBranchId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CleanCustomerTrackAccountMonitor_Select_Result>("usp_CleanCustomerTrackAccountMonitor_Select", payerBranchIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_StatusGroup_Select_Result> usp_StatusGroup_Select(Nullable<int> statusGroupId)
        {
            var statusGroupIdParameter = statusGroupId.HasValue ?
                new ObjectParameter("StatusGroupId", statusGroupId) :
                new ObjectParameter("StatusGroupId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_StatusGroup_Select_Result>("usp_StatusGroup_Select", statusGroupIdParameter);
        }
    
        public virtual ObjectResult<usp_CustomerDisclosure_Select_Result> usp_CustomerDisclosure_Select(string applicationCode)
        {
            var applicationCodeParameter = applicationCode != null ?
                new ObjectParameter("ApplicationCode", applicationCode) :
                new ObjectParameter("ApplicationCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CustomerDisclosure_Select_Result>("usp_CustomerDisclosure_Select", applicationCodeParameter);
        }
    
        public virtual ObjectResult<usp_CustomerDisclosure_Update_Result> usp_CustomerDisclosure_Update(Nullable<int> customerDisclosureId, Nullable<bool> isDisclosure, Nullable<int> createdByUserId)
        {
            var customerDisclosureIdParameter = customerDisclosureId.HasValue ?
                new ObjectParameter("CustomerDisclosureId", customerDisclosureId) :
                new ObjectParameter("CustomerDisclosureId", typeof(int));
    
            var isDisclosureParameter = isDisclosure.HasValue ?
                new ObjectParameter("IsDisclosure", isDisclosure) :
                new ObjectParameter("IsDisclosure", typeof(bool));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CustomerDisclosure_Update_Result>("usp_CustomerDisclosure_Update", customerDisclosureIdParameter, isDisclosureParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_InsuranceCompany_Select_Result> usp_InsuranceCompany_Select(Nullable<int> insuranceCompanyId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchQueueDetail)
        {
            var insuranceCompanyIdParameter = insuranceCompanyId.HasValue ?
                new ObjectParameter("InsuranceCompanyId", insuranceCompanyId) :
                new ObjectParameter("InsuranceCompanyId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchQueueDetailParameter = searchQueueDetail != null ?
                new ObjectParameter("SearchQueueDetail", searchQueueDetail) :
                new ObjectParameter("SearchQueueDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_InsuranceCompany_Select_Result>("usp_InsuranceCompany_Select", insuranceCompanyIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchQueueDetailParameter);
        }
    
        public virtual ObjectResult<usp_CleanCustomerTrackAccount_SelectV2_Result> usp_CleanCustomerTrackAccount_SelectV2(Nullable<int> cleanCustomerTrackAccountId)
        {
            var cleanCustomerTrackAccountIdParameter = cleanCustomerTrackAccountId.HasValue ?
                new ObjectParameter("CleanCustomerTrackAccountId", cleanCustomerTrackAccountId) :
                new ObjectParameter("CleanCustomerTrackAccountId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CleanCustomerTrackAccount_SelectV2_Result>("usp_CleanCustomerTrackAccount_SelectV2", cleanCustomerTrackAccountIdParameter);
        }
    
        public virtual ObjectResult<usp_CleanCustomerTrackAccount_UpdateV2_Result> usp_CleanCustomerTrackAccount_UpdateV2(Nullable<int> cleanCustomerTrackAccountId, string custTitleCode, string custFirstName, string custLastName, Nullable<System.DateTime> custBirthDate, Nullable<int> custNationalityId, string custPassPort, string custZcardId, string custPhoneNo, Nullable<int> custCheckGroupStatusId, string payerTitleCode, string payerFirstName, string payerLastName, Nullable<System.DateTime> payerBirthDate, Nullable<int> payerNationalityId, string payerPassPort, string payerZcardId, string payerPhoneNo, Nullable<int> payerCheckGroupStatusId, Nullable<int> trackAccountStatusId, string remark, Nullable<int> createdByUserId)
        {
            var cleanCustomerTrackAccountIdParameter = cleanCustomerTrackAccountId.HasValue ?
                new ObjectParameter("CleanCustomerTrackAccountId", cleanCustomerTrackAccountId) :
                new ObjectParameter("CleanCustomerTrackAccountId", typeof(int));
    
            var custTitleCodeParameter = custTitleCode != null ?
                new ObjectParameter("CustTitleCode", custTitleCode) :
                new ObjectParameter("CustTitleCode", typeof(string));
    
            var custFirstNameParameter = custFirstName != null ?
                new ObjectParameter("CustFirstName", custFirstName) :
                new ObjectParameter("CustFirstName", typeof(string));
    
            var custLastNameParameter = custLastName != null ?
                new ObjectParameter("CustLastName", custLastName) :
                new ObjectParameter("CustLastName", typeof(string));
    
            var custBirthDateParameter = custBirthDate.HasValue ?
                new ObjectParameter("CustBirthDate", custBirthDate) :
                new ObjectParameter("CustBirthDate", typeof(System.DateTime));
    
            var custNationalityIdParameter = custNationalityId.HasValue ?
                new ObjectParameter("CustNationalityId", custNationalityId) :
                new ObjectParameter("CustNationalityId", typeof(int));
    
            var custPassPortParameter = custPassPort != null ?
                new ObjectParameter("CustPassPort", custPassPort) :
                new ObjectParameter("CustPassPort", typeof(string));
    
            var custZcardIdParameter = custZcardId != null ?
                new ObjectParameter("CustZcardId", custZcardId) :
                new ObjectParameter("CustZcardId", typeof(string));
    
            var custPhoneNoParameter = custPhoneNo != null ?
                new ObjectParameter("CustPhoneNo", custPhoneNo) :
                new ObjectParameter("CustPhoneNo", typeof(string));
    
            var custCheckGroupStatusIdParameter = custCheckGroupStatusId.HasValue ?
                new ObjectParameter("CustCheckGroupStatusId", custCheckGroupStatusId) :
                new ObjectParameter("CustCheckGroupStatusId", typeof(int));
    
            var payerTitleCodeParameter = payerTitleCode != null ?
                new ObjectParameter("PayerTitleCode", payerTitleCode) :
                new ObjectParameter("PayerTitleCode", typeof(string));
    
            var payerFirstNameParameter = payerFirstName != null ?
                new ObjectParameter("PayerFirstName", payerFirstName) :
                new ObjectParameter("PayerFirstName", typeof(string));
    
            var payerLastNameParameter = payerLastName != null ?
                new ObjectParameter("PayerLastName", payerLastName) :
                new ObjectParameter("PayerLastName", typeof(string));
    
            var payerBirthDateParameter = payerBirthDate.HasValue ?
                new ObjectParameter("PayerBirthDate", payerBirthDate) :
                new ObjectParameter("PayerBirthDate", typeof(System.DateTime));
    
            var payerNationalityIdParameter = payerNationalityId.HasValue ?
                new ObjectParameter("PayerNationalityId", payerNationalityId) :
                new ObjectParameter("PayerNationalityId", typeof(int));
    
            var payerPassPortParameter = payerPassPort != null ?
                new ObjectParameter("PayerPassPort", payerPassPort) :
                new ObjectParameter("PayerPassPort", typeof(string));
    
            var payerZcardIdParameter = payerZcardId != null ?
                new ObjectParameter("PayerZcardId", payerZcardId) :
                new ObjectParameter("PayerZcardId", typeof(string));
    
            var payerPhoneNoParameter = payerPhoneNo != null ?
                new ObjectParameter("PayerPhoneNo", payerPhoneNo) :
                new ObjectParameter("PayerPhoneNo", typeof(string));
    
            var payerCheckGroupStatusIdParameter = payerCheckGroupStatusId.HasValue ?
                new ObjectParameter("PayerCheckGroupStatusId", payerCheckGroupStatusId) :
                new ObjectParameter("PayerCheckGroupStatusId", typeof(int));
    
            var trackAccountStatusIdParameter = trackAccountStatusId.HasValue ?
                new ObjectParameter("TrackAccountStatusId", trackAccountStatusId) :
                new ObjectParameter("TrackAccountStatusId", typeof(int));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CleanCustomerTrackAccount_UpdateV2_Result>("usp_CleanCustomerTrackAccount_UpdateV2", cleanCustomerTrackAccountIdParameter, custTitleCodeParameter, custFirstNameParameter, custLastNameParameter, custBirthDateParameter, custNationalityIdParameter, custPassPortParameter, custZcardIdParameter, custPhoneNoParameter, custCheckGroupStatusIdParameter, payerTitleCodeParameter, payerFirstNameParameter, payerLastNameParameter, payerBirthDateParameter, payerNationalityIdParameter, payerPassPortParameter, payerZcardIdParameter, payerPhoneNoParameter, payerCheckGroupStatusIdParameter, trackAccountStatusIdParameter, remarkParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_CleanCustomerTrackAccountList_SelectV2_Result> usp_CleanCustomerTrackAccountList_SelectV2(Nullable<int> payerbranchId, string searchApplication, string searchCustName, string searchPayerName, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var payerbranchIdParameter = payerbranchId.HasValue ?
                new ObjectParameter("PayerbranchId", payerbranchId) :
                new ObjectParameter("PayerbranchId", typeof(int));
    
            var searchApplicationParameter = searchApplication != null ?
                new ObjectParameter("SearchApplication", searchApplication) :
                new ObjectParameter("SearchApplication", typeof(string));
    
            var searchCustNameParameter = searchCustName != null ?
                new ObjectParameter("SearchCustName", searchCustName) :
                new ObjectParameter("SearchCustName", typeof(string));
    
            var searchPayerNameParameter = searchPayerName != null ?
                new ObjectParameter("SearchPayerName", searchPayerName) :
                new ObjectParameter("SearchPayerName", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CleanCustomerTrackAccountList_SelectV2_Result>("usp_CleanCustomerTrackAccountList_SelectV2", payerbranchIdParameter, searchApplicationParameter, searchCustNameParameter, searchPayerNameParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_CleanCustomerTrackAccountMonitor_SelectV2_Result> usp_CleanCustomerTrackAccountMonitor_SelectV2(Nullable<int> payerBranchId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var payerBranchIdParameter = payerBranchId.HasValue ?
                new ObjectParameter("PayerBranchId", payerBranchId) :
                new ObjectParameter("PayerBranchId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CleanCustomerTrackAccountMonitor_SelectV2_Result>("usp_CleanCustomerTrackAccountMonitor_SelectV2", payerBranchIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_Branch_Select_Result> usp_Branch_Select(Nullable<int> branchId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Branch_Select_Result>("usp_Branch_Select", branchIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ReportCleanCustomerTrackAccount_Select_Result> usp_ReportCleanCustomerTrackAccount_Select(Nullable<int> payerBranchId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var payerBranchIdParameter = payerBranchId.HasValue ?
                new ObjectParameter("PayerBranchId", payerBranchId) :
                new ObjectParameter("PayerBranchId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReportCleanCustomerTrackAccount_Select_Result>("usp_ReportCleanCustomerTrackAccount_Select", payerBranchIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_Report_QueueClosed_Detail_select_Result> usp_Report_QueueClosed_Detail_select(Nullable<int> branchId)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Report_QueueClosed_Detail_select_Result>("usp_Report_QueueClosed_Detail_select", branchIdParameter);
        }
    
        public virtual ObjectResult<usp_Report_QueueClosed_Summary_select_Result> usp_Report_QueueClosed_Summary_select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Report_QueueClosed_Summary_select_Result>("usp_Report_QueueClosed_Summary_select");
        }
    }
}
