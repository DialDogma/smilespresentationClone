//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmileUnderwriteBranch.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class UnderwriteBranchEntities : DbContext
    {
        public UnderwriteBranchEntities()
            : base("name=UnderwriteBranchEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<usp_AdminLineChart_ByDate_Result> usp_AdminLineChart_ByDate(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AdminLineChart_ByDate_Result>("usp_AdminLineChart_ByDate", dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<usp_AdminLineChart_ByDCR_Result> usp_AdminLineChart_ByDCR(Nullable<System.DateTime> dCR)
        {
            var dCRParameter = dCR.HasValue ?
                new ObjectParameter("DCR", dCR) :
                new ObjectParameter("DCR", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AdminLineChart_ByDCR_Result>("usp_AdminLineChart_ByDCR", dCRParameter);
        }
    
        public virtual ObjectResult<usp_AdminLineChart_ByDuration_Result> usp_AdminLineChart_ByDuration()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AdminLineChart_ByDuration_Result>("usp_AdminLineChart_ByDuration");
        }
    
        public virtual int usp_AssignQueueList(Nullable<int> queueTotal, Nullable<int> queueTypeId, Nullable<int> queueStatusId, Nullable<int> assignToUserId, Nullable<int> createdByUserId, string branch_ID)
        {
            var queueTotalParameter = queueTotal.HasValue ?
                new ObjectParameter("QueueTotal", queueTotal) :
                new ObjectParameter("QueueTotal", typeof(int));
    
            var queueTypeIdParameter = queueTypeId.HasValue ?
                new ObjectParameter("QueueTypeId", queueTypeId) :
                new ObjectParameter("QueueTypeId", typeof(int));
    
            var queueStatusIdParameter = queueStatusId.HasValue ?
                new ObjectParameter("QueueStatusId", queueStatusId) :
                new ObjectParameter("QueueStatusId", typeof(int));
    
            var assignToUserIdParameter = assignToUserId.HasValue ?
                new ObjectParameter("AssignToUserId", assignToUserId) :
                new ObjectParameter("AssignToUserId", typeof(int));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            var branch_IDParameter = branch_ID != null ?
                new ObjectParameter("Branch_ID", branch_ID) :
                new ObjectParameter("Branch_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AssignQueueList", queueTotalParameter, queueTypeIdParameter, queueStatusIdParameter, assignToUserIdParameter, createdByUserIdParameter, branch_IDParameter);
        }
    
        public virtual ObjectResult<usp_CallStatus_Select_Result> usp_CallStatus_Select(Nullable<int> callStatusId)
        {
            var callStatusIdParameter = callStatusId.HasValue ?
                new ObjectParameter("CallStatusId", callStatusId) :
                new ObjectParameter("CallStatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CallStatus_Select_Result>("usp_CallStatus_Select", callStatusIdParameter);
        }
    
        public virtual ObjectResult<usp_DataCenter_PersonUser_Select_Result> usp_DataCenter_PersonUser_Select(string criteria)
        {
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DataCenter_PersonUser_Select_Result>("usp_DataCenter_PersonUser_Select", criteriaParameter);
        }
    
        public virtual ObjectResult<usp_GetPHQueueDetailById_Result> usp_GetPHQueueDetailById(Nullable<int> queueId)
        {
            var queueIdParameter = queueId.HasValue ?
                new ObjectParameter("QueueId", queueId) :
                new ObjectParameter("QueueId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetPHQueueDetailById_Result>("usp_GetPHQueueDetailById", queueIdParameter);
        }
    
        public virtual int usp_PHQueueAnalytic_Insert(Nullable<int> userID, string uRL, string iPAddress)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var uRLParameter = uRL != null ?
                new ObjectParameter("URL", uRL) :
                new ObjectParameter("URL", typeof(string));
    
            var iPAddressParameter = iPAddress != null ?
                new ObjectParameter("IPAddress", iPAddress) :
                new ObjectParameter("IPAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PHQueueAnalytic_Insert", userIDParameter, uRLParameter, iPAddressParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_PHQueueAssign_Insert(Nullable<int> pHQueueId, Nullable<System.DateTime> queueExpireDate, Nullable<System.DateTime> period, Nullable<int> createdByUserId)
        {
            var pHQueueIdParameter = pHQueueId.HasValue ?
                new ObjectParameter("PHQueueId", pHQueueId) :
                new ObjectParameter("PHQueueId", typeof(int));
    
            var queueExpireDateParameter = queueExpireDate.HasValue ?
                new ObjectParameter("QueueExpireDate", queueExpireDate) :
                new ObjectParameter("QueueExpireDate", typeof(System.DateTime));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_PHQueueAssign_Insert", pHQueueIdParameter, queueExpireDateParameter, periodParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_PHQueueAssign_Select_Result> usp_PHQueueAssign_Select(Nullable<int> userId, Nullable<int> schoolAreaId, Nullable<int> durationDays, Nullable<System.DateTime> period, Nullable<int> pHQueueStatusId, string criteria, Nullable<int> pageStart, Nullable<int> pageSize, string sortField, string orderType)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var schoolAreaIdParameter = schoolAreaId.HasValue ?
                new ObjectParameter("SchoolAreaId", schoolAreaId) :
                new ObjectParameter("SchoolAreaId", typeof(int));
    
            var durationDaysParameter = durationDays.HasValue ?
                new ObjectParameter("DurationDays", durationDays) :
                new ObjectParameter("DurationDays", typeof(int));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            var pHQueueStatusIdParameter = pHQueueStatusId.HasValue ?
                new ObjectParameter("PHQueueStatusId", pHQueueStatusId) :
                new ObjectParameter("PHQueueStatusId", typeof(int));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            var pageStartParameter = pageStart.HasValue ?
                new ObjectParameter("PageStart", pageStart) :
                new ObjectParameter("PageStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PHQueueAssign_Select_Result>("usp_PHQueueAssign_Select", userIdParameter, schoolAreaIdParameter, durationDaysParameter, periodParameter, pHQueueStatusIdParameter, criteriaParameter, pageStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter);
        }
    
        public virtual ObjectResult<usp_PHQueueBranchStatusCount_Select_Result> usp_PHQueueBranchStatusCount_Select(Nullable<int> durationDays, Nullable<System.DateTime> period, string criteria, Nullable<int> pageStart, Nullable<int> pageSize, string sortField, string orderType)
        {
            var durationDaysParameter = durationDays.HasValue ?
                new ObjectParameter("DurationDays", durationDays) :
                new ObjectParameter("DurationDays", typeof(int));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            var pageStartParameter = pageStart.HasValue ?
                new ObjectParameter("PageStart", pageStart) :
                new ObjectParameter("PageStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PHQueueBranchStatusCount_Select_Result>("usp_PHQueueBranchStatusCount_Select", durationDaysParameter, periodParameter, criteriaParameter, pageStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter);
        }
    
        public virtual ObjectResult<usp_PHQueueBranchStatusCountExcel_Select_Result> usp_PHQueueBranchStatusCountExcel_Select(Nullable<int> durationDays, Nullable<System.DateTime> period, string criteria)
        {
            var durationDaysParameter = durationDays.HasValue ?
                new ObjectParameter("DurationDays", durationDays) :
                new ObjectParameter("DurationDays", typeof(int));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PHQueueBranchStatusCountExcel_Select_Result>("usp_PHQueueBranchStatusCountExcel_Select", durationDaysParameter, periodParameter, criteriaParameter);
        }
    
        public virtual ObjectResult<usp_PHQueueByAppCode_Select_Result> usp_PHQueueByAppCode_Select(string applicationCode)
        {
            var applicationCodeParameter = applicationCode != null ?
                new ObjectParameter("ApplicationCode", applicationCode) :
                new ObjectParameter("ApplicationCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PHQueueByAppCode_Select_Result>("usp_PHQueueByAppCode_Select", applicationCodeParameter);
        }
    
        public virtual ObjectResult<usp_PHQueueByQueueId_Select_Result> usp_PHQueueByQueueId_Select(Nullable<int> pHQueueId)
        {
            var pHQueueIdParameter = pHQueueId.HasValue ?
                new ObjectParameter("PHQueueId", pHQueueId) :
                new ObjectParameter("PHQueueId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PHQueueByQueueId_Select_Result>("usp_PHQueueByQueueId_Select", pHQueueIdParameter);
        }
    
        public virtual ObjectResult<usp_PHQueueCallStatusCountAll_Select_Result> usp_PHQueueCallStatusCountAll_Select(Nullable<int> durationDays, Nullable<System.DateTime> period)
        {
            var durationDaysParameter = durationDays.HasValue ?
                new ObjectParameter("DurationDays", durationDays) :
                new ObjectParameter("DurationDays", typeof(int));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PHQueueCallStatusCountAll_Select_Result>("usp_PHQueueCallStatusCountAll_Select", durationDaysParameter, periodParameter);
        }
    
        public virtual int usp_PHQueueCallStatusUpdateByQueueId_Update(Nullable<int> pHQueueId, Nullable<int> callStatusId)
        {
            var pHQueueIdParameter = pHQueueId.HasValue ?
                new ObjectParameter("PHQueueId", pHQueueId) :
                new ObjectParameter("PHQueueId", typeof(int));
    
            var callStatusIdParameter = callStatusId.HasValue ?
                new ObjectParameter("CallStatusId", callStatusId) :
                new ObjectParameter("CallStatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PHQueueCallStatusUpdateByQueueId_Update", pHQueueIdParameter, callStatusIdParameter);
        }
    
        public virtual int usp_PHQueueCallToByQueueId_Update(Nullable<int> pHQueueId, Nullable<bool> callToCustomer, Nullable<bool> callToPayer)
        {
            var pHQueueIdParameter = pHQueueId.HasValue ?
                new ObjectParameter("PHQueueId", pHQueueId) :
                new ObjectParameter("PHQueueId", typeof(int));
    
            var callToCustomerParameter = callToCustomer.HasValue ?
                new ObjectParameter("CallToCustomer", callToCustomer) :
                new ObjectParameter("CallToCustomer", typeof(bool));
    
            var callToPayerParameter = callToPayer.HasValue ?
                new ObjectParameter("CallToPayer", callToPayer) :
                new ObjectParameter("CallToPayer", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PHQueueCallToByQueueId_Update", pHQueueIdParameter, callToCustomerParameter, callToPayerParameter);
        }
    
        public virtual ObjectResult<usp_PHQueueConfig_Select_Result> usp_PHQueueConfig_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PHQueueConfig_Select_Result>("usp_PHQueueConfig_Select");
        }
    
        public virtual int usp_PHQueueQueueTypeByQueueId_Update(Nullable<int> pHQueueId, Nullable<int> queueTypeId)
        {
            var pHQueueIdParameter = pHQueueId.HasValue ?
                new ObjectParameter("PHQueueId", pHQueueId) :
                new ObjectParameter("PHQueueId", typeof(int));
    
            var queueTypeIdParameter = queueTypeId.HasValue ?
                new ObjectParameter("QueueTypeId", queueTypeId) :
                new ObjectParameter("QueueTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PHQueueQueueTypeByQueueId_Update", pHQueueIdParameter, queueTypeIdParameter);
        }
    
        public virtual ObjectResult<usp_PHQueueResult_Get_Result> usp_PHQueueResult_Get(Nullable<int> pHQueueId)
        {
            var pHQueueIdParameter = pHQueueId.HasValue ?
                new ObjectParameter("PHQueueId", pHQueueId) :
                new ObjectParameter("PHQueueId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PHQueueResult_Get_Result>("usp_PHQueueResult_Get", pHQueueIdParameter);
        }
    
        public virtual ObjectResult<usp_PHQueueStatusCountAll_Select_Result> usp_PHQueueStatusCountAll_Select(Nullable<int> durationDays, Nullable<System.DateTime> period)
        {
            var durationDaysParameter = durationDays.HasValue ?
                new ObjectParameter("DurationDays", durationDays) :
                new ObjectParameter("DurationDays", typeof(int));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PHQueueStatusCountAll_Select_Result>("usp_PHQueueStatusCountAll_Select", durationDaysParameter, periodParameter);
        }
    
        public virtual ObjectResult<usp_PHQueueStatusCountByStudyAreaIdV2_Select_Result> usp_PHQueueStatusCountByStudyAreaIdV2_Select(Nullable<int> studyAreaId, Nullable<int> durationDays, Nullable<System.DateTime> period)
        {
            var studyAreaIdParameter = studyAreaId.HasValue ?
                new ObjectParameter("StudyAreaId", studyAreaId) :
                new ObjectParameter("StudyAreaId", typeof(int));
    
            var durationDaysParameter = durationDays.HasValue ?
                new ObjectParameter("DurationDays", durationDays) :
                new ObjectParameter("DurationDays", typeof(int));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PHQueueStatusCountByStudyAreaIdV2_Select_Result>("usp_PHQueueStatusCountByStudyAreaIdV2_Select", studyAreaIdParameter, durationDaysParameter, periodParameter);
        }
    
        public virtual int usp_PHQueueStatusUpdateByQueueId_Update(Nullable<int> pHQueueId, Nullable<int> pHQueueStatusId, Nullable<int> userId)
        {
            var pHQueueIdParameter = pHQueueId.HasValue ?
                new ObjectParameter("PHQueueId", pHQueueId) :
                new ObjectParameter("PHQueueId", typeof(int));
    
            var pHQueueStatusIdParameter = pHQueueStatusId.HasValue ?
                new ObjectParameter("PHQueueStatusId", pHQueueStatusId) :
                new ObjectParameter("PHQueueStatusId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PHQueueStatusUpdateByQueueId_Update", pHQueueIdParameter, pHQueueStatusIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<usp_PHQueue_Select_Result> usp_PHQueue_Select(Nullable<int> userId, Nullable<int> schoolAreaId, Nullable<int> durationDays, Nullable<System.DateTime> period, Nullable<int> pHQueueStatusId, string criteria, Nullable<bool> isResultPass, Nullable<int> pageStart, Nullable<int> pageSize, string sortField, string orderType)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var schoolAreaIdParameter = schoolAreaId.HasValue ?
                new ObjectParameter("SchoolAreaId", schoolAreaId) :
                new ObjectParameter("SchoolAreaId", typeof(int));
    
            var durationDaysParameter = durationDays.HasValue ?
                new ObjectParameter("DurationDays", durationDays) :
                new ObjectParameter("DurationDays", typeof(int));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            var pHQueueStatusIdParameter = pHQueueStatusId.HasValue ?
                new ObjectParameter("PHQueueStatusId", pHQueueStatusId) :
                new ObjectParameter("PHQueueStatusId", typeof(int));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            var isResultPassParameter = isResultPass.HasValue ?
                new ObjectParameter("IsResultPass", isResultPass) :
                new ObjectParameter("IsResultPass", typeof(bool));
    
            var pageStartParameter = pageStart.HasValue ?
                new ObjectParameter("PageStart", pageStart) :
                new ObjectParameter("PageStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PHQueue_Select_Result>("usp_PHQueue_Select", userIdParameter, schoolAreaIdParameter, durationDaysParameter, periodParameter, pHQueueStatusIdParameter, criteriaParameter, isResultPassParameter, pageStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter);
        }
    
        public virtual ObjectResult<usp_Ranking_Call_ASC_Select_Result> usp_Ranking_Call_ASC_Select(Nullable<System.DateTime> period, string criteria, Nullable<int> pageStart, Nullable<int> pageSize, string sortField, string orderType)
        {
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            var pageStartParameter = pageStart.HasValue ?
                new ObjectParameter("PageStart", pageStart) :
                new ObjectParameter("PageStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Ranking_Call_ASC_Select_Result>("usp_Ranking_Call_ASC_Select", periodParameter, criteriaParameter, pageStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter);
        }
    
        public virtual ObjectResult<usp_Ranking_Call_DESC_Select_Result> usp_Ranking_Call_DESC_Select(Nullable<System.DateTime> period, string criteria, Nullable<int> pageStart, Nullable<int> pageSize, string sortField, string orderType)
        {
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            var pageStartParameter = pageStart.HasValue ?
                new ObjectParameter("PageStart", pageStart) :
                new ObjectParameter("PageStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Ranking_Call_DESC_Select_Result>("usp_Ranking_Call_DESC_Select", periodParameter, criteriaParameter, pageStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter);
        }
    
        public virtual ObjectResult<usp_StudyAreaUserConfigByUserId_Select_Result> usp_StudyAreaUserConfigByUserId_Select(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_StudyAreaUserConfigByUserId_Select_Result>("usp_StudyAreaUserConfigByUserId_Select", userIdParameter);
        }
    
        public virtual ObjectResult<usp_StudyAreaUserConfigExcel_Select_Result> usp_StudyAreaUserConfigExcel_Select(string criteria)
        {
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_StudyAreaUserConfigExcel_Select_Result>("usp_StudyAreaUserConfigExcel_Select", criteriaParameter);
        }
    
        public virtual ObjectResult<usp_PHQueueResult_Update_Result> usp_PHQueueResult_Update(Nullable<int> pHQueueId, Nullable<bool> isBankAccountAllow, string bankAccountAllowRemark, Nullable<bool> isBranchInform, Nullable<bool> isCallCenterInform, Nullable<bool> isConfirm, Nullable<bool> isContactByPhone, Nullable<bool> isContactByFaceToFace, Nullable<bool> isResultPass, Nullable<bool> denyHealth, Nullable<bool> denyOccupation, Nullable<bool> denyCantPay, Nullable<bool> denyOther, string denyRemark, string remark)
        {
            var pHQueueIdParameter = pHQueueId.HasValue ?
                new ObjectParameter("PHQueueId", pHQueueId) :
                new ObjectParameter("PHQueueId", typeof(int));
    
            var isBankAccountAllowParameter = isBankAccountAllow.HasValue ?
                new ObjectParameter("IsBankAccountAllow", isBankAccountAllow) :
                new ObjectParameter("IsBankAccountAllow", typeof(bool));
    
            var bankAccountAllowRemarkParameter = bankAccountAllowRemark != null ?
                new ObjectParameter("BankAccountAllowRemark", bankAccountAllowRemark) :
                new ObjectParameter("BankAccountAllowRemark", typeof(string));
    
            var isBranchInformParameter = isBranchInform.HasValue ?
                new ObjectParameter("IsBranchInform", isBranchInform) :
                new ObjectParameter("IsBranchInform", typeof(bool));
    
            var isCallCenterInformParameter = isCallCenterInform.HasValue ?
                new ObjectParameter("IsCallCenterInform", isCallCenterInform) :
                new ObjectParameter("IsCallCenterInform", typeof(bool));
    
            var isConfirmParameter = isConfirm.HasValue ?
                new ObjectParameter("IsConfirm", isConfirm) :
                new ObjectParameter("IsConfirm", typeof(bool));
    
            var isContactByPhoneParameter = isContactByPhone.HasValue ?
                new ObjectParameter("IsContactByPhone", isContactByPhone) :
                new ObjectParameter("IsContactByPhone", typeof(bool));
    
            var isContactByFaceToFaceParameter = isContactByFaceToFace.HasValue ?
                new ObjectParameter("IsContactByFaceToFace", isContactByFaceToFace) :
                new ObjectParameter("IsContactByFaceToFace", typeof(bool));
    
            var isResultPassParameter = isResultPass.HasValue ?
                new ObjectParameter("IsResultPass", isResultPass) :
                new ObjectParameter("IsResultPass", typeof(bool));
    
            var denyHealthParameter = denyHealth.HasValue ?
                new ObjectParameter("DenyHealth", denyHealth) :
                new ObjectParameter("DenyHealth", typeof(bool));
    
            var denyOccupationParameter = denyOccupation.HasValue ?
                new ObjectParameter("DenyOccupation", denyOccupation) :
                new ObjectParameter("DenyOccupation", typeof(bool));
    
            var denyCantPayParameter = denyCantPay.HasValue ?
                new ObjectParameter("DenyCantPay", denyCantPay) :
                new ObjectParameter("DenyCantPay", typeof(bool));
    
            var denyOtherParameter = denyOther.HasValue ?
                new ObjectParameter("DenyOther", denyOther) :
                new ObjectParameter("DenyOther", typeof(bool));
    
            var denyRemarkParameter = denyRemark != null ?
                new ObjectParameter("DenyRemark", denyRemark) :
                new ObjectParameter("DenyRemark", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PHQueueResult_Update_Result>("usp_PHQueueResult_Update", pHQueueIdParameter, isBankAccountAllowParameter, bankAccountAllowRemarkParameter, isBranchInformParameter, isCallCenterInformParameter, isConfirmParameter, isContactByPhoneParameter, isContactByFaceToFaceParameter, isResultPassParameter, denyHealthParameter, denyOccupationParameter, denyCantPayParameter, denyOtherParameter, denyRemarkParameter, remarkParameter);
        }
    
        public virtual ObjectResult<usp_PHQueueType_Select_Result> usp_PHQueueType_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PHQueueType_Select_Result>("usp_PHQueueType_Select");
        }
    
        public virtual int usp_PHQueueUnderwriteBranchResultByQueueId_Update(Nullable<int> pHQueueId, Nullable<bool> underwriteBranchResult)
        {
            var pHQueueIdParameter = pHQueueId.HasValue ?
                new ObjectParameter("PHQueueId", pHQueueId) :
                new ObjectParameter("PHQueueId", typeof(int));
    
            var underwriteBranchResultParameter = underwriteBranchResult.HasValue ?
                new ObjectParameter("UnderwriteBranchResult", underwriteBranchResult) :
                new ObjectParameter("UnderwriteBranchResult", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PHQueueUnderwriteBranchResultByQueueId_Update", pHQueueIdParameter, underwriteBranchResultParameter);
        }
    
        public virtual ObjectResult<usp_PHQueueUnderwriteBranchResultCountAll_Select_Result> usp_PHQueueUnderwriteBranchResultCountAll_Select(Nullable<int> durationDays, Nullable<System.DateTime> period)
        {
            var durationDaysParameter = durationDays.HasValue ?
                new ObjectParameter("DurationDays", durationDays) :
                new ObjectParameter("DurationDays", typeof(int));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PHQueueUnderwriteBranchResultCountAll_Select_Result>("usp_PHQueueUnderwriteBranchResultCountAll_Select", durationDaysParameter, periodParameter);
        }
    
        public virtual ObjectResult<usp_StudyAreaUserConfigByStudyAreaUserConfigId_Select_Result> usp_StudyAreaUserConfigByStudyAreaUserConfigId_Select(Nullable<int> studyAreaUserConfigId)
        {
            var studyAreaUserConfigIdParameter = studyAreaUserConfigId.HasValue ?
                new ObjectParameter("StudyAreaUserConfigId", studyAreaUserConfigId) :
                new ObjectParameter("StudyAreaUserConfigId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_StudyAreaUserConfigByStudyAreaUserConfigId_Select_Result>("usp_StudyAreaUserConfigByStudyAreaUserConfigId_Select", studyAreaUserConfigIdParameter);
        }
    
        public virtual ObjectResult<string> usp_StudyAreaUserConfigUpdateByStudyAreaUserConfigId_Update(Nullable<int> studyAreaUserConfigId, Nullable<int> userId, Nullable<bool> moveQueue)
        {
            var studyAreaUserConfigIdParameter = studyAreaUserConfigId.HasValue ?
                new ObjectParameter("StudyAreaUserConfigId", studyAreaUserConfigId) :
                new ObjectParameter("StudyAreaUserConfigId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var moveQueueParameter = moveQueue.HasValue ?
                new ObjectParameter("MoveQueue", moveQueue) :
                new ObjectParameter("MoveQueue", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_StudyAreaUserConfigUpdateByStudyAreaUserConfigId_Update", studyAreaUserConfigIdParameter, userIdParameter, moveQueueParameter);
        }
    
        public virtual ObjectResult<usp_StudyAreaUserConfig_Select_Result> usp_StudyAreaUserConfig_Select(string criteria, Nullable<int> pageStart, Nullable<int> pageSize, string sortField, string orderType)
        {
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            var pageStartParameter = pageStart.HasValue ?
                new ObjectParameter("PageStart", pageStart) :
                new ObjectParameter("PageStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_StudyAreaUserConfig_Select_Result>("usp_StudyAreaUserConfig_Select", criteriaParameter, pageStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter);
        }
    
        public virtual int usp_PHQueueIsFoundCustomerByQueueId_Update(Nullable<int> pHQueueId, Nullable<bool> isFoundCustomer)
        {
            var pHQueueIdParameter = pHQueueId.HasValue ?
                new ObjectParameter("PHQueueId", pHQueueId) :
                new ObjectParameter("PHQueueId", typeof(int));
    
            var isFoundCustomerParameter = isFoundCustomer.HasValue ?
                new ObjectParameter("IsFoundCustomer", isFoundCustomer) :
                new ObjectParameter("IsFoundCustomer", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PHQueueIsFoundCustomerByQueueId_Update", pHQueueIdParameter, isFoundCustomerParameter);
        }
    
        public virtual ObjectResult<usp_PHQueueStatusCountByStudyAreaIdV3_Select_Result> usp_PHQueueStatusCountByStudyAreaIdV3_Select(Nullable<int> studyAreaId, Nullable<int> userId, Nullable<int> durationDays, Nullable<System.DateTime> period)
        {
            var studyAreaIdParameter = studyAreaId.HasValue ?
                new ObjectParameter("StudyAreaId", studyAreaId) :
                new ObjectParameter("StudyAreaId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var durationDaysParameter = durationDays.HasValue ?
                new ObjectParameter("DurationDays", durationDays) :
                new ObjectParameter("DurationDays", typeof(int));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PHQueueStatusCountByStudyAreaIdV3_Select_Result>("usp_PHQueueStatusCountByStudyAreaIdV3_Select", studyAreaIdParameter, userIdParameter, durationDaysParameter, periodParameter);
        }
    
        public virtual ObjectResult<usp_PHQueueStatusCountByStudyAreaIdV4_Select_Result> usp_PHQueueStatusCountByStudyAreaIdV4_Select(Nullable<int> studyAreaId, Nullable<int> userId, Nullable<int> durationDays, Nullable<System.DateTime> period)
        {
            var studyAreaIdParameter = studyAreaId.HasValue ?
                new ObjectParameter("StudyAreaId", studyAreaId) :
                new ObjectParameter("StudyAreaId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var durationDaysParameter = durationDays.HasValue ?
                new ObjectParameter("DurationDays", durationDays) :
                new ObjectParameter("DurationDays", typeof(int));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PHQueueStatusCountByStudyAreaIdV4_Select_Result>("usp_PHQueueStatusCountByStudyAreaIdV4_Select", studyAreaIdParameter, userIdParameter, durationDaysParameter, periodParameter);
        }
    
        public virtual ObjectResult<usp_StudyAreaUserConfigByCMUserId_Select_Result> usp_StudyAreaUserConfigByCMUserId_Select(Nullable<int> cMUserId)
        {
            var cMUserIdParameter = cMUserId.HasValue ?
                new ObjectParameter("CMUserId", cMUserId) :
                new ObjectParameter("CMUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_StudyAreaUserConfigByCMUserId_Select_Result>("usp_StudyAreaUserConfigByCMUserId_Select", cMUserIdParameter);
        }
    
        public virtual ObjectResult<usp_PHCMQueue_Select_Result> usp_PHCMQueue_Select(Nullable<int> cMUserId, Nullable<int> userId, Nullable<int> schoolAreaId, Nullable<int> durationDays, Nullable<System.DateTime> period, Nullable<int> pHQueueStatusId, string criteria, Nullable<int> pageStart, Nullable<int> pageSize, string sortField, string orderType, Nullable<bool> isConsider)
        {
            var cMUserIdParameter = cMUserId.HasValue ?
                new ObjectParameter("CMUserId", cMUserId) :
                new ObjectParameter("CMUserId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var schoolAreaIdParameter = schoolAreaId.HasValue ?
                new ObjectParameter("SchoolAreaId", schoolAreaId) :
                new ObjectParameter("SchoolAreaId", typeof(int));
    
            var durationDaysParameter = durationDays.HasValue ?
                new ObjectParameter("DurationDays", durationDays) :
                new ObjectParameter("DurationDays", typeof(int));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            var pHQueueStatusIdParameter = pHQueueStatusId.HasValue ?
                new ObjectParameter("PHQueueStatusId", pHQueueStatusId) :
                new ObjectParameter("PHQueueStatusId", typeof(int));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            var pageStartParameter = pageStart.HasValue ?
                new ObjectParameter("PageStart", pageStart) :
                new ObjectParameter("PageStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var isConsiderParameter = isConsider.HasValue ?
                new ObjectParameter("IsConsider", isConsider) :
                new ObjectParameter("IsConsider", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PHCMQueue_Select_Result>("usp_PHCMQueue_Select", cMUserIdParameter, userIdParameter, schoolAreaIdParameter, durationDaysParameter, periodParameter, pHQueueStatusIdParameter, criteriaParameter, pageStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, isConsiderParameter);
        }
    
        public virtual ObjectResult<usp_UWPaymentType_Select_Result> usp_UWPaymentType_Select(Nullable<int> uWPaymentTypeId)
        {
            var uWPaymentTypeIdParameter = uWPaymentTypeId.HasValue ?
                new ObjectParameter("UWPaymentTypeId", uWPaymentTypeId) :
                new ObjectParameter("UWPaymentTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UWPaymentType_Select_Result>("usp_UWPaymentType_Select", uWPaymentTypeIdParameter);
        }
    
        public virtual ObjectResult<usp_PHQueueResultV2_Update_Result> usp_PHQueueResultV2_Update(Nullable<int> pHQueueId, Nullable<int> queueTypeId, Nullable<int> pHQueueStatusId, Nullable<int> userId, Nullable<bool> callToCustomer, Nullable<bool> callToPayer, Nullable<int> callStatusId, Nullable<bool> isFoundCustomer, Nullable<bool> underwriteBranchResult, Nullable<bool> isBankAccountAllow, string bankAccountAllowRemark, Nullable<bool> isBranchInform, Nullable<bool> isCallCenterInform, Nullable<bool> isConfirm, Nullable<bool> isContactByPhone, Nullable<bool> isContactByFaceToFace, Nullable<bool> isResultPass, Nullable<bool> denyHealth, Nullable<bool> denyOccupation, Nullable<bool> denyCantPay, Nullable<bool> denyOther, string denyRemark, string remark, Nullable<int> uWPaymentTypeId, Nullable<bool> resultPassStandard, Nullable<bool> resultPassCondition, string resultPassConditionRemark, Nullable<bool> resultPassIsSpecify)
        {
            var pHQueueIdParameter = pHQueueId.HasValue ?
                new ObjectParameter("PHQueueId", pHQueueId) :
                new ObjectParameter("PHQueueId", typeof(int));
    
            var queueTypeIdParameter = queueTypeId.HasValue ?
                new ObjectParameter("QueueTypeId", queueTypeId) :
                new ObjectParameter("QueueTypeId", typeof(int));
    
            var pHQueueStatusIdParameter = pHQueueStatusId.HasValue ?
                new ObjectParameter("PHQueueStatusId", pHQueueStatusId) :
                new ObjectParameter("PHQueueStatusId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var callToCustomerParameter = callToCustomer.HasValue ?
                new ObjectParameter("CallToCustomer", callToCustomer) :
                new ObjectParameter("CallToCustomer", typeof(bool));
    
            var callToPayerParameter = callToPayer.HasValue ?
                new ObjectParameter("CallToPayer", callToPayer) :
                new ObjectParameter("CallToPayer", typeof(bool));
    
            var callStatusIdParameter = callStatusId.HasValue ?
                new ObjectParameter("CallStatusId", callStatusId) :
                new ObjectParameter("CallStatusId", typeof(int));
    
            var isFoundCustomerParameter = isFoundCustomer.HasValue ?
                new ObjectParameter("IsFoundCustomer", isFoundCustomer) :
                new ObjectParameter("IsFoundCustomer", typeof(bool));
    
            var underwriteBranchResultParameter = underwriteBranchResult.HasValue ?
                new ObjectParameter("UnderwriteBranchResult", underwriteBranchResult) :
                new ObjectParameter("UnderwriteBranchResult", typeof(bool));
    
            var isBankAccountAllowParameter = isBankAccountAllow.HasValue ?
                new ObjectParameter("IsBankAccountAllow", isBankAccountAllow) :
                new ObjectParameter("IsBankAccountAllow", typeof(bool));
    
            var bankAccountAllowRemarkParameter = bankAccountAllowRemark != null ?
                new ObjectParameter("BankAccountAllowRemark", bankAccountAllowRemark) :
                new ObjectParameter("BankAccountAllowRemark", typeof(string));
    
            var isBranchInformParameter = isBranchInform.HasValue ?
                new ObjectParameter("IsBranchInform", isBranchInform) :
                new ObjectParameter("IsBranchInform", typeof(bool));
    
            var isCallCenterInformParameter = isCallCenterInform.HasValue ?
                new ObjectParameter("IsCallCenterInform", isCallCenterInform) :
                new ObjectParameter("IsCallCenterInform", typeof(bool));
    
            var isConfirmParameter = isConfirm.HasValue ?
                new ObjectParameter("IsConfirm", isConfirm) :
                new ObjectParameter("IsConfirm", typeof(bool));
    
            var isContactByPhoneParameter = isContactByPhone.HasValue ?
                new ObjectParameter("IsContactByPhone", isContactByPhone) :
                new ObjectParameter("IsContactByPhone", typeof(bool));
    
            var isContactByFaceToFaceParameter = isContactByFaceToFace.HasValue ?
                new ObjectParameter("IsContactByFaceToFace", isContactByFaceToFace) :
                new ObjectParameter("IsContactByFaceToFace", typeof(bool));
    
            var isResultPassParameter = isResultPass.HasValue ?
                new ObjectParameter("IsResultPass", isResultPass) :
                new ObjectParameter("IsResultPass", typeof(bool));
    
            var denyHealthParameter = denyHealth.HasValue ?
                new ObjectParameter("DenyHealth", denyHealth) :
                new ObjectParameter("DenyHealth", typeof(bool));
    
            var denyOccupationParameter = denyOccupation.HasValue ?
                new ObjectParameter("DenyOccupation", denyOccupation) :
                new ObjectParameter("DenyOccupation", typeof(bool));
    
            var denyCantPayParameter = denyCantPay.HasValue ?
                new ObjectParameter("DenyCantPay", denyCantPay) :
                new ObjectParameter("DenyCantPay", typeof(bool));
    
            var denyOtherParameter = denyOther.HasValue ?
                new ObjectParameter("DenyOther", denyOther) :
                new ObjectParameter("DenyOther", typeof(bool));
    
            var denyRemarkParameter = denyRemark != null ?
                new ObjectParameter("DenyRemark", denyRemark) :
                new ObjectParameter("DenyRemark", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            var uWPaymentTypeIdParameter = uWPaymentTypeId.HasValue ?
                new ObjectParameter("UWPaymentTypeId", uWPaymentTypeId) :
                new ObjectParameter("UWPaymentTypeId", typeof(int));
    
            var resultPassStandardParameter = resultPassStandard.HasValue ?
                new ObjectParameter("ResultPassStandard", resultPassStandard) :
                new ObjectParameter("ResultPassStandard", typeof(bool));
    
            var resultPassConditionParameter = resultPassCondition.HasValue ?
                new ObjectParameter("ResultPassCondition", resultPassCondition) :
                new ObjectParameter("ResultPassCondition", typeof(bool));
    
            var resultPassConditionRemarkParameter = resultPassConditionRemark != null ?
                new ObjectParameter("ResultPassConditionRemark", resultPassConditionRemark) :
                new ObjectParameter("ResultPassConditionRemark", typeof(string));
    
            var resultPassIsSpecifyParameter = resultPassIsSpecify.HasValue ?
                new ObjectParameter("ResultPassIsSpecify", resultPassIsSpecify) :
                new ObjectParameter("ResultPassIsSpecify", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PHQueueResultV2_Update_Result>("usp_PHQueueResultV2_Update", pHQueueIdParameter, queueTypeIdParameter, pHQueueStatusIdParameter, userIdParameter, callToCustomerParameter, callToPayerParameter, callStatusIdParameter, isFoundCustomerParameter, underwriteBranchResultParameter, isBankAccountAllowParameter, bankAccountAllowRemarkParameter, isBranchInformParameter, isCallCenterInformParameter, isConfirmParameter, isContactByPhoneParameter, isContactByFaceToFaceParameter, isResultPassParameter, denyHealthParameter, denyOccupationParameter, denyCantPayParameter, denyOtherParameter, denyRemarkParameter, remarkParameter, uWPaymentTypeIdParameter, resultPassStandardParameter, resultPassConditionParameter, resultPassConditionRemarkParameter, resultPassIsSpecifyParameter);
        }
    
        public virtual ObjectResult<usp_CMApproveByPHQueueId_Update_Result> usp_CMApproveByPHQueueId_Update(Nullable<int> pHQueueId, Nullable<bool> cMIsApprove, Nullable<bool> cMIsApprovePassCondition, Nullable<int> cMUserId, string cMRemark)
        {
            var pHQueueIdParameter = pHQueueId.HasValue ?
                new ObjectParameter("PHQueueId", pHQueueId) :
                new ObjectParameter("PHQueueId", typeof(int));
    
            var cMIsApproveParameter = cMIsApprove.HasValue ?
                new ObjectParameter("CMIsApprove", cMIsApprove) :
                new ObjectParameter("CMIsApprove", typeof(bool));
    
            var cMIsApprovePassConditionParameter = cMIsApprovePassCondition.HasValue ?
                new ObjectParameter("CMIsApprovePassCondition", cMIsApprovePassCondition) :
                new ObjectParameter("CMIsApprovePassCondition", typeof(bool));
    
            var cMUserIdParameter = cMUserId.HasValue ?
                new ObjectParameter("CMUserId", cMUserId) :
                new ObjectParameter("CMUserId", typeof(int));
    
            var cMRemarkParameter = cMRemark != null ?
                new ObjectParameter("CMRemark", cMRemark) :
                new ObjectParameter("CMRemark", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CMApproveByPHQueueId_Update_Result>("usp_CMApproveByPHQueueId_Update", pHQueueIdParameter, cMIsApproveParameter, cMIsApprovePassConditionParameter, cMUserIdParameter, cMRemarkParameter);
        }
    
        public virtual ObjectResult<usp_PHQueueConsult_Insert_Result> usp_PHQueueConsult_Insert(Nullable<int> pHQueueId, string pHQueueConsultDetail, string requesterTelephone, Nullable<bool> isAdvisor, Nullable<int> userId)
        {
            var pHQueueIdParameter = pHQueueId.HasValue ?
                new ObjectParameter("PHQueueId", pHQueueId) :
                new ObjectParameter("PHQueueId", typeof(int));
    
            var pHQueueConsultDetailParameter = pHQueueConsultDetail != null ?
                new ObjectParameter("PHQueueConsultDetail", pHQueueConsultDetail) :
                new ObjectParameter("PHQueueConsultDetail", typeof(string));
    
            var requesterTelephoneParameter = requesterTelephone != null ?
                new ObjectParameter("RequesterTelephone", requesterTelephone) :
                new ObjectParameter("RequesterTelephone", typeof(string));
    
            var isAdvisorParameter = isAdvisor.HasValue ?
                new ObjectParameter("IsAdvisor", isAdvisor) :
                new ObjectParameter("IsAdvisor", typeof(bool));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PHQueueConsult_Insert_Result>("usp_PHQueueConsult_Insert", pHQueueIdParameter, pHQueueConsultDetailParameter, requesterTelephoneParameter, isAdvisorParameter, userIdParameter);
        }
    
        public virtual ObjectResult<usp_PHQueueConsult_Select_Result> usp_PHQueueConsult_Select(string criteria, Nullable<int> pageStart, Nullable<int> pageSize, string sortField, string orderType)
        {
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            var pageStartParameter = pageStart.HasValue ?
                new ObjectParameter("PageStart", pageStart) :
                new ObjectParameter("PageStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PHQueueConsult_Select_Result>("usp_PHQueueConsult_Select", criteriaParameter, pageStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter);
        }
    
        public virtual ObjectResult<usp_PHQueueConsultByPHQueueId_Select_Result> usp_PHQueueConsultByPHQueueId_Select(Nullable<int> pHQueueId, string criteria, Nullable<int> pageStart, Nullable<int> pageSize, string sortField, string orderType)
        {
            var pHQueueIdParameter = pHQueueId.HasValue ?
                new ObjectParameter("PHQueueId", pHQueueId) :
                new ObjectParameter("PHQueueId", typeof(int));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            var pageStartParameter = pageStart.HasValue ?
                new ObjectParameter("PageStart", pageStart) :
                new ObjectParameter("PageStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PHQueueConsultByPHQueueId_Select_Result>("usp_PHQueueConsultByPHQueueId_Select", pHQueueIdParameter, criteriaParameter, pageStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter);
        }
    
        public virtual ObjectResult<usp_StudyAreaCMUserConfig_Select_Result> usp_StudyAreaCMUserConfig_Select(string criteria, Nullable<int> pageStart, Nullable<int> pageSize, string sortField, string orderType)
        {
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            var pageStartParameter = pageStart.HasValue ?
                new ObjectParameter("PageStart", pageStart) :
                new ObjectParameter("PageStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_StudyAreaCMUserConfig_Select_Result>("usp_StudyAreaCMUserConfig_Select", criteriaParameter, pageStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter);
        }
    
        public virtual ObjectResult<usp_StudyAreaCMUserConfigByStudyAreaUserConfigId_Select_Result> usp_StudyAreaCMUserConfigByStudyAreaUserConfigId_Select(Nullable<int> studyAreaUserConfigId)
        {
            var studyAreaUserConfigIdParameter = studyAreaUserConfigId.HasValue ?
                new ObjectParameter("StudyAreaUserConfigId", studyAreaUserConfigId) :
                new ObjectParameter("StudyAreaUserConfigId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_StudyAreaCMUserConfigByStudyAreaUserConfigId_Select_Result>("usp_StudyAreaCMUserConfigByStudyAreaUserConfigId_Select", studyAreaUserConfigIdParameter);
        }
    
        public virtual ObjectResult<string> usp_StudyAreaCMUserConfigUpdateByStudyAreaUserConfigId_Update(Nullable<int> studyAreaUserConfigId, Nullable<int> cMUserId)
        {
            var studyAreaUserConfigIdParameter = studyAreaUserConfigId.HasValue ?
                new ObjectParameter("StudyAreaUserConfigId", studyAreaUserConfigId) :
                new ObjectParameter("StudyAreaUserConfigId", typeof(int));
    
            var cMUserIdParameter = cMUserId.HasValue ?
                new ObjectParameter("CMUserId", cMUserId) :
                new ObjectParameter("CMUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_StudyAreaCMUserConfigUpdateByStudyAreaUserConfigId_Update", studyAreaUserConfigIdParameter, cMUserIdParameter);
        }
    
        public virtual int usp_PHQueueCMConsiderLog_Insert(Nullable<int> pHQueueId, Nullable<bool> cMIsApprove, Nullable<bool> cMIsApprovePassCondition, Nullable<int> cMIApproveByUserId, string cMRemark)
        {
            var pHQueueIdParameter = pHQueueId.HasValue ?
                new ObjectParameter("PHQueueId", pHQueueId) :
                new ObjectParameter("PHQueueId", typeof(int));
    
            var cMIsApproveParameter = cMIsApprove.HasValue ?
                new ObjectParameter("CMIsApprove", cMIsApprove) :
                new ObjectParameter("CMIsApprove", typeof(bool));
    
            var cMIsApprovePassConditionParameter = cMIsApprovePassCondition.HasValue ?
                new ObjectParameter("CMIsApprovePassCondition", cMIsApprovePassCondition) :
                new ObjectParameter("CMIsApprovePassCondition", typeof(bool));
    
            var cMIApproveByUserIdParameter = cMIApproveByUserId.HasValue ?
                new ObjectParameter("CMIApproveByUserId", cMIApproveByUserId) :
                new ObjectParameter("CMIApproveByUserId", typeof(int));
    
            var cMRemarkParameter = cMRemark != null ?
                new ObjectParameter("CMRemark", cMRemark) :
                new ObjectParameter("CMRemark", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PHQueueCMConsiderLog_Insert", pHQueueIdParameter, cMIsApproveParameter, cMIsApprovePassConditionParameter, cMIApproveByUserIdParameter, cMRemarkParameter);
        }
    
        public virtual ObjectResult<usp_DataCenter_PersonUserByUserId_Select_Result> usp_DataCenter_PersonUserByUserId_Select(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DataCenter_PersonUserByUserId_Select_Result>("usp_DataCenter_PersonUserByUserId_Select", userIdParameter);
        }
    
        public virtual ObjectResult<usp_PHQueueStudyAreaStatusCount_Select_Result> usp_PHQueueStudyAreaStatusCount_Select(Nullable<int> durationDays, Nullable<System.DateTime> period, string criteria, Nullable<int> pageStart, Nullable<int> pageSize, string sortField, string orderType)
        {
            var durationDaysParameter = durationDays.HasValue ?
                new ObjectParameter("DurationDays", durationDays) :
                new ObjectParameter("DurationDays", typeof(int));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            var pageStartParameter = pageStart.HasValue ?
                new ObjectParameter("PageStart", pageStart) :
                new ObjectParameter("PageStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PHQueueStudyAreaStatusCount_Select_Result>("usp_PHQueueStudyAreaStatusCount_Select", durationDaysParameter, periodParameter, criteriaParameter, pageStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter);
        }
    
        public virtual ObjectResult<usp_PHQueueCMConsiderCountAll_Select_Result> usp_PHQueueCMConsiderCountAll_Select(Nullable<int> durationDays, Nullable<System.DateTime> period)
        {
            var durationDaysParameter = durationDays.HasValue ?
                new ObjectParameter("DurationDays", durationDays) :
                new ObjectParameter("DurationDays", typeof(int));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PHQueueCMConsiderCountAll_Select_Result>("usp_PHQueueCMConsiderCountAll_Select", durationDaysParameter, periodParameter);
        }
    
        public virtual ObjectResult<usp_CMPHQueueStudyAreaStatusCount_Select_Result> usp_CMPHQueueStudyAreaStatusCount_Select(Nullable<int> durationDays, Nullable<System.DateTime> period, string criteria, Nullable<int> pageStart, Nullable<int> pageSize, string sortField, string orderType)
        {
            var durationDaysParameter = durationDays.HasValue ?
                new ObjectParameter("DurationDays", durationDays) :
                new ObjectParameter("DurationDays", typeof(int));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            var pageStartParameter = pageStart.HasValue ?
                new ObjectParameter("PageStart", pageStart) :
                new ObjectParameter("PageStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CMPHQueueStudyAreaStatusCount_Select_Result>("usp_CMPHQueueStudyAreaStatusCount_Select", durationDaysParameter, periodParameter, criteriaParameter, pageStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter);
        }
    
        public virtual ObjectResult<usp_DRPHQueueStudyAreaStatusCount_Select_Result> usp_DRPHQueueStudyAreaStatusCount_Select(Nullable<int> durationDays, Nullable<System.DateTime> period, string criteria, Nullable<int> pageStart, Nullable<int> pageSize, string sortField, string orderType)
        {
            var durationDaysParameter = durationDays.HasValue ?
                new ObjectParameter("DurationDays", durationDays) :
                new ObjectParameter("DurationDays", typeof(int));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            var pageStartParameter = pageStart.HasValue ?
                new ObjectParameter("PageStart", pageStart) :
                new ObjectParameter("PageStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DRPHQueueStudyAreaStatusCount_Select_Result>("usp_DRPHQueueStudyAreaStatusCount_Select", durationDaysParameter, periodParameter, criteriaParameter, pageStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter);
        }
    
        public virtual ObjectResult<usp_CMPHQueueResult_Select_Result> usp_CMPHQueueResult_Select(Nullable<int> pHQueueId)
        {
            var pHQueueIdParameter = pHQueueId.HasValue ?
                new ObjectParameter("PHQueueId", pHQueueId) :
                new ObjectParameter("PHQueueId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CMPHQueueResult_Select_Result>("usp_CMPHQueueResult_Select", pHQueueIdParameter);
        }
    
        public virtual ObjectResult<usp_CMPHQueueResult_Update_Result> usp_CMPHQueueResult_Update(Nullable<int> pHQueueId, Nullable<bool> cMResultPassCondition, Nullable<bool> cMResultPassIsSpecify, string cMResultPassConditionRemark, Nullable<bool> cMDenyHealth, Nullable<bool> cMDenyOccupation, Nullable<bool> cMDenyCantPay, Nullable<bool> cMDenyOther, string cMDenyRemark, Nullable<int> cMUserId)
        {
            var pHQueueIdParameter = pHQueueId.HasValue ?
                new ObjectParameter("PHQueueId", pHQueueId) :
                new ObjectParameter("PHQueueId", typeof(int));
    
            var cMResultPassConditionParameter = cMResultPassCondition.HasValue ?
                new ObjectParameter("CMResultPassCondition", cMResultPassCondition) :
                new ObjectParameter("CMResultPassCondition", typeof(bool));
    
            var cMResultPassIsSpecifyParameter = cMResultPassIsSpecify.HasValue ?
                new ObjectParameter("CMResultPassIsSpecify", cMResultPassIsSpecify) :
                new ObjectParameter("CMResultPassIsSpecify", typeof(bool));
    
            var cMResultPassConditionRemarkParameter = cMResultPassConditionRemark != null ?
                new ObjectParameter("CMResultPassConditionRemark", cMResultPassConditionRemark) :
                new ObjectParameter("CMResultPassConditionRemark", typeof(string));
    
            var cMDenyHealthParameter = cMDenyHealth.HasValue ?
                new ObjectParameter("CMDenyHealth", cMDenyHealth) :
                new ObjectParameter("CMDenyHealth", typeof(bool));
    
            var cMDenyOccupationParameter = cMDenyOccupation.HasValue ?
                new ObjectParameter("CMDenyOccupation", cMDenyOccupation) :
                new ObjectParameter("CMDenyOccupation", typeof(bool));
    
            var cMDenyCantPayParameter = cMDenyCantPay.HasValue ?
                new ObjectParameter("CMDenyCantPay", cMDenyCantPay) :
                new ObjectParameter("CMDenyCantPay", typeof(bool));
    
            var cMDenyOtherParameter = cMDenyOther.HasValue ?
                new ObjectParameter("CMDenyOther", cMDenyOther) :
                new ObjectParameter("CMDenyOther", typeof(bool));
    
            var cMDenyRemarkParameter = cMDenyRemark != null ?
                new ObjectParameter("CMDenyRemark", cMDenyRemark) :
                new ObjectParameter("CMDenyRemark", typeof(string));
    
            var cMUserIdParameter = cMUserId.HasValue ?
                new ObjectParameter("CMUserId", cMUserId) :
                new ObjectParameter("CMUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CMPHQueueResult_Update_Result>("usp_CMPHQueueResult_Update", pHQueueIdParameter, cMResultPassConditionParameter, cMResultPassIsSpecifyParameter, cMResultPassConditionRemarkParameter, cMDenyHealthParameter, cMDenyOccupationParameter, cMDenyCantPayParameter, cMDenyOtherParameter, cMDenyRemarkParameter, cMUserIdParameter);
        }
    
        public virtual ObjectResult<usp_PHQueueDetailExcel_Select_Result1> usp_PHQueueDetailExcel_Select(Nullable<int> durationDays, Nullable<System.DateTime> period)
        {
            var durationDaysParameter = durationDays.HasValue ?
                new ObjectParameter("DurationDays", durationDays) :
                new ObjectParameter("DurationDays", typeof(int));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PHQueueDetailExcel_Select_Result1>("usp_PHQueueDetailExcel_Select", durationDaysParameter, periodParameter);
        }
    
        public virtual ObjectResult<usp_CMPHQueueStudyAreaStatusCountV2_Select_Result> usp_CMPHQueueStudyAreaStatusCountV2_Select(Nullable<int> durationDays, Nullable<System.DateTime> period, string criteria, Nullable<int> pageStart, Nullable<int> pageSize, string sortField, string orderType)
        {
            var durationDaysParameter = durationDays.HasValue ?
                new ObjectParameter("DurationDays", durationDays) :
                new ObjectParameter("DurationDays", typeof(int));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            var pageStartParameter = pageStart.HasValue ?
                new ObjectParameter("PageStart", pageStart) :
                new ObjectParameter("PageStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CMPHQueueStudyAreaStatusCountV2_Select_Result>("usp_CMPHQueueStudyAreaStatusCountV2_Select", durationDaysParameter, periodParameter, criteriaParameter, pageStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter);
        }
    
        public virtual ObjectResult<usp_PHQueueCMResultCountAll_Select_Result> usp_PHQueueCMResultCountAll_Select(Nullable<int> durationDays, Nullable<System.DateTime> period)
        {
            var durationDaysParameter = durationDays.HasValue ?
                new ObjectParameter("DurationDays", durationDays) :
                new ObjectParameter("DurationDays", typeof(int));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PHQueueCMResultCountAll_Select_Result>("usp_PHQueueCMResultCountAll_Select", durationDaysParameter, periodParameter);
        }
    }
}
