//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RoadsideAssistance.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class RoadsideAssistanceEntities : DbContext
    {
        public RoadsideAssistanceEntities()
            : base("name=RoadsideAssistanceEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<usp_Member_Select_Result> usp_Member_Select(Nullable<int> memberId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var memberIdParameter = memberId.HasValue ?
                new ObjectParameter("MemberId", memberId) :
                new ObjectParameter("MemberId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Member_Select_Result>("usp_Member_Select", memberIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_MemberSearch_Select_Result> usp_MemberSearch_Select(string firstName, string lastName, string cardDetail, Nullable<int> cardDetailTypeId, string buildingName, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var cardDetailParameter = cardDetail != null ?
                new ObjectParameter("CardDetail", cardDetail) :
                new ObjectParameter("CardDetail", typeof(string));
    
            var cardDetailTypeIdParameter = cardDetailTypeId.HasValue ?
                new ObjectParameter("CardDetailTypeId", cardDetailTypeId) :
                new ObjectParameter("CardDetailTypeId", typeof(int));
    
            var buildingNameParameter = buildingName != null ?
                new ObjectParameter("BuildingName", buildingName) :
                new ObjectParameter("BuildingName", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MemberSearch_Select_Result>("usp_MemberSearch_Select", firstNameParameter, lastNameParameter, cardDetailParameter, cardDetailTypeIdParameter, buildingNameParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_RoadsideAssistance_Select_Result> usp_RoadsideAssistance_Select(Nullable<int> roadsideId, Nullable<int> roadsideStatusId, Nullable<int> memberId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var roadsideIdParameter = roadsideId.HasValue ?
                new ObjectParameter("RoadsideId", roadsideId) :
                new ObjectParameter("RoadsideId", typeof(int));
    
            var roadsideStatusIdParameter = roadsideStatusId.HasValue ?
                new ObjectParameter("RoadsideStatusId", roadsideStatusId) :
                new ObjectParameter("RoadsideStatusId", typeof(int));
    
            var memberIdParameter = memberId.HasValue ?
                new ObjectParameter("MemberId", memberId) :
                new ObjectParameter("MemberId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RoadsideAssistance_Select_Result>("usp_RoadsideAssistance_Select", roadsideIdParameter, roadsideStatusIdParameter, memberIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_PayType_Select_Result> usp_PayType_Select(Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PayType_Select_Result>("usp_PayType_Select", indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_RoadsideAssistanceServiceType_Select_Result> usp_RoadsideAssistanceServiceType_Select(Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RoadsideAssistanceServiceType_Select_Result>("usp_RoadsideAssistanceServiceType_Select", indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_Province_Select_Result> usp_Province_Select(Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Province_Select_Result>("usp_Province_Select", indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_RoadsideAssistance_Update_Result> usp_RoadsideAssistance_Update(Nullable<int> roadsideId, string contactNumber, string vehicleRegistrationDetail, string vehicleRegistrationNumber, Nullable<int> vehicleRegistrationProvinceId, string locationDetail, string remark, Nullable<int> roadsideAssistanceSeviceTypeId, Nullable<int> roadsideAssistanceStatusId, string referanceCode, string referanceName, Nullable<decimal> totalAmount, Nullable<decimal> customerAmount, Nullable<decimal> employeePointAmount, Nullable<int> createdByUserId, Nullable<System.DateTime> referanceClosedDate, Nullable<bool> isService, string cancelServiceRemark, string cancelRemark, Nullable<System.DateTime> p_DateHappen, Nullable<int> serviceCancelCauseId, string otherServiceCancelRemark)
        {
            var roadsideIdParameter = roadsideId.HasValue ?
                new ObjectParameter("RoadsideId", roadsideId) :
                new ObjectParameter("RoadsideId", typeof(int));
    
            var contactNumberParameter = contactNumber != null ?
                new ObjectParameter("ContactNumber", contactNumber) :
                new ObjectParameter("ContactNumber", typeof(string));
    
            var vehicleRegistrationDetailParameter = vehicleRegistrationDetail != null ?
                new ObjectParameter("VehicleRegistrationDetail", vehicleRegistrationDetail) :
                new ObjectParameter("VehicleRegistrationDetail", typeof(string));
    
            var vehicleRegistrationNumberParameter = vehicleRegistrationNumber != null ?
                new ObjectParameter("VehicleRegistrationNumber", vehicleRegistrationNumber) :
                new ObjectParameter("VehicleRegistrationNumber", typeof(string));
    
            var vehicleRegistrationProvinceIdParameter = vehicleRegistrationProvinceId.HasValue ?
                new ObjectParameter("VehicleRegistrationProvinceId", vehicleRegistrationProvinceId) :
                new ObjectParameter("VehicleRegistrationProvinceId", typeof(int));
    
            var locationDetailParameter = locationDetail != null ?
                new ObjectParameter("LocationDetail", locationDetail) :
                new ObjectParameter("LocationDetail", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            var roadsideAssistanceSeviceTypeIdParameter = roadsideAssistanceSeviceTypeId.HasValue ?
                new ObjectParameter("RoadsideAssistanceSeviceTypeId", roadsideAssistanceSeviceTypeId) :
                new ObjectParameter("RoadsideAssistanceSeviceTypeId", typeof(int));
    
            var roadsideAssistanceStatusIdParameter = roadsideAssistanceStatusId.HasValue ?
                new ObjectParameter("RoadsideAssistanceStatusId", roadsideAssistanceStatusId) :
                new ObjectParameter("RoadsideAssistanceStatusId", typeof(int));
    
            var referanceCodeParameter = referanceCode != null ?
                new ObjectParameter("ReferanceCode", referanceCode) :
                new ObjectParameter("ReferanceCode", typeof(string));
    
            var referanceNameParameter = referanceName != null ?
                new ObjectParameter("ReferanceName", referanceName) :
                new ObjectParameter("ReferanceName", typeof(string));
    
            var totalAmountParameter = totalAmount.HasValue ?
                new ObjectParameter("TotalAmount", totalAmount) :
                new ObjectParameter("TotalAmount", typeof(decimal));
    
            var customerAmountParameter = customerAmount.HasValue ?
                new ObjectParameter("CustomerAmount", customerAmount) :
                new ObjectParameter("CustomerAmount", typeof(decimal));
    
            var employeePointAmountParameter = employeePointAmount.HasValue ?
                new ObjectParameter("EmployeePointAmount", employeePointAmount) :
                new ObjectParameter("EmployeePointAmount", typeof(decimal));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            var referanceClosedDateParameter = referanceClosedDate.HasValue ?
                new ObjectParameter("ReferanceClosedDate", referanceClosedDate) :
                new ObjectParameter("ReferanceClosedDate", typeof(System.DateTime));
    
            var isServiceParameter = isService.HasValue ?
                new ObjectParameter("IsService", isService) :
                new ObjectParameter("IsService", typeof(bool));
    
            var cancelServiceRemarkParameter = cancelServiceRemark != null ?
                new ObjectParameter("CancelServiceRemark", cancelServiceRemark) :
                new ObjectParameter("CancelServiceRemark", typeof(string));
    
            var cancelRemarkParameter = cancelRemark != null ?
                new ObjectParameter("CancelRemark", cancelRemark) :
                new ObjectParameter("CancelRemark", typeof(string));
    
            var p_DateHappenParameter = p_DateHappen.HasValue ?
                new ObjectParameter("P_DateHappen", p_DateHappen) :
                new ObjectParameter("P_DateHappen", typeof(System.DateTime));
    
            var serviceCancelCauseIdParameter = serviceCancelCauseId.HasValue ?
                new ObjectParameter("ServiceCancelCauseId", serviceCancelCauseId) :
                new ObjectParameter("ServiceCancelCauseId", typeof(int));
    
            var otherServiceCancelRemarkParameter = otherServiceCancelRemark != null ?
                new ObjectParameter("OtherServiceCancelRemark", otherServiceCancelRemark) :
                new ObjectParameter("OtherServiceCancelRemark", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RoadsideAssistance_Update_Result>("usp_RoadsideAssistance_Update", roadsideIdParameter, contactNumberParameter, vehicleRegistrationDetailParameter, vehicleRegistrationNumberParameter, vehicleRegistrationProvinceIdParameter, locationDetailParameter, remarkParameter, roadsideAssistanceSeviceTypeIdParameter, roadsideAssistanceStatusIdParameter, referanceCodeParameter, referanceNameParameter, totalAmountParameter, customerAmountParameter, employeePointAmountParameter, createdByUserIdParameter, referanceClosedDateParameter, isServiceParameter, cancelServiceRemarkParameter, cancelRemarkParameter, p_DateHappenParameter, serviceCancelCauseIdParameter, otherServiceCancelRemarkParameter);
        }
    
        public virtual ObjectResult<usp_StagingSourceDirect_Insert_Result> usp_StagingSourceDirect_Insert(Nullable<int> sourceTypeId, string referenceCode, Nullable<int> cardDetailTypeId, string cardDetail, Nullable<int> titleId, string firstName, string lastName, string mobileNumber, string buildingName, Nullable<System.DateTime> startCoverDate, Nullable<System.DateTime> endCoverDate, Nullable<int> importByUserId)
        {
            var sourceTypeIdParameter = sourceTypeId.HasValue ?
                new ObjectParameter("SourceTypeId", sourceTypeId) :
                new ObjectParameter("SourceTypeId", typeof(int));
    
            var referenceCodeParameter = referenceCode != null ?
                new ObjectParameter("ReferenceCode", referenceCode) :
                new ObjectParameter("ReferenceCode", typeof(string));
    
            var cardDetailTypeIdParameter = cardDetailTypeId.HasValue ?
                new ObjectParameter("CardDetailTypeId", cardDetailTypeId) :
                new ObjectParameter("CardDetailTypeId", typeof(int));
    
            var cardDetailParameter = cardDetail != null ?
                new ObjectParameter("CardDetail", cardDetail) :
                new ObjectParameter("CardDetail", typeof(string));
    
            var titleIdParameter = titleId.HasValue ?
                new ObjectParameter("TitleId", titleId) :
                new ObjectParameter("TitleId", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var buildingNameParameter = buildingName != null ?
                new ObjectParameter("BuildingName", buildingName) :
                new ObjectParameter("BuildingName", typeof(string));
    
            var startCoverDateParameter = startCoverDate.HasValue ?
                new ObjectParameter("StartCoverDate", startCoverDate) :
                new ObjectParameter("StartCoverDate", typeof(System.DateTime));
    
            var endCoverDateParameter = endCoverDate.HasValue ?
                new ObjectParameter("EndCoverDate", endCoverDate) :
                new ObjectParameter("EndCoverDate", typeof(System.DateTime));
    
            var importByUserIdParameter = importByUserId.HasValue ?
                new ObjectParameter("ImportByUserId", importByUserId) :
                new ObjectParameter("ImportByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_StagingSourceDirect_Insert_Result>("usp_StagingSourceDirect_Insert", sourceTypeIdParameter, referenceCodeParameter, cardDetailTypeIdParameter, cardDetailParameter, titleIdParameter, firstNameParameter, lastNameParameter, mobileNumberParameter, buildingNameParameter, startCoverDateParameter, endCoverDateParameter, importByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_PersonCardType_Select_Result> usp_PersonCardType_Select(Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonCardType_Select_Result>("usp_PersonCardType_Select", indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_Title_Select_Result> usp_Title_Select(Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Title_Select_Result>("usp_Title_Select", indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_SourceType_Select_Result1> usp_SourceType_Select(string sourceTypelistId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var sourceTypelistIdParameter = sourceTypelistId != null ?
                new ObjectParameter("SourceTypelistId", sourceTypelistId) :
                new ObjectParameter("SourceTypelistId", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SourceType_Select_Result1>("usp_SourceType_Select", sourceTypelistIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual int usp_GenerateCode(string transactionCodeControlTypeDetail, Nullable<int> runningLenght, ObjectParameter result)
        {
            var transactionCodeControlTypeDetailParameter = transactionCodeControlTypeDetail != null ?
                new ObjectParameter("TransactionCodeControlTypeDetail", transactionCodeControlTypeDetail) :
                new ObjectParameter("TransactionCodeControlTypeDetail", typeof(string));
    
            var runningLenghtParameter = runningLenght.HasValue ?
                new ObjectParameter("RunningLenght", runningLenght) :
                new ObjectParameter("RunningLenght", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GenerateCode", transactionCodeControlTypeDetailParameter, runningLenghtParameter, result);
        }
    
        public virtual ObjectResult<usp_StagingSourceTempDetail_Insert_Result> usp_StagingSourceTempDetail_Insert(string tmpCode, Nullable<int> sourceTypeId, string referenceCode, string cardDetailType, string cardDetail, string title, string firstName, string lastName, string mobileNumber, string buildingName, string paymentType, Nullable<System.DateTime> startCoverDate, Nullable<System.DateTime> endCoverDate, Nullable<int> importByUserId, string action)
        {
            var tmpCodeParameter = tmpCode != null ?
                new ObjectParameter("TmpCode", tmpCode) :
                new ObjectParameter("TmpCode", typeof(string));
    
            var sourceTypeIdParameter = sourceTypeId.HasValue ?
                new ObjectParameter("SourceTypeId", sourceTypeId) :
                new ObjectParameter("SourceTypeId", typeof(int));
    
            var referenceCodeParameter = referenceCode != null ?
                new ObjectParameter("ReferenceCode", referenceCode) :
                new ObjectParameter("ReferenceCode", typeof(string));
    
            var cardDetailTypeParameter = cardDetailType != null ?
                new ObjectParameter("CardDetailType", cardDetailType) :
                new ObjectParameter("CardDetailType", typeof(string));
    
            var cardDetailParameter = cardDetail != null ?
                new ObjectParameter("CardDetail", cardDetail) :
                new ObjectParameter("CardDetail", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var buildingNameParameter = buildingName != null ?
                new ObjectParameter("BuildingName", buildingName) :
                new ObjectParameter("BuildingName", typeof(string));
    
            var paymentTypeParameter = paymentType != null ?
                new ObjectParameter("PaymentType", paymentType) :
                new ObjectParameter("PaymentType", typeof(string));
    
            var startCoverDateParameter = startCoverDate.HasValue ?
                new ObjectParameter("StartCoverDate", startCoverDate) :
                new ObjectParameter("StartCoverDate", typeof(System.DateTime));
    
            var endCoverDateParameter = endCoverDate.HasValue ?
                new ObjectParameter("EndCoverDate", endCoverDate) :
                new ObjectParameter("EndCoverDate", typeof(System.DateTime));
    
            var importByUserIdParameter = importByUserId.HasValue ?
                new ObjectParameter("ImportByUserId", importByUserId) :
                new ObjectParameter("ImportByUserId", typeof(int));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_StagingSourceTempDetail_Insert_Result>("usp_StagingSourceTempDetail_Insert", tmpCodeParameter, sourceTypeIdParameter, referenceCodeParameter, cardDetailTypeParameter, cardDetailParameter, titleParameter, firstNameParameter, lastNameParameter, mobileNumberParameter, buildingNameParameter, paymentTypeParameter, startCoverDateParameter, endCoverDateParameter, importByUserIdParameter, actionParameter);
        }
    
        public virtual ObjectResult<usp_StagingSourceTempDetail_Preview_Select_Result> usp_StagingSourceTempDetail_Preview_Select(string tmpCode, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var tmpCodeParameter = tmpCode != null ?
                new ObjectParameter("TmpCode", tmpCode) :
                new ObjectParameter("TmpCode", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_StagingSourceTempDetail_Preview_Select_Result>("usp_StagingSourceTempDetail_Preview_Select", tmpCodeParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual int usp_StagingSourceTempDetail_Validate_V2(string tmpCode)
        {
            var tmpCodeParameter = tmpCode != null ?
                new ObjectParameter("TmpCode", tmpCode) :
                new ObjectParameter("TmpCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_StagingSourceTempDetail_Validate_V2", tmpCodeParameter);
        }
    
        public virtual ObjectResult<usp_ReportRoadsideAssistance_Select_Result> usp_ReportRoadsideAssistance_Select(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string roadStatusIdList)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var roadStatusIdListParameter = roadStatusIdList != null ?
                new ObjectParameter("roadStatusIdList", roadStatusIdList) :
                new ObjectParameter("roadStatusIdList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReportRoadsideAssistance_Select_Result>("usp_ReportRoadsideAssistance_Select", fromDateParameter, toDateParameter, roadStatusIdListParameter);
        }
    
        public virtual ObjectResult<usp_StagingSourceTempDetail_Save_Result> usp_StagingSourceTempDetail_Save(string tmpCode, Nullable<int> sourceTypeId, Nullable<int> createdByUserId)
        {
            var tmpCodeParameter = tmpCode != null ?
                new ObjectParameter("TmpCode", tmpCode) :
                new ObjectParameter("TmpCode", typeof(string));
    
            var sourceTypeIdParameter = sourceTypeId.HasValue ?
                new ObjectParameter("SourceTypeId", sourceTypeId) :
                new ObjectParameter("SourceTypeId", typeof(int));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_StagingSourceTempDetail_Save_Result>("usp_StagingSourceTempDetail_Save", tmpCodeParameter, sourceTypeIdParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_RoadsideAssistance_Insert_Result> usp_RoadsideAssistance_Insert(Nullable<int> memberId, string contactNumber, string vehicleRegistrationDetail, string vehicleRegistrationNumber, Nullable<int> vehicleRegistrationProvinceId, string locationDetail, string remark, Nullable<int> roadsideAssistanceSeviceTypeId, Nullable<int> payTypeId, Nullable<System.DateTime> p_DateHappent, Nullable<decimal> totalAmount, Nullable<decimal> customerAmount, Nullable<decimal> employeePointAmount, Nullable<int> createdByUserId, Nullable<int> serviceCancelCauseId, string otherServiceCancelRemark)
        {
            var memberIdParameter = memberId.HasValue ?
                new ObjectParameter("MemberId", memberId) :
                new ObjectParameter("MemberId", typeof(int));
    
            var contactNumberParameter = contactNumber != null ?
                new ObjectParameter("ContactNumber", contactNumber) :
                new ObjectParameter("ContactNumber", typeof(string));
    
            var vehicleRegistrationDetailParameter = vehicleRegistrationDetail != null ?
                new ObjectParameter("VehicleRegistrationDetail", vehicleRegistrationDetail) :
                new ObjectParameter("VehicleRegistrationDetail", typeof(string));
    
            var vehicleRegistrationNumberParameter = vehicleRegistrationNumber != null ?
                new ObjectParameter("VehicleRegistrationNumber", vehicleRegistrationNumber) :
                new ObjectParameter("VehicleRegistrationNumber", typeof(string));
    
            var vehicleRegistrationProvinceIdParameter = vehicleRegistrationProvinceId.HasValue ?
                new ObjectParameter("VehicleRegistrationProvinceId", vehicleRegistrationProvinceId) :
                new ObjectParameter("VehicleRegistrationProvinceId", typeof(int));
    
            var locationDetailParameter = locationDetail != null ?
                new ObjectParameter("LocationDetail", locationDetail) :
                new ObjectParameter("LocationDetail", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            var roadsideAssistanceSeviceTypeIdParameter = roadsideAssistanceSeviceTypeId.HasValue ?
                new ObjectParameter("RoadsideAssistanceSeviceTypeId", roadsideAssistanceSeviceTypeId) :
                new ObjectParameter("RoadsideAssistanceSeviceTypeId", typeof(int));
    
            var payTypeIdParameter = payTypeId.HasValue ?
                new ObjectParameter("PayTypeId", payTypeId) :
                new ObjectParameter("PayTypeId", typeof(int));
    
            var p_DateHappentParameter = p_DateHappent.HasValue ?
                new ObjectParameter("P_DateHappent", p_DateHappent) :
                new ObjectParameter("P_DateHappent", typeof(System.DateTime));
    
            var totalAmountParameter = totalAmount.HasValue ?
                new ObjectParameter("TotalAmount", totalAmount) :
                new ObjectParameter("TotalAmount", typeof(decimal));
    
            var customerAmountParameter = customerAmount.HasValue ?
                new ObjectParameter("CustomerAmount", customerAmount) :
                new ObjectParameter("CustomerAmount", typeof(decimal));
    
            var employeePointAmountParameter = employeePointAmount.HasValue ?
                new ObjectParameter("EmployeePointAmount", employeePointAmount) :
                new ObjectParameter("EmployeePointAmount", typeof(decimal));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            var serviceCancelCauseIdParameter = serviceCancelCauseId.HasValue ?
                new ObjectParameter("ServiceCancelCauseId", serviceCancelCauseId) :
                new ObjectParameter("ServiceCancelCauseId", typeof(int));
    
            var otherServiceCancelRemarkParameter = otherServiceCancelRemark != null ?
                new ObjectParameter("OtherServiceCancelRemark", otherServiceCancelRemark) :
                new ObjectParameter("OtherServiceCancelRemark", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RoadsideAssistance_Insert_Result>("usp_RoadsideAssistance_Insert", memberIdParameter, contactNumberParameter, vehicleRegistrationDetailParameter, vehicleRegistrationNumberParameter, vehicleRegistrationProvinceIdParameter, locationDetailParameter, remarkParameter, roadsideAssistanceSeviceTypeIdParameter, payTypeIdParameter, p_DateHappentParameter, totalAmountParameter, customerAmountParameter, employeePointAmountParameter, createdByUserIdParameter, serviceCancelCauseIdParameter, otherServiceCancelRemarkParameter);
        }
    
        public virtual ObjectResult<usp_EmployeePointLocked_Select_Result> usp_EmployeePointLocked_Select(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_EmployeePointLocked_Select_Result>("usp_EmployeePointLocked_Select", fromDateParameter, toDateParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter);
        }
    
        public virtual ObjectResult<usp_EmployeePointLockedAll_Update_Result> usp_EmployeePointLockedAll_Update(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> createdByUserId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_EmployeePointLockedAll_Update_Result>("usp_EmployeePointLockedAll_Update", fromDateParameter, toDateParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_ServiceCancelCause_Select_Result1> usp_ServiceCancelCause_Select(Nullable<int> serviceCancelCauseId)
        {
            var serviceCancelCauseIdParameter = serviceCancelCauseId.HasValue ?
                new ObjectParameter("ServiceCancelCauseId", serviceCancelCauseId) :
                new ObjectParameter("ServiceCancelCauseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ServiceCancelCause_Select_Result1>("usp_ServiceCancelCause_Select", serviceCancelCauseIdParameter);
        }
    
        public virtual ObjectResult<usp_StagingSourceTempDetailPACancel_Insert_Result> usp_StagingSourceTempDetailPACancel_Insert(string tmpCode, Nullable<int> sourceTypeId, string referenceCode, string cardDetailType, string cardDetail, string title, string firstName, string lastName, string mobileNumber, string buildingName, string paymentType, Nullable<System.DateTime> startCoverDate, Nullable<System.DateTime> endCoverDate, Nullable<int> importByUserId, string action)
        {
            var tmpCodeParameter = tmpCode != null ?
                new ObjectParameter("TmpCode", tmpCode) :
                new ObjectParameter("TmpCode", typeof(string));
    
            var sourceTypeIdParameter = sourceTypeId.HasValue ?
                new ObjectParameter("SourceTypeId", sourceTypeId) :
                new ObjectParameter("SourceTypeId", typeof(int));
    
            var referenceCodeParameter = referenceCode != null ?
                new ObjectParameter("ReferenceCode", referenceCode) :
                new ObjectParameter("ReferenceCode", typeof(string));
    
            var cardDetailTypeParameter = cardDetailType != null ?
                new ObjectParameter("CardDetailType", cardDetailType) :
                new ObjectParameter("CardDetailType", typeof(string));
    
            var cardDetailParameter = cardDetail != null ?
                new ObjectParameter("CardDetail", cardDetail) :
                new ObjectParameter("CardDetail", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var buildingNameParameter = buildingName != null ?
                new ObjectParameter("BuildingName", buildingName) :
                new ObjectParameter("BuildingName", typeof(string));
    
            var paymentTypeParameter = paymentType != null ?
                new ObjectParameter("PaymentType", paymentType) :
                new ObjectParameter("PaymentType", typeof(string));
    
            var startCoverDateParameter = startCoverDate.HasValue ?
                new ObjectParameter("StartCoverDate", startCoverDate) :
                new ObjectParameter("StartCoverDate", typeof(System.DateTime));
    
            var endCoverDateParameter = endCoverDate.HasValue ?
                new ObjectParameter("EndCoverDate", endCoverDate) :
                new ObjectParameter("EndCoverDate", typeof(System.DateTime));
    
            var importByUserIdParameter = importByUserId.HasValue ?
                new ObjectParameter("ImportByUserId", importByUserId) :
                new ObjectParameter("ImportByUserId", typeof(int));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_StagingSourceTempDetailPACancel_Insert_Result>("usp_StagingSourceTempDetailPACancel_Insert", tmpCodeParameter, sourceTypeIdParameter, referenceCodeParameter, cardDetailTypeParameter, cardDetailParameter, titleParameter, firstNameParameter, lastNameParameter, mobileNumberParameter, buildingNameParameter, paymentTypeParameter, startCoverDateParameter, endCoverDateParameter, importByUserIdParameter, actionParameter);
        }
    
        public virtual int usp_GenerateCodePAImport(string transactionCodeControlTypeDetail, Nullable<int> runningLenght, ObjectParameter result)
        {
            var transactionCodeControlTypeDetailParameter = transactionCodeControlTypeDetail != null ?
                new ObjectParameter("TransactionCodeControlTypeDetail", transactionCodeControlTypeDetail) :
                new ObjectParameter("TransactionCodeControlTypeDetail", typeof(string));
    
            var runningLenghtParameter = runningLenght.HasValue ?
                new ObjectParameter("RunningLenght", runningLenght) :
                new ObjectParameter("RunningLenght", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GenerateCodePAImport", transactionCodeControlTypeDetailParameter, runningLenghtParameter, result);
        }
    
        public virtual ObjectResult<usp_ReportImportPADetail_Select_Result> usp_ReportImportPADetail_Select(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, Nullable<int> createdByUserId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReportImportPADetail_Select_Result>("usp_ReportImportPADetail_Select", dateFromParameter, dateToParameter, createdByUserIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ReportImportPAHeader_Select_Result> usp_ReportImportPAHeader_Select(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReportImportPAHeader_Select_Result>("usp_ReportImportPAHeader_Select", dateFromParameter, dateToParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ReportStagingSourceLog_Select_Result> usp_ReportStagingSourceLog_Select(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, Nullable<int> sourceTypeId, string action)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var sourceTypeIdParameter = sourceTypeId.HasValue ?
                new ObjectParameter("SourceTypeId", sourceTypeId) :
                new ObjectParameter("SourceTypeId", typeof(int));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReportStagingSourceLog_Select_Result>("usp_ReportStagingSourceLog_Select", dateFromParameter, dateToParameter, sourceTypeIdParameter, actionParameter);
        }
    }
}
