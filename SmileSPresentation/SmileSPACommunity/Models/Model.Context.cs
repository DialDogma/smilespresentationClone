//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmileSPACommunity.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PACommunityEntities : DbContext
    {
        public PACommunityEntities()
            : base("name=PACommunityEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<usp_ApplicationRound_Select_Result> usp_ApplicationRound_Select(Nullable<int> applicationId, Nullable<int> branchId, string applicationRoundStatusIdList, string applicationRoundPaymentStatusIdList, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var applicationRoundStatusIdListParameter = applicationRoundStatusIdList != null ?
                new ObjectParameter("ApplicationRoundStatusIdList", applicationRoundStatusIdList) :
                new ObjectParameter("ApplicationRoundStatusIdList", typeof(string));
    
            var applicationRoundPaymentStatusIdListParameter = applicationRoundPaymentStatusIdList != null ?
                new ObjectParameter("ApplicationRoundPaymentStatusIdList", applicationRoundPaymentStatusIdList) :
                new ObjectParameter("ApplicationRoundPaymentStatusIdList", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationRound_Select_Result>("usp_ApplicationRound_Select", applicationIdParameter, branchIdParameter, applicationRoundStatusIdListParameter, applicationRoundPaymentStatusIdListParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ProvinceDistrictSubDistrict_Select_Result> usp_ProvinceDistrictSubDistrict_Select(Nullable<int> subDistrictId, Nullable<int> districtId, Nullable<int> provinceId, string zipCode, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var subDistrictIdParameter = subDistrictId.HasValue ?
                new ObjectParameter("SubDistrictId", subDistrictId) :
                new ObjectParameter("SubDistrictId", typeof(int));
    
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(int));
    
            var provinceIdParameter = provinceId.HasValue ?
                new ObjectParameter("ProvinceId", provinceId) :
                new ObjectParameter("ProvinceId", typeof(int));
    
            var zipCodeParameter = zipCode != null ?
                new ObjectParameter("ZipCode", zipCode) :
                new ObjectParameter("ZipCode", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProvinceDistrictSubDistrict_Select_Result>("usp_ProvinceDistrictSubDistrict_Select", subDistrictIdParameter, districtIdParameter, provinceIdParameter, zipCodeParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual int usp_GenerateCode(string transactionCodeControlTypeDetail, Nullable<int> runningLenght, ObjectParameter result)
        {
            var transactionCodeControlTypeDetailParameter = transactionCodeControlTypeDetail != null ?
                new ObjectParameter("TransactionCodeControlTypeDetail", transactionCodeControlTypeDetail) :
                new ObjectParameter("TransactionCodeControlTypeDetail", typeof(string));
    
            var runningLenghtParameter = runningLenght.HasValue ?
                new ObjectParameter("RunningLenght", runningLenght) :
                new ObjectParameter("RunningLenght", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GenerateCode", transactionCodeControlTypeDetailParameter, runningLenghtParameter, result);
        }
    
        public virtual ObjectResult<usp_TmpApplicationRoundImport_Error_Select_Result> usp_TmpApplicationRoundImport_Error_Select(Nullable<int> applicationRoundId, string tmpGenerateCode, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationRoundIdParameter = applicationRoundId.HasValue ?
                new ObjectParameter("ApplicationRoundId", applicationRoundId) :
                new ObjectParameter("ApplicationRoundId", typeof(int));
    
            var tmpGenerateCodeParameter = tmpGenerateCode != null ?
                new ObjectParameter("TmpGenerateCode", tmpGenerateCode) :
                new ObjectParameter("TmpGenerateCode", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TmpApplicationRoundImport_Error_Select_Result>("usp_TmpApplicationRoundImport_Error_Select", applicationRoundIdParameter, tmpGenerateCodeParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_TmpApplicationRoundImport_Insert_Result> usp_TmpApplicationRoundImport_Insert(Nullable<int> applicationRoundId, string tmpGenerateCode, string title, string firstName, string lastName, string mobileNumber, string idCardNumber, string passPortNumber, string occupation, string customerDetailType, Nullable<int> birthDate_D, Nullable<int> birthDate_M, Nullable<int> birthDate_Y)
        {
            var applicationRoundIdParameter = applicationRoundId.HasValue ?
                new ObjectParameter("ApplicationRoundId", applicationRoundId) :
                new ObjectParameter("ApplicationRoundId", typeof(int));
    
            var tmpGenerateCodeParameter = tmpGenerateCode != null ?
                new ObjectParameter("TmpGenerateCode", tmpGenerateCode) :
                new ObjectParameter("TmpGenerateCode", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var idCardNumberParameter = idCardNumber != null ?
                new ObjectParameter("IdCardNumber", idCardNumber) :
                new ObjectParameter("IdCardNumber", typeof(string));
    
            var passPortNumberParameter = passPortNumber != null ?
                new ObjectParameter("PassPortNumber", passPortNumber) :
                new ObjectParameter("PassPortNumber", typeof(string));
    
            var occupationParameter = occupation != null ?
                new ObjectParameter("Occupation", occupation) :
                new ObjectParameter("Occupation", typeof(string));
    
            var customerDetailTypeParameter = customerDetailType != null ?
                new ObjectParameter("CustomerDetailType", customerDetailType) :
                new ObjectParameter("CustomerDetailType", typeof(string));
    
            var birthDate_DParameter = birthDate_D.HasValue ?
                new ObjectParameter("BirthDate_D", birthDate_D) :
                new ObjectParameter("BirthDate_D", typeof(int));
    
            var birthDate_MParameter = birthDate_M.HasValue ?
                new ObjectParameter("BirthDate_M", birthDate_M) :
                new ObjectParameter("BirthDate_M", typeof(int));
    
            var birthDate_YParameter = birthDate_Y.HasValue ?
                new ObjectParameter("BirthDate_Y", birthDate_Y) :
                new ObjectParameter("BirthDate_Y", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TmpApplicationRoundImport_Insert_Result>("usp_TmpApplicationRoundImport_Insert", applicationRoundIdParameter, tmpGenerateCodeParameter, titleParameter, firstNameParameter, lastNameParameter, mobileNumberParameter, idCardNumberParameter, passPortNumberParameter, occupationParameter, customerDetailTypeParameter, birthDate_DParameter, birthDate_MParameter, birthDate_YParameter);
        }
    
        public virtual ObjectResult<usp_TmpApplicationRoundImport_OverView_Select_Result> usp_TmpApplicationRoundImport_OverView_Select(Nullable<int> applicationRoundId, string tmpGenerateCode, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationRoundIdParameter = applicationRoundId.HasValue ?
                new ObjectParameter("ApplicationRoundId", applicationRoundId) :
                new ObjectParameter("ApplicationRoundId", typeof(int));
    
            var tmpGenerateCodeParameter = tmpGenerateCode != null ?
                new ObjectParameter("TmpGenerateCode", tmpGenerateCode) :
                new ObjectParameter("TmpGenerateCode", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TmpApplicationRoundImport_OverView_Select_Result>("usp_TmpApplicationRoundImport_OverView_Select", applicationRoundIdParameter, tmpGenerateCodeParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_TmpApplicationRoundImport_Validate_Result> usp_TmpApplicationRoundImport_Validate(Nullable<int> applicationRoundId, string tmpGenerateCode)
        {
            var applicationRoundIdParameter = applicationRoundId.HasValue ?
                new ObjectParameter("ApplicationRoundId", applicationRoundId) :
                new ObjectParameter("ApplicationRoundId", typeof(int));
    
            var tmpGenerateCodeParameter = tmpGenerateCode != null ?
                new ObjectParameter("TmpGenerateCode", tmpGenerateCode) :
                new ObjectParameter("TmpGenerateCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TmpApplicationRoundImport_Validate_Result>("usp_TmpApplicationRoundImport_Validate", applicationRoundIdParameter, tmpGenerateCodeParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationAgent_Delete_Result> usp_ApplicationAgent_Delete(Nullable<int> applicationAgentId, Nullable<int> updatedByUserId)
        {
            var applicationAgentIdParameter = applicationAgentId.HasValue ?
                new ObjectParameter("ApplicationAgentId", applicationAgentId) :
                new ObjectParameter("ApplicationAgentId", typeof(int));
    
            var updatedByUserIdParameter = updatedByUserId.HasValue ?
                new ObjectParameter("UpdatedByUserId", updatedByUserId) :
                new ObjectParameter("UpdatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationAgent_Delete_Result>("usp_ApplicationAgent_Delete", applicationAgentIdParameter, updatedByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationAgent_Insert_Result> usp_ApplicationAgent_Insert(Nullable<int> applicationId, Nullable<int> applicationAgentTypeId, Nullable<double> percent, Nullable<int> employeeId, Nullable<int> createdByUserId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var applicationAgentTypeIdParameter = applicationAgentTypeId.HasValue ?
                new ObjectParameter("ApplicationAgentTypeId", applicationAgentTypeId) :
                new ObjectParameter("ApplicationAgentTypeId", typeof(int));
    
            var percentParameter = percent.HasValue ?
                new ObjectParameter("Percent", percent) :
                new ObjectParameter("Percent", typeof(double));
    
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationAgent_Insert_Result>("usp_ApplicationAgent_Insert", applicationIdParameter, applicationAgentTypeIdParameter, percentParameter, employeeIdParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationAgent_Select_Result> usp_ApplicationAgent_Select(Nullable<int> applicationId, Nullable<int> applicationAgentId, Nullable<int> applicationAgentTypeId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var applicationAgentIdParameter = applicationAgentId.HasValue ?
                new ObjectParameter("ApplicationAgentId", applicationAgentId) :
                new ObjectParameter("ApplicationAgentId", typeof(int));
    
            var applicationAgentTypeIdParameter = applicationAgentTypeId.HasValue ?
                new ObjectParameter("ApplicationAgentTypeId", applicationAgentTypeId) :
                new ObjectParameter("ApplicationAgentTypeId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationAgent_Select_Result>("usp_ApplicationAgent_Select", applicationIdParameter, applicationAgentIdParameter, applicationAgentTypeIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationDetail_Insert_Result> usp_ApplicationDetail_Insert(Nullable<int> organizeId, string applicationName, Nullable<System.DateTime> startCoverDate, Nullable<System.DateTime> endCoverDate, Nullable<int> productId, Nullable<int> branchId, Nullable<int> titleId, string firstName, string lastName, string mobileNumber, string idCardNumber, string passPortNumber, Nullable<bool> isContact, Nullable<int> createdByUserId)
        {
            var organizeIdParameter = organizeId.HasValue ?
                new ObjectParameter("OrganizeId", organizeId) :
                new ObjectParameter("OrganizeId", typeof(int));
    
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var startCoverDateParameter = startCoverDate.HasValue ?
                new ObjectParameter("StartCoverDate", startCoverDate) :
                new ObjectParameter("StartCoverDate", typeof(System.DateTime));
    
            var endCoverDateParameter = endCoverDate.HasValue ?
                new ObjectParameter("EndCoverDate", endCoverDate) :
                new ObjectParameter("EndCoverDate", typeof(System.DateTime));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var titleIdParameter = titleId.HasValue ?
                new ObjectParameter("TitleId", titleId) :
                new ObjectParameter("TitleId", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var idCardNumberParameter = idCardNumber != null ?
                new ObjectParameter("IdCardNumber", idCardNumber) :
                new ObjectParameter("IdCardNumber", typeof(string));
    
            var passPortNumberParameter = passPortNumber != null ?
                new ObjectParameter("PassPortNumber", passPortNumber) :
                new ObjectParameter("PassPortNumber", typeof(string));
    
            var isContactParameter = isContact.HasValue ?
                new ObjectParameter("IsContact", isContact) :
                new ObjectParameter("IsContact", typeof(bool));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationDetail_Insert_Result>("usp_ApplicationDetail_Insert", organizeIdParameter, applicationNameParameter, startCoverDateParameter, endCoverDateParameter, productIdParameter, branchIdParameter, titleIdParameter, firstNameParameter, lastNameParameter, mobileNumberParameter, idCardNumberParameter, passPortNumberParameter, isContactParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_Organize_Select_Result> usp_Organize_Select(Nullable<int> organizeId, Nullable<int> organizeGroupID, Nullable<int> organizeTypeId, string provinceId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var organizeIdParameter = organizeId.HasValue ?
                new ObjectParameter("OrganizeId", organizeId) :
                new ObjectParameter("OrganizeId", typeof(int));
    
            var organizeGroupIDParameter = organizeGroupID.HasValue ?
                new ObjectParameter("OrganizeGroupID", organizeGroupID) :
                new ObjectParameter("OrganizeGroupID", typeof(int));
    
            var organizeTypeIdParameter = organizeTypeId.HasValue ?
                new ObjectParameter("OrganizeTypeId", organizeTypeId) :
                new ObjectParameter("OrganizeTypeId", typeof(int));
    
            var provinceIdParameter = provinceId != null ?
                new ObjectParameter("ProvinceId", provinceId) :
                new ObjectParameter("ProvinceId", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Organize_Select_Result>("usp_Organize_Select", organizeIdParameter, organizeGroupIDParameter, organizeTypeIdParameter, provinceIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_OrganizeType_Select_Result> usp_OrganizeType_Select(Nullable<int> organizeTypeId, Nullable<int> organizeGroupId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var organizeTypeIdParameter = organizeTypeId.HasValue ?
                new ObjectParameter("OrganizeTypeId", organizeTypeId) :
                new ObjectParameter("OrganizeTypeId", typeof(int));
    
            var organizeGroupIdParameter = organizeGroupId.HasValue ?
                new ObjectParameter("OrganizeGroupId", organizeGroupId) :
                new ObjectParameter("OrganizeGroupId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_OrganizeType_Select_Result>("usp_OrganizeType_Select", organizeTypeIdParameter, organizeGroupIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_Title_Select_Result> usp_Title_Select(Nullable<int> titleId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var titleIdParameter = titleId.HasValue ?
                new ObjectParameter("TitleId", titleId) :
                new ObjectParameter("TitleId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Title_Select_Result>("usp_Title_Select", titleIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_Province_Select_Result> usp_Province_Select(Nullable<int> provinceId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var provinceIdParameter = provinceId.HasValue ?
                new ObjectParameter("ProvinceId", provinceId) :
                new ObjectParameter("ProvinceId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Province_Select_Result>("usp_Province_Select", provinceIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_Application_Select_Result> usp_Application_Select(Nullable<int> applicationId, Nullable<int> branchId, Nullable<int> applicationStatusId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var applicationStatusIdParameter = applicationStatusId.HasValue ?
                new ObjectParameter("ApplicationStatusId", applicationStatusId) :
                new ObjectParameter("ApplicationStatusId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Application_Select_Result>("usp_Application_Select", applicationIdParameter, branchIdParameter, applicationStatusIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationContact_Select_Result> usp_ApplicationContact_Select(Nullable<int> applicationId, Nullable<int> applicationContactId, Nullable<int> applicationContactTypeId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var applicationContactIdParameter = applicationContactId.HasValue ?
                new ObjectParameter("ApplicationContactId", applicationContactId) :
                new ObjectParameter("ApplicationContactId", typeof(int));
    
            var applicationContactTypeIdParameter = applicationContactTypeId.HasValue ?
                new ObjectParameter("ApplicationContactTypeId", applicationContactTypeId) :
                new ObjectParameter("ApplicationContactTypeId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationContact_Select_Result>("usp_ApplicationContact_Select", applicationIdParameter, applicationContactIdParameter, applicationContactTypeIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationAgentType_Select_Result> usp_ApplicationAgentType_Select(Nullable<int> applicationAgentTypeId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationAgentTypeIdParameter = applicationAgentTypeId.HasValue ?
                new ObjectParameter("ApplicationAgentTypeId", applicationAgentTypeId) :
                new ObjectParameter("ApplicationAgentTypeId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationAgentType_Select_Result>("usp_ApplicationAgentType_Select", applicationAgentTypeIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_Employee_Select_Result> usp_Employee_Select(Nullable<int> employeeId, string employeeCode, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Employee_Select_Result>("usp_Employee_Select", employeeIdParameter, employeeCodeParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationRound_Insert_Result> usp_ApplicationRound_Insert(Nullable<int> applicationId, Nullable<int> customerBuy, Nullable<int> customerFree, Nullable<double> premiumAmount, Nullable<System.DateTime> effectiveDate, Nullable<int> createdByUserId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var customerBuyParameter = customerBuy.HasValue ?
                new ObjectParameter("CustomerBuy", customerBuy) :
                new ObjectParameter("CustomerBuy", typeof(int));
    
            var customerFreeParameter = customerFree.HasValue ?
                new ObjectParameter("CustomerFree", customerFree) :
                new ObjectParameter("CustomerFree", typeof(int));
    
            var premiumAmountParameter = premiumAmount.HasValue ?
                new ObjectParameter("PremiumAmount", premiumAmount) :
                new ObjectParameter("PremiumAmount", typeof(double));
    
            var effectiveDateParameter = effectiveDate.HasValue ?
                new ObjectParameter("EffectiveDate", effectiveDate) :
                new ObjectParameter("EffectiveDate", typeof(System.DateTime));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationRound_Insert_Result>("usp_ApplicationRound_Insert", applicationIdParameter, customerBuyParameter, customerFreeParameter, premiumAmountParameter, effectiveDateParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationRound_Update_Result> usp_ApplicationRound_Update(Nullable<int> applicationRoundId, Nullable<int> customerBuy, Nullable<int> customerFree, Nullable<double> premiumAmount, Nullable<System.DateTime> effectiveDate, Nullable<int> updatedByUserId)
        {
            var applicationRoundIdParameter = applicationRoundId.HasValue ?
                new ObjectParameter("ApplicationRoundId", applicationRoundId) :
                new ObjectParameter("ApplicationRoundId", typeof(int));
    
            var customerBuyParameter = customerBuy.HasValue ?
                new ObjectParameter("CustomerBuy", customerBuy) :
                new ObjectParameter("CustomerBuy", typeof(int));
    
            var customerFreeParameter = customerFree.HasValue ?
                new ObjectParameter("CustomerFree", customerFree) :
                new ObjectParameter("CustomerFree", typeof(int));
    
            var premiumAmountParameter = premiumAmount.HasValue ?
                new ObjectParameter("PremiumAmount", premiumAmount) :
                new ObjectParameter("PremiumAmount", typeof(double));
    
            var effectiveDateParameter = effectiveDate.HasValue ?
                new ObjectParameter("EffectiveDate", effectiveDate) :
                new ObjectParameter("EffectiveDate", typeof(System.DateTime));
    
            var updatedByUserIdParameter = updatedByUserId.HasValue ?
                new ObjectParameter("UpdatedByUserId", updatedByUserId) :
                new ObjectParameter("UpdatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationRound_Update_Result>("usp_ApplicationRound_Update", applicationRoundIdParameter, customerBuyParameter, customerFreeParameter, premiumAmountParameter, effectiveDateParameter, updatedByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_Product_Select_Result> usp_Product_Select(Nullable<int> productId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Product_Select_Result>("usp_Product_Select", productIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationRound_SelectById_Result> usp_ApplicationRound_SelectById(Nullable<int> applicationRoundId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationRoundIdParameter = applicationRoundId.HasValue ?
                new ObjectParameter("ApplicationRoundId", applicationRoundId) :
                new ObjectParameter("ApplicationRoundId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationRound_SelectById_Result>("usp_ApplicationRound_SelectById", applicationRoundIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ProgramConfig_Select_Result> usp_ProgramConfig_Select(string parameterName, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var parameterNameParameter = parameterName != null ?
                new ObjectParameter("ParameterName", parameterName) :
                new ObjectParameter("ParameterName", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProgramConfig_Select_Result>("usp_ProgramConfig_Select", parameterNameParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_TmpApplicationRoundImport_Delete_Result> usp_TmpApplicationRoundImport_Delete(Nullable<int> applicationRoundId, string tmpGenerateCode)
        {
            var applicationRoundIdParameter = applicationRoundId.HasValue ?
                new ObjectParameter("ApplicationRoundId", applicationRoundId) :
                new ObjectParameter("ApplicationRoundId", typeof(int));
    
            var tmpGenerateCodeParameter = tmpGenerateCode != null ?
                new ObjectParameter("TmpGenerateCode", tmpGenerateCode) :
                new ObjectParameter("TmpGenerateCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TmpApplicationRoundImport_Delete_Result>("usp_TmpApplicationRoundImport_Delete", applicationRoundIdParameter, tmpGenerateCodeParameter);
        }
    
        public virtual ObjectResult<usp_TmpApplicationRoundImport_ToCustomerDetail_Insert_Result> usp_TmpApplicationRoundImport_ToCustomerDetail_Insert(Nullable<int> applicationRoundId, string tmpGenerateCode, Nullable<int> createdByUserId)
        {
            var applicationRoundIdParameter = applicationRoundId.HasValue ?
                new ObjectParameter("ApplicationRoundId", applicationRoundId) :
                new ObjectParameter("ApplicationRoundId", typeof(int));
    
            var tmpGenerateCodeParameter = tmpGenerateCode != null ?
                new ObjectParameter("TmpGenerateCode", tmpGenerateCode) :
                new ObjectParameter("TmpGenerateCode", typeof(string));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TmpApplicationRoundImport_ToCustomerDetail_Insert_Result>("usp_TmpApplicationRoundImport_ToCustomerDetail_Insert", applicationRoundIdParameter, tmpGenerateCodeParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationDetail_Update_Result> usp_ApplicationDetail_Update(Nullable<int> applicationId, Nullable<int> organizeId, string applicationName, Nullable<int> applicationStatusId, Nullable<System.DateTime> startCoverDate, Nullable<System.DateTime> endCoverDate, Nullable<int> productId, Nullable<int> branchId, Nullable<int> titleId, string firstName, string lastName, string mobileNumber, Nullable<bool> isContact, string idCardNumber, string passPortNumber, Nullable<int> updateByUserId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var organizeIdParameter = organizeId.HasValue ?
                new ObjectParameter("OrganizeId", organizeId) :
                new ObjectParameter("OrganizeId", typeof(int));
    
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var applicationStatusIdParameter = applicationStatusId.HasValue ?
                new ObjectParameter("ApplicationStatusId", applicationStatusId) :
                new ObjectParameter("ApplicationStatusId", typeof(int));
    
            var startCoverDateParameter = startCoverDate.HasValue ?
                new ObjectParameter("StartCoverDate", startCoverDate) :
                new ObjectParameter("StartCoverDate", typeof(System.DateTime));
    
            var endCoverDateParameter = endCoverDate.HasValue ?
                new ObjectParameter("EndCoverDate", endCoverDate) :
                new ObjectParameter("EndCoverDate", typeof(System.DateTime));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var titleIdParameter = titleId.HasValue ?
                new ObjectParameter("TitleId", titleId) :
                new ObjectParameter("TitleId", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var isContactParameter = isContact.HasValue ?
                new ObjectParameter("IsContact", isContact) :
                new ObjectParameter("IsContact", typeof(bool));
    
            var idCardNumberParameter = idCardNumber != null ?
                new ObjectParameter("IdCardNumber", idCardNumber) :
                new ObjectParameter("IdCardNumber", typeof(string));
    
            var passPortNumberParameter = passPortNumber != null ?
                new ObjectParameter("PassPortNumber", passPortNumber) :
                new ObjectParameter("PassPortNumber", typeof(string));
    
            var updateByUserIdParameter = updateByUserId.HasValue ?
                new ObjectParameter("UpdateByUserId", updateByUserId) :
                new ObjectParameter("UpdateByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationDetail_Update_Result>("usp_ApplicationDetail_Update", applicationIdParameter, organizeIdParameter, applicationNameParameter, applicationStatusIdParameter, startCoverDateParameter, endCoverDateParameter, productIdParameter, branchIdParameter, titleIdParameter, firstNameParameter, lastNameParameter, mobileNumberParameter, isContactParameter, idCardNumberParameter, passPortNumberParameter, updateByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_CustomerDetail_Select_Result> usp_CustomerDetail_Select(Nullable<int> customerDetailId, Nullable<int> applicationId, Nullable<int> customerDetailStatusId, Nullable<int> applicationRoudId, Nullable<int> applicationRoudImportId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var customerDetailIdParameter = customerDetailId.HasValue ?
                new ObjectParameter("CustomerDetailId", customerDetailId) :
                new ObjectParameter("CustomerDetailId", typeof(int));
    
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var customerDetailStatusIdParameter = customerDetailStatusId.HasValue ?
                new ObjectParameter("CustomerDetailStatusId", customerDetailStatusId) :
                new ObjectParameter("CustomerDetailStatusId", typeof(int));
    
            var applicationRoudIdParameter = applicationRoudId.HasValue ?
                new ObjectParameter("ApplicationRoudId", applicationRoudId) :
                new ObjectParameter("ApplicationRoudId", typeof(int));
    
            var applicationRoudImportIdParameter = applicationRoudImportId.HasValue ?
                new ObjectParameter("ApplicationRoudImportId", applicationRoudImportId) :
                new ObjectParameter("ApplicationRoudImportId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CustomerDetail_Select_Result>("usp_CustomerDetail_Select", customerDetailIdParameter, applicationIdParameter, customerDetailStatusIdParameter, applicationRoudIdParameter, applicationRoudImportIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_CustomerDetail_Delete_Result> usp_CustomerDetail_Delete(Nullable<int> customerDetailId, Nullable<int> updateByUserid)
        {
            var customerDetailIdParameter = customerDetailId.HasValue ?
                new ObjectParameter("CustomerDetailId", customerDetailId) :
                new ObjectParameter("CustomerDetailId", typeof(int));
    
            var updateByUseridParameter = updateByUserid.HasValue ?
                new ObjectParameter("UpdateByUserid", updateByUserid) :
                new ObjectParameter("UpdateByUserid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CustomerDetail_Delete_Result>("usp_CustomerDetail_Delete", customerDetailIdParameter, updateByUseridParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationSubRound_Select_Result> usp_ApplicationSubRound_Select(Nullable<int> applicationRoundId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationRoundIdParameter = applicationRoundId.HasValue ?
                new ObjectParameter("ApplicationRoundId", applicationRoundId) :
                new ObjectParameter("ApplicationRoundId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationSubRound_Select_Result>("usp_ApplicationSubRound_Select", applicationRoundIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationRound_ApprovePolicy_Update_Result> usp_ApplicationRound_ApprovePolicy_Update(Nullable<int> applicationRoundId, Nullable<int> applicationRoundStatusId, Nullable<int> applicationRoundUnApproveCauseId, string applicationRoundUnApproveRemark, Nullable<int> createdByUserId)
        {
            var applicationRoundIdParameter = applicationRoundId.HasValue ?
                new ObjectParameter("ApplicationRoundId", applicationRoundId) :
                new ObjectParameter("ApplicationRoundId", typeof(int));
    
            var applicationRoundStatusIdParameter = applicationRoundStatusId.HasValue ?
                new ObjectParameter("ApplicationRoundStatusId", applicationRoundStatusId) :
                new ObjectParameter("ApplicationRoundStatusId", typeof(int));
    
            var applicationRoundUnApproveCauseIdParameter = applicationRoundUnApproveCauseId.HasValue ?
                new ObjectParameter("ApplicationRoundUnApproveCauseId", applicationRoundUnApproveCauseId) :
                new ObjectParameter("ApplicationRoundUnApproveCauseId", typeof(int));
    
            var applicationRoundUnApproveRemarkParameter = applicationRoundUnApproveRemark != null ?
                new ObjectParameter("ApplicationRoundUnApproveRemark", applicationRoundUnApproveRemark) :
                new ObjectParameter("ApplicationRoundUnApproveRemark", typeof(string));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationRound_ApprovePolicy_Update_Result>("usp_ApplicationRound_ApprovePolicy_Update", applicationRoundIdParameter, applicationRoundStatusIdParameter, applicationRoundUnApproveCauseIdParameter, applicationRoundUnApproveRemarkParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationRound_SentPolicy_Update_Result> usp_ApplicationRound_SentPolicy_Update(Nullable<int> applicationRoundId, Nullable<int> createdByUserId)
        {
            var applicationRoundIdParameter = applicationRoundId.HasValue ?
                new ObjectParameter("ApplicationRoundId", applicationRoundId) :
                new ObjectParameter("ApplicationRoundId", typeof(int));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationRound_SentPolicy_Update_Result>("usp_ApplicationRound_SentPolicy_Update", applicationRoundIdParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_Branch_Select_Result> usp_Branch_Select(Nullable<int> brachID, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var brachIDParameter = brachID.HasValue ?
                new ObjectParameter("BrachID", brachID) :
                new ObjectParameter("BrachID", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Branch_Select_Result>("usp_Branch_Select", brachIDParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationRoundStatus_Select_Result> usp_ApplicationRoundStatus_Select(Nullable<int> applicationRoundStatusId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationRoundStatusIdParameter = applicationRoundStatusId.HasValue ?
                new ObjectParameter("ApplicationRoundStatusId", applicationRoundStatusId) :
                new ObjectParameter("ApplicationRoundStatusId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationRoundStatus_Select_Result>("usp_ApplicationRoundStatus_Select", applicationRoundStatusIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationStatus_Select_Result> usp_ApplicationStatus_Select(Nullable<int> applicationStatusId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationStatusIdParameter = applicationStatusId.HasValue ?
                new ObjectParameter("ApplicationStatusId", applicationStatusId) :
                new ObjectParameter("ApplicationStatusId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationStatus_Select_Result>("usp_ApplicationStatus_Select", applicationStatusIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_CustomerDetail_DeleteByApplicationRoundId_Result> usp_CustomerDetail_DeleteByApplicationRoundId(Nullable<int> applicationRoundId, Nullable<int> updatedByUserId)
        {
            var applicationRoundIdParameter = applicationRoundId.HasValue ?
                new ObjectParameter("ApplicationRoundId", applicationRoundId) :
                new ObjectParameter("ApplicationRoundId", typeof(int));
    
            var updatedByUserIdParameter = updatedByUserId.HasValue ?
                new ObjectParameter("UpdatedByUserId", updatedByUserId) :
                new ObjectParameter("UpdatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CustomerDetail_DeleteByApplicationRoundId_Result>("usp_CustomerDetail_DeleteByApplicationRoundId", applicationRoundIdParameter, updatedByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_Occupation_Select_Result> usp_Occupation_Select(Nullable<int> occupationId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var occupationIdParameter = occupationId.HasValue ?
                new ObjectParameter("OccupationId", occupationId) :
                new ObjectParameter("OccupationId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Occupation_Select_Result>("usp_Occupation_Select", occupationIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_CustomerDetail_Update_Result> usp_CustomerDetail_Update(Nullable<int> customerDetailId, Nullable<int> titleId, string firstName, string lastName, string idCardNumber, string passPortNumber, Nullable<System.DateTime> birthDate, Nullable<int> ageAtRegister_D, Nullable<int> ageAtRegister_M, Nullable<int> ageAtRegister_Y, Nullable<int> occupationId, string mobileNumber, Nullable<int> customerDetailTypeId, Nullable<int> updatedByUserId)
        {
            var customerDetailIdParameter = customerDetailId.HasValue ?
                new ObjectParameter("CustomerDetailId", customerDetailId) :
                new ObjectParameter("CustomerDetailId", typeof(int));
    
            var titleIdParameter = titleId.HasValue ?
                new ObjectParameter("TitleId", titleId) :
                new ObjectParameter("TitleId", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var idCardNumberParameter = idCardNumber != null ?
                new ObjectParameter("IdCardNumber", idCardNumber) :
                new ObjectParameter("IdCardNumber", typeof(string));
    
            var passPortNumberParameter = passPortNumber != null ?
                new ObjectParameter("PassPortNumber", passPortNumber) :
                new ObjectParameter("PassPortNumber", typeof(string));
    
            var birthDateParameter = birthDate.HasValue ?
                new ObjectParameter("BirthDate", birthDate) :
                new ObjectParameter("BirthDate", typeof(System.DateTime));
    
            var ageAtRegister_DParameter = ageAtRegister_D.HasValue ?
                new ObjectParameter("AgeAtRegister_D", ageAtRegister_D) :
                new ObjectParameter("AgeAtRegister_D", typeof(int));
    
            var ageAtRegister_MParameter = ageAtRegister_M.HasValue ?
                new ObjectParameter("AgeAtRegister_M", ageAtRegister_M) :
                new ObjectParameter("AgeAtRegister_M", typeof(int));
    
            var ageAtRegister_YParameter = ageAtRegister_Y.HasValue ?
                new ObjectParameter("AgeAtRegister_Y", ageAtRegister_Y) :
                new ObjectParameter("AgeAtRegister_Y", typeof(int));
    
            var occupationIdParameter = occupationId.HasValue ?
                new ObjectParameter("OccupationId", occupationId) :
                new ObjectParameter("OccupationId", typeof(int));
    
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var customerDetailTypeIdParameter = customerDetailTypeId.HasValue ?
                new ObjectParameter("CustomerDetailTypeId", customerDetailTypeId) :
                new ObjectParameter("CustomerDetailTypeId", typeof(int));
    
            var updatedByUserIdParameter = updatedByUserId.HasValue ?
                new ObjectParameter("UpdatedByUserId", updatedByUserId) :
                new ObjectParameter("UpdatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CustomerDetail_Update_Result>("usp_CustomerDetail_Update", customerDetailIdParameter, titleIdParameter, firstNameParameter, lastNameParameter, idCardNumberParameter, passPortNumberParameter, birthDateParameter, ageAtRegister_DParameter, ageAtRegister_MParameter, ageAtRegister_YParameter, occupationIdParameter, mobileNumberParameter, customerDetailTypeIdParameter, updatedByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_CustomerDetail_Insert_Result> usp_CustomerDetail_Insert(Nullable<int> applicationRoundId, string tmpGenerateCode, Nullable<int> titleId, string firstName, string lastName, string mobileNumber, string idCardNumber, string passPortNumber, Nullable<int> occupationId, Nullable<int> customerDetailTypeId, Nullable<System.DateTime> birthDate, Nullable<int> createdByUserId)
        {
            var applicationRoundIdParameter = applicationRoundId.HasValue ?
                new ObjectParameter("ApplicationRoundId", applicationRoundId) :
                new ObjectParameter("ApplicationRoundId", typeof(int));
    
            var tmpGenerateCodeParameter = tmpGenerateCode != null ?
                new ObjectParameter("TmpGenerateCode", tmpGenerateCode) :
                new ObjectParameter("TmpGenerateCode", typeof(string));
    
            var titleIdParameter = titleId.HasValue ?
                new ObjectParameter("TitleId", titleId) :
                new ObjectParameter("TitleId", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var idCardNumberParameter = idCardNumber != null ?
                new ObjectParameter("IdCardNumber", idCardNumber) :
                new ObjectParameter("IdCardNumber", typeof(string));
    
            var passPortNumberParameter = passPortNumber != null ?
                new ObjectParameter("PassPortNumber", passPortNumber) :
                new ObjectParameter("PassPortNumber", typeof(string));
    
            var occupationIdParameter = occupationId.HasValue ?
                new ObjectParameter("OccupationId", occupationId) :
                new ObjectParameter("OccupationId", typeof(int));
    
            var customerDetailTypeIdParameter = customerDetailTypeId.HasValue ?
                new ObjectParameter("CustomerDetailTypeId", customerDetailTypeId) :
                new ObjectParameter("CustomerDetailTypeId", typeof(int));
    
            var birthDateParameter = birthDate.HasValue ?
                new ObjectParameter("BirthDate", birthDate) :
                new ObjectParameter("BirthDate", typeof(System.DateTime));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CustomerDetail_Insert_Result>("usp_CustomerDetail_Insert", applicationRoundIdParameter, tmpGenerateCodeParameter, titleIdParameter, firstNameParameter, lastNameParameter, mobileNumberParameter, idCardNumberParameter, passPortNumberParameter, occupationIdParameter, customerDetailTypeIdParameter, birthDateParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_CalculateAgeXProduct_Select_Result> usp_CalculateAgeXProduct_Select(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, Nullable<int> productId)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CalculateAgeXProduct_Select_Result>("usp_CalculateAgeXProduct_Select", dateFromParameter, dateToParameter, productIdParameter);
        }
    
        public virtual ObjectResult<usp_CalculateAge_Select_Result> usp_CalculateAge_Select(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CalculateAge_Select_Result>("usp_CalculateAge_Select", dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<usp_Premium_Select_Result> usp_Premium_Select(Nullable<int> applicationId, Nullable<int> appRoundId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var appRoundIdParameter = appRoundId.HasValue ?
                new ObjectParameter("AppRoundId", appRoundId) :
                new ObjectParameter("AppRoundId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Premium_Select_Result>("usp_Premium_Select", applicationIdParameter, appRoundIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationCancelCause_Select_Result> usp_ApplicationCancelCause_Select(Nullable<int> applicationCancelCauseId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationCancelCauseIdParameter = applicationCancelCauseId.HasValue ?
                new ObjectParameter("ApplicationCancelCauseId", applicationCancelCauseId) :
                new ObjectParameter("ApplicationCancelCauseId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationCancelCause_Select_Result>("usp_ApplicationCancelCause_Select", applicationCancelCauseIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationRoundUnApproveCause_Select_Result> usp_ApplicationRoundUnApproveCause_Select(Nullable<int> applicationRoundUnApproveCauseId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationRoundUnApproveCauseIdParameter = applicationRoundUnApproveCauseId.HasValue ?
                new ObjectParameter("ApplicationRoundUnApproveCauseId", applicationRoundUnApproveCauseId) :
                new ObjectParameter("ApplicationRoundUnApproveCauseId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationRoundUnApproveCause_Select_Result>("usp_ApplicationRoundUnApproveCause_Select", applicationRoundUnApproveCauseIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_GenerateReport_Insert_Result> usp_GenerateReport_Insert(Nullable<int> insuranceId, Nullable<System.DateTime> period, Nullable<int> createdByUserId)
        {
            var insuranceIdParameter = insuranceId.HasValue ?
                new ObjectParameter("InsuranceId", insuranceId) :
                new ObjectParameter("InsuranceId", typeof(int));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GenerateReport_Insert_Result>("usp_GenerateReport_Insert", insuranceIdParameter, periodParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_ReportDetail_Select_Result> usp_ReportDetail_Select(Nullable<int> reportGroupId)
        {
            var reportGroupIdParameter = reportGroupId.HasValue ?
                new ObjectParameter("ReportGroupId", reportGroupId) :
                new ObjectParameter("ReportGroupId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReportDetail_Select_Result>("usp_ReportDetail_Select", reportGroupIdParameter);
        }
    
        public virtual ObjectResult<usp_ReportGroup_Select_Result> usp_ReportGroup_Select(string reportGroupCode, Nullable<System.DateTime> period, Nullable<System.DateTime> createdDateReportFrom, Nullable<System.DateTime> createdDateReportTo, Nullable<int> reportTypeId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var reportGroupCodeParameter = reportGroupCode != null ?
                new ObjectParameter("ReportGroupCode", reportGroupCode) :
                new ObjectParameter("ReportGroupCode", typeof(string));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            var createdDateReportFromParameter = createdDateReportFrom.HasValue ?
                new ObjectParameter("CreatedDateReportFrom", createdDateReportFrom) :
                new ObjectParameter("CreatedDateReportFrom", typeof(System.DateTime));
    
            var createdDateReportToParameter = createdDateReportTo.HasValue ?
                new ObjectParameter("CreatedDateReportTo", createdDateReportTo) :
                new ObjectParameter("CreatedDateReportTo", typeof(System.DateTime));
    
            var reportTypeIdParameter = reportTypeId.HasValue ?
                new ObjectParameter("ReportTypeId", reportTypeId) :
                new ObjectParameter("ReportTypeId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReportGroup_Select_Result>("usp_ReportGroup_Select", reportGroupCodeParameter, periodParameter, createdDateReportFromParameter, createdDateReportToParameter, reportTypeIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ReportGroup_SelectById_Result> usp_ReportGroup_SelectById(Nullable<int> reportGroupId)
        {
            var reportGroupIdParameter = reportGroupId.HasValue ?
                new ObjectParameter("ReportGroupId", reportGroupId) :
                new ObjectParameter("ReportGroupId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReportGroup_SelectById_Result>("usp_ReportGroup_SelectById", reportGroupIdParameter);
        }
    
        public virtual ObjectResult<usp_ReportApplicationRound_Select_Result> usp_ReportApplicationRound_Select(Nullable<int> applicationRoundId, Nullable<System.DateTime> period, Nullable<int> insuranceId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationRoundIdParameter = applicationRoundId.HasValue ?
                new ObjectParameter("ApplicationRoundId", applicationRoundId) :
                new ObjectParameter("ApplicationRoundId", typeof(int));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            var insuranceIdParameter = insuranceId.HasValue ?
                new ObjectParameter("InsuranceId", insuranceId) :
                new ObjectParameter("InsuranceId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReportApplicationRound_Select_Result>("usp_ReportApplicationRound_Select", applicationRoundIdParameter, periodParameter, insuranceIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationRoundImport_Select_Result> usp_ApplicationRoundImport_Select(Nullable<int> applicationId, Nullable<int> roundNo, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var roundNoParameter = roundNo.HasValue ?
                new ObjectParameter("RoundNo", roundNo) :
                new ObjectParameter("RoundNo", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationRoundImport_Select_Result>("usp_ApplicationRoundImport_Select", applicationIdParameter, roundNoParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationTransactionHeader_Select_Result> usp_ApplicationTransactionHeader_Select(Nullable<int> applicationId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationTransactionHeader_Select_Result>("usp_ApplicationTransactionHeader_Select", applicationIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_Document_Select_Result> usp_Document_Select(Nullable<int> applicationId, Nullable<int> roundNo, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var roundNoParameter = roundNo.HasValue ?
                new ObjectParameter("RoundNo", roundNo) :
                new ObjectParameter("RoundNo", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Document_Select_Result>("usp_Document_Select", applicationIdParameter, roundNoParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_RequestCancelApplication_Insert_Result> usp_RequestCancelApplication_Insert(Nullable<int> applicationID, Nullable<int> createdByUserId)
        {
            var applicationIDParameter = applicationID.HasValue ?
                new ObjectParameter("ApplicationID", applicationID) :
                new ObjectParameter("ApplicationID", typeof(int));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RequestCancelApplication_Insert_Result>("usp_RequestCancelApplication_Insert", applicationIDParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_RequestCancelApplication_Select_Result> usp_RequestCancelApplication_Select(Nullable<int> requestCancelApplicationId, Nullable<int> applicationId, Nullable<int> branchId, Nullable<int> approveStatusId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var requestCancelApplicationIdParameter = requestCancelApplicationId.HasValue ?
                new ObjectParameter("RequestCancelApplicationId", requestCancelApplicationId) :
                new ObjectParameter("RequestCancelApplicationId", typeof(int));
    
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var approveStatusIdParameter = approveStatusId.HasValue ?
                new ObjectParameter("ApproveStatusId", approveStatusId) :
                new ObjectParameter("ApproveStatusId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RequestCancelApplication_Select_Result>("usp_RequestCancelApplication_Select", requestCancelApplicationIdParameter, applicationIdParameter, branchIdParameter, approveStatusIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ApproveCause_Select_Result> usp_ApproveCause_Select(Nullable<int> approveCauseId, Nullable<int> approveCauseTypeId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var approveCauseIdParameter = approveCauseId.HasValue ?
                new ObjectParameter("ApproveCauseId", approveCauseId) :
                new ObjectParameter("ApproveCauseId", typeof(int));
    
            var approveCauseTypeIdParameter = approveCauseTypeId.HasValue ?
                new ObjectParameter("ApproveCauseTypeId", approveCauseTypeId) :
                new ObjectParameter("ApproveCauseTypeId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApproveCause_Select_Result>("usp_ApproveCause_Select", approveCauseIdParameter, approveCauseTypeIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ApproveStatus_Select_Result> usp_ApproveStatus_Select(Nullable<int> approveStatusId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var approveStatusIdParameter = approveStatusId.HasValue ?
                new ObjectParameter("ApproveStatusId", approveStatusId) :
                new ObjectParameter("ApproveStatusId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApproveStatus_Select_Result>("usp_ApproveStatus_Select", approveStatusIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_CustomerDetailCancelCause_Select_Result> usp_CustomerDetailCancelCause_Select(Nullable<int> customerDetailCancelCauseId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var customerDetailCancelCauseIdParameter = customerDetailCancelCauseId.HasValue ?
                new ObjectParameter("CustomerDetailCancelCauseId", customerDetailCancelCauseId) :
                new ObjectParameter("CustomerDetailCancelCauseId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CustomerDetailCancelCause_Select_Result>("usp_CustomerDetailCancelCause_Select", customerDetailCancelCauseIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_RequestCancelCustomer_Sent_Update_Result> usp_RequestCancelCustomer_Sent_Update(Nullable<int> requestCancelCustomerHeaderId, Nullable<System.DateTime> effectiveDate, Nullable<int> createdByUserId)
        {
            var requestCancelCustomerHeaderIdParameter = requestCancelCustomerHeaderId.HasValue ?
                new ObjectParameter("RequestCancelCustomerHeaderId", requestCancelCustomerHeaderId) :
                new ObjectParameter("RequestCancelCustomerHeaderId", typeof(int));
    
            var effectiveDateParameter = effectiveDate.HasValue ?
                new ObjectParameter("EffectiveDate", effectiveDate) :
                new ObjectParameter("EffectiveDate", typeof(System.DateTime));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RequestCancelCustomer_Sent_Update_Result>("usp_RequestCancelCustomer_Sent_Update", requestCancelCustomerHeaderIdParameter, effectiveDateParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_RequestCancelCustomerDetail_Insert_Result> usp_RequestCancelCustomerDetail_Insert(Nullable<int> requestCancelCustomerHeaderId, Nullable<int> customerDetailId, Nullable<int> customerDetailCancelCauseId, string remark, Nullable<int> createdByUserId)
        {
            var requestCancelCustomerHeaderIdParameter = requestCancelCustomerHeaderId.HasValue ?
                new ObjectParameter("RequestCancelCustomerHeaderId", requestCancelCustomerHeaderId) :
                new ObjectParameter("RequestCancelCustomerHeaderId", typeof(int));
    
            var customerDetailIdParameter = customerDetailId.HasValue ?
                new ObjectParameter("CustomerDetailId", customerDetailId) :
                new ObjectParameter("CustomerDetailId", typeof(int));
    
            var customerDetailCancelCauseIdParameter = customerDetailCancelCauseId.HasValue ?
                new ObjectParameter("CustomerDetailCancelCauseId", customerDetailCancelCauseId) :
                new ObjectParameter("CustomerDetailCancelCauseId", typeof(int));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RequestCancelCustomerDetail_Insert_Result>("usp_RequestCancelCustomerDetail_Insert", requestCancelCustomerHeaderIdParameter, customerDetailIdParameter, customerDetailCancelCauseIdParameter, remarkParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_RequestCancelCustomerDetail_Select_Result> usp_RequestCancelCustomerDetail_Select(Nullable<int> requestCancelCustomerDetailid, Nullable<int> requestCancelCustomerHeaderId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var requestCancelCustomerDetailidParameter = requestCancelCustomerDetailid.HasValue ?
                new ObjectParameter("RequestCancelCustomerDetailid", requestCancelCustomerDetailid) :
                new ObjectParameter("RequestCancelCustomerDetailid", typeof(int));
    
            var requestCancelCustomerHeaderIdParameter = requestCancelCustomerHeaderId.HasValue ?
                new ObjectParameter("RequestCancelCustomerHeaderId", requestCancelCustomerHeaderId) :
                new ObjectParameter("RequestCancelCustomerHeaderId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RequestCancelCustomerDetail_Select_Result>("usp_RequestCancelCustomerDetail_Select", requestCancelCustomerDetailidParameter, requestCancelCustomerHeaderIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_RequestCancelCustomerHeader_Insert_Result> usp_RequestCancelCustomerHeader_Insert(Nullable<int> applicationId, Nullable<int> createdByUserId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RequestCancelCustomerHeader_Insert_Result>("usp_RequestCancelCustomerHeader_Insert", applicationIdParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_RequestCancelCustomerHeader_Select_Result> usp_RequestCancelCustomerHeader_Select(Nullable<int> requestCancelCustomerHeaderId, Nullable<int> branchId, Nullable<int> approveStatusId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var requestCancelCustomerHeaderIdParameter = requestCancelCustomerHeaderId.HasValue ?
                new ObjectParameter("RequestCancelCustomerHeaderId", requestCancelCustomerHeaderId) :
                new ObjectParameter("RequestCancelCustomerHeaderId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var approveStatusIdParameter = approveStatusId.HasValue ?
                new ObjectParameter("ApproveStatusId", approveStatusId) :
                new ObjectParameter("ApproveStatusId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RequestCancelCustomerHeader_Select_Result>("usp_RequestCancelCustomerHeader_Select", requestCancelCustomerHeaderIdParameter, branchIdParameter, approveStatusIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_DocumentRequestCancel_Select_Result> usp_DocumentRequestCancel_Select(Nullable<int> referenceId, Nullable<int> docTypeId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var referenceIdParameter = referenceId.HasValue ?
                new ObjectParameter("ReferenceId", referenceId) :
                new ObjectParameter("ReferenceId", typeof(int));
    
            var docTypeIdParameter = docTypeId.HasValue ?
                new ObjectParameter("DocTypeId", docTypeId) :
                new ObjectParameter("DocTypeId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DocumentRequestCancel_Select_Result>("usp_DocumentRequestCancel_Select", referenceIdParameter, docTypeIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_RequestCancelApplication_Sent_Update_Result> usp_RequestCancelApplication_Sent_Update(Nullable<int> requestCancelApplicationId, Nullable<int> applicationCancelCauseId, string applicationCancelCauseCauseRemark, Nullable<int> createdByUserId)
        {
            var requestCancelApplicationIdParameter = requestCancelApplicationId.HasValue ?
                new ObjectParameter("RequestCancelApplicationId", requestCancelApplicationId) :
                new ObjectParameter("RequestCancelApplicationId", typeof(int));
    
            var applicationCancelCauseIdParameter = applicationCancelCauseId.HasValue ?
                new ObjectParameter("ApplicationCancelCauseId", applicationCancelCauseId) :
                new ObjectParameter("ApplicationCancelCauseId", typeof(int));
    
            var applicationCancelCauseCauseRemarkParameter = applicationCancelCauseCauseRemark != null ?
                new ObjectParameter("ApplicationCancelCauseCauseRemark", applicationCancelCauseCauseRemark) :
                new ObjectParameter("ApplicationCancelCauseCauseRemark", typeof(string));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RequestCancelApplication_Sent_Update_Result>("usp_RequestCancelApplication_Sent_Update", requestCancelApplicationIdParameter, applicationCancelCauseIdParameter, applicationCancelCauseCauseRemarkParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_RequestCancelApplication_Approve_Update_Result> usp_RequestCancelApplication_Approve_Update(Nullable<int> requestCancelApplicationId, Nullable<int> approveStatusId, Nullable<int> approveCauseId, string approveRemark, Nullable<int> approveByUserId)
        {
            var requestCancelApplicationIdParameter = requestCancelApplicationId.HasValue ?
                new ObjectParameter("RequestCancelApplicationId", requestCancelApplicationId) :
                new ObjectParameter("RequestCancelApplicationId", typeof(int));
    
            var approveStatusIdParameter = approveStatusId.HasValue ?
                new ObjectParameter("ApproveStatusId", approveStatusId) :
                new ObjectParameter("ApproveStatusId", typeof(int));
    
            var approveCauseIdParameter = approveCauseId.HasValue ?
                new ObjectParameter("ApproveCauseId", approveCauseId) :
                new ObjectParameter("ApproveCauseId", typeof(int));
    
            var approveRemarkParameter = approveRemark != null ?
                new ObjectParameter("ApproveRemark", approveRemark) :
                new ObjectParameter("ApproveRemark", typeof(string));
    
            var approveByUserIdParameter = approveByUserId.HasValue ?
                new ObjectParameter("ApproveByUserId", approveByUserId) :
                new ObjectParameter("ApproveByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RequestCancelApplication_Approve_Update_Result>("usp_RequestCancelApplication_Approve_Update", requestCancelApplicationIdParameter, approveStatusIdParameter, approveCauseIdParameter, approveRemarkParameter, approveByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_RequestCancelCustomerDetail_Validate_Result> usp_RequestCancelCustomerDetail_Validate(Nullable<int> customerDetailId)
        {
            var customerDetailIdParameter = customerDetailId.HasValue ?
                new ObjectParameter("CustomerDetailId", customerDetailId) :
                new ObjectParameter("CustomerDetailId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RequestCancelCustomerDetail_Validate_Result>("usp_RequestCancelCustomerDetail_Validate", customerDetailIdParameter);
        }
    
        public virtual ObjectResult<usp_CustomerDetail_SelectByName_Result> usp_CustomerDetail_SelectByName(string customerName, string idCardOrPassPor, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var idCardOrPassPorParameter = idCardOrPassPor != null ?
                new ObjectParameter("IdCardOrPassPor", idCardOrPassPor) :
                new ObjectParameter("IdCardOrPassPor", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CustomerDetail_SelectByName_Result>("usp_CustomerDetail_SelectByName", customerNameParameter, idCardOrPassPorParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_RequestCancelCustomer_Approve_Update_Result> usp_RequestCancelCustomer_Approve_Update(Nullable<int> requestCancelCustomerHeaderId, Nullable<int> approveStatusId, Nullable<int> approveCauseId, string approveRemark, Nullable<int> approveByUserId)
        {
            var requestCancelCustomerHeaderIdParameter = requestCancelCustomerHeaderId.HasValue ?
                new ObjectParameter("RequestCancelCustomerHeaderId", requestCancelCustomerHeaderId) :
                new ObjectParameter("RequestCancelCustomerHeaderId", typeof(int));
    
            var approveStatusIdParameter = approveStatusId.HasValue ?
                new ObjectParameter("ApproveStatusId", approveStatusId) :
                new ObjectParameter("ApproveStatusId", typeof(int));
    
            var approveCauseIdParameter = approveCauseId.HasValue ?
                new ObjectParameter("ApproveCauseId", approveCauseId) :
                new ObjectParameter("ApproveCauseId", typeof(int));
    
            var approveRemarkParameter = approveRemark != null ?
                new ObjectParameter("ApproveRemark", approveRemark) :
                new ObjectParameter("ApproveRemark", typeof(string));
    
            var approveByUserIdParameter = approveByUserId.HasValue ?
                new ObjectParameter("ApproveByUserId", approveByUserId) :
                new ObjectParameter("ApproveByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RequestCancelCustomer_Approve_Update_Result>("usp_RequestCancelCustomer_Approve_Update", requestCancelCustomerHeaderIdParameter, approveStatusIdParameter, approveCauseIdParameter, approveRemarkParameter, approveByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_OrganizeGroup_Select_Result> usp_OrganizeGroup_Select(Nullable<int> organizeGroupId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var organizeGroupIdParameter = organizeGroupId.HasValue ?
                new ObjectParameter("OrganizeGroupId", organizeGroupId) :
                new ObjectParameter("OrganizeGroupId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_OrganizeGroup_Select_Result>("usp_OrganizeGroup_Select", organizeGroupIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_OrganizeTitle_Select_Result> usp_OrganizeTitle_Select(Nullable<int> organizeTitleId, Nullable<int> organizeTitleTypeId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var organizeTitleIdParameter = organizeTitleId.HasValue ?
                new ObjectParameter("OrganizeTitleId", organizeTitleId) :
                new ObjectParameter("OrganizeTitleId", typeof(int));
    
            var organizeTitleTypeIdParameter = organizeTitleTypeId.HasValue ?
                new ObjectParameter("OrganizeTitleTypeId", organizeTitleTypeId) :
                new ObjectParameter("OrganizeTitleTypeId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_OrganizeTitle_Select_Result>("usp_OrganizeTitle_Select", organizeTitleIdParameter, organizeTitleTypeIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_TmpApplicationRoundImportCount_Select_Result> usp_TmpApplicationRoundImportCount_Select(string tmpGenerateCode, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var tmpGenerateCodeParameter = tmpGenerateCode != null ?
                new ObjectParameter("TmpGenerateCode", tmpGenerateCode) :
                new ObjectParameter("TmpGenerateCode", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TmpApplicationRoundImportCount_Select_Result>("usp_TmpApplicationRoundImportCount_Select", tmpGenerateCodeParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_GenerateReportCancel_Insert_Result> usp_GenerateReportCancel_Insert(Nullable<int> insuranceId, Nullable<int> createdByUserId)
        {
            var insuranceIdParameter = insuranceId.HasValue ?
                new ObjectParameter("InsuranceId", insuranceId) :
                new ObjectParameter("InsuranceId", typeof(int));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GenerateReportCancel_Insert_Result>("usp_GenerateReportCancel_Insert", insuranceIdParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_ReportCancelApplicationRound_Select_Result> usp_ReportCancelApplicationRound_Select(Nullable<int> applicationRoundId, Nullable<int> insuranceId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationRoundIdParameter = applicationRoundId.HasValue ?
                new ObjectParameter("ApplicationRoundId", applicationRoundId) :
                new ObjectParameter("ApplicationRoundId", typeof(int));
    
            var insuranceIdParameter = insuranceId.HasValue ?
                new ObjectParameter("InsuranceId", insuranceId) :
                new ObjectParameter("InsuranceId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReportCancelApplicationRound_Select_Result>("usp_ReportCancelApplicationRound_Select", applicationRoundIdParameter, insuranceIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ReportCompensationApplicationRound_Select_Result> usp_ReportCompensationApplicationRound_Select(Nullable<System.DateTime> period)
        {
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReportCompensationApplicationRound_Select_Result>("usp_ReportCompensationApplicationRound_Select", periodParameter);
        }
    
        public virtual ObjectResult<usp_ProductBenefit_Select_Result> usp_ProductBenefit_Select(Nullable<int> product_ID, Nullable<int> benefitTypeId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var product_IDParameter = product_ID.HasValue ?
                new ObjectParameter("Product_ID", product_ID) :
                new ObjectParameter("Product_ID", typeof(int));
    
            var benefitTypeIdParameter = benefitTypeId.HasValue ?
                new ObjectParameter("BenefitTypeId", benefitTypeId) :
                new ObjectParameter("BenefitTypeId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProductBenefit_Select_Result>("usp_ProductBenefit_Select", product_IDParameter, benefitTypeIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ProgramManual_Select_Result> usp_ProgramManual_Select(Nullable<int> productTypeId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var productTypeIdParameter = productTypeId.HasValue ?
                new ObjectParameter("ProductTypeId", productTypeId) :
                new ObjectParameter("ProductTypeId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProgramManual_Select_Result>("usp_ProgramManual_Select", productTypeIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationDetail_InsertV2_Result> usp_ApplicationDetail_InsertV2(Nullable<int> organizeId, string applicationName, Nullable<System.DateTime> startCoverDate, Nullable<System.DateTime> endCoverDate, Nullable<int> productId, Nullable<int> branchId, Nullable<int> titleId, string firstName, string lastName, string mobileNumber, Nullable<int> bankId, string accountName, string accountNo, string idCardNumber, string passPortNumber, Nullable<bool> isContact, Nullable<int> createdByUserId)
        {
            var organizeIdParameter = organizeId.HasValue ?
                new ObjectParameter("OrganizeId", organizeId) :
                new ObjectParameter("OrganizeId", typeof(int));
    
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var startCoverDateParameter = startCoverDate.HasValue ?
                new ObjectParameter("StartCoverDate", startCoverDate) :
                new ObjectParameter("StartCoverDate", typeof(System.DateTime));
    
            var endCoverDateParameter = endCoverDate.HasValue ?
                new ObjectParameter("EndCoverDate", endCoverDate) :
                new ObjectParameter("EndCoverDate", typeof(System.DateTime));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var titleIdParameter = titleId.HasValue ?
                new ObjectParameter("TitleId", titleId) :
                new ObjectParameter("TitleId", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var bankIdParameter = bankId.HasValue ?
                new ObjectParameter("BankId", bankId) :
                new ObjectParameter("BankId", typeof(int));
    
            var accountNameParameter = accountName != null ?
                new ObjectParameter("AccountName", accountName) :
                new ObjectParameter("AccountName", typeof(string));
    
            var accountNoParameter = accountNo != null ?
                new ObjectParameter("AccountNo", accountNo) :
                new ObjectParameter("AccountNo", typeof(string));
    
            var idCardNumberParameter = idCardNumber != null ?
                new ObjectParameter("IdCardNumber", idCardNumber) :
                new ObjectParameter("IdCardNumber", typeof(string));
    
            var passPortNumberParameter = passPortNumber != null ?
                new ObjectParameter("PassPortNumber", passPortNumber) :
                new ObjectParameter("PassPortNumber", typeof(string));
    
            var isContactParameter = isContact.HasValue ?
                new ObjectParameter("IsContact", isContact) :
                new ObjectParameter("IsContact", typeof(bool));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationDetail_InsertV2_Result>("usp_ApplicationDetail_InsertV2", organizeIdParameter, applicationNameParameter, startCoverDateParameter, endCoverDateParameter, productIdParameter, branchIdParameter, titleIdParameter, firstNameParameter, lastNameParameter, mobileNumberParameter, bankIdParameter, accountNameParameter, accountNoParameter, idCardNumberParameter, passPortNumberParameter, isContactParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_OrganizeBank_Select_Result> usp_OrganizeBank_Select(Nullable<int> organizeId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var organizeIdParameter = organizeId.HasValue ?
                new ObjectParameter("OrganizeId", organizeId) :
                new ObjectParameter("OrganizeId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_OrganizeBank_Select_Result>("usp_OrganizeBank_Select", organizeIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationDetail_UpdateV2_Result> usp_ApplicationDetail_UpdateV2(Nullable<int> applicationId, Nullable<int> organizeId, string applicationName, Nullable<int> applicationStatusId, Nullable<System.DateTime> startCoverDate, Nullable<System.DateTime> endCoverDate, Nullable<int> productId, Nullable<int> branchId, Nullable<int> titleId, string firstName, string lastName, string mobileNumber, Nullable<int> bankId, string accountName, string accountNo, string idCardNumber, string passPortNumber, Nullable<bool> isContact, Nullable<int> updateByUserId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var organizeIdParameter = organizeId.HasValue ?
                new ObjectParameter("OrganizeId", organizeId) :
                new ObjectParameter("OrganizeId", typeof(int));
    
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var applicationStatusIdParameter = applicationStatusId.HasValue ?
                new ObjectParameter("ApplicationStatusId", applicationStatusId) :
                new ObjectParameter("ApplicationStatusId", typeof(int));
    
            var startCoverDateParameter = startCoverDate.HasValue ?
                new ObjectParameter("StartCoverDate", startCoverDate) :
                new ObjectParameter("StartCoverDate", typeof(System.DateTime));
    
            var endCoverDateParameter = endCoverDate.HasValue ?
                new ObjectParameter("EndCoverDate", endCoverDate) :
                new ObjectParameter("EndCoverDate", typeof(System.DateTime));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var titleIdParameter = titleId.HasValue ?
                new ObjectParameter("TitleId", titleId) :
                new ObjectParameter("TitleId", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var bankIdParameter = bankId.HasValue ?
                new ObjectParameter("BankId", bankId) :
                new ObjectParameter("BankId", typeof(int));
    
            var accountNameParameter = accountName != null ?
                new ObjectParameter("AccountName", accountName) :
                new ObjectParameter("AccountName", typeof(string));
    
            var accountNoParameter = accountNo != null ?
                new ObjectParameter("AccountNo", accountNo) :
                new ObjectParameter("AccountNo", typeof(string));
    
            var idCardNumberParameter = idCardNumber != null ?
                new ObjectParameter("IdCardNumber", idCardNumber) :
                new ObjectParameter("IdCardNumber", typeof(string));
    
            var passPortNumberParameter = passPortNumber != null ?
                new ObjectParameter("PassPortNumber", passPortNumber) :
                new ObjectParameter("PassPortNumber", typeof(string));
    
            var isContactParameter = isContact.HasValue ?
                new ObjectParameter("IsContact", isContact) :
                new ObjectParameter("IsContact", typeof(bool));
    
            var updateByUserIdParameter = updateByUserId.HasValue ?
                new ObjectParameter("UpdateByUserId", updateByUserId) :
                new ObjectParameter("UpdateByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationDetail_UpdateV2_Result>("usp_ApplicationDetail_UpdateV2", applicationIdParameter, organizeIdParameter, applicationNameParameter, applicationStatusIdParameter, startCoverDateParameter, endCoverDateParameter, productIdParameter, branchIdParameter, titleIdParameter, firstNameParameter, lastNameParameter, mobileNumberParameter, bankIdParameter, accountNameParameter, accountNoParameter, idCardNumberParameter, passPortNumberParameter, isContactParameter, updateByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_RequestEndorseContactAndAccount_Approve_Update_Result> usp_RequestEndorseContactAndAccount_Approve_Update(Nullable<int> requestEndorseContactAndAccountId, Nullable<int> approveStatusId, Nullable<int> approveCauseId, string approveRemark, Nullable<int> approveByUserId)
        {
            var requestEndorseContactAndAccountIdParameter = requestEndorseContactAndAccountId.HasValue ?
                new ObjectParameter("RequestEndorseContactAndAccountId", requestEndorseContactAndAccountId) :
                new ObjectParameter("RequestEndorseContactAndAccountId", typeof(int));
    
            var approveStatusIdParameter = approveStatusId.HasValue ?
                new ObjectParameter("ApproveStatusId", approveStatusId) :
                new ObjectParameter("ApproveStatusId", typeof(int));
    
            var approveCauseIdParameter = approveCauseId.HasValue ?
                new ObjectParameter("ApproveCauseId", approveCauseId) :
                new ObjectParameter("ApproveCauseId", typeof(int));
    
            var approveRemarkParameter = approveRemark != null ?
                new ObjectParameter("ApproveRemark", approveRemark) :
                new ObjectParameter("ApproveRemark", typeof(string));
    
            var approveByUserIdParameter = approveByUserId.HasValue ?
                new ObjectParameter("ApproveByUserId", approveByUserId) :
                new ObjectParameter("ApproveByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RequestEndorseContactAndAccount_Approve_Update_Result>("usp_RequestEndorseContactAndAccount_Approve_Update", requestEndorseContactAndAccountIdParameter, approveStatusIdParameter, approveCauseIdParameter, approveRemarkParameter, approveByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_RequestEndorseContactAndAccount_Insert_Result> usp_RequestEndorseContactAndAccount_Insert(Nullable<int> applicationId, Nullable<int> createdByUserId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RequestEndorseContactAndAccount_Insert_Result>("usp_RequestEndorseContactAndAccount_Insert", applicationIdParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_RequestEndorseContactAndAccount_Update_Result> usp_RequestEndorseContactAndAccount_Update(Nullable<int> referenceId, Nullable<int> toContactTitleId, string toContactFirstName, string toContactLastName, string toContactMobileNumber, Nullable<int> toBankId, string toAccountNo, string toAccountName, string toIdCardNumber, string toPassPortNumber, Nullable<int> createdByUserId)
        {
            var referenceIdParameter = referenceId.HasValue ?
                new ObjectParameter("ReferenceId", referenceId) :
                new ObjectParameter("ReferenceId", typeof(int));
    
            var toContactTitleIdParameter = toContactTitleId.HasValue ?
                new ObjectParameter("ToContactTitleId", toContactTitleId) :
                new ObjectParameter("ToContactTitleId", typeof(int));
    
            var toContactFirstNameParameter = toContactFirstName != null ?
                new ObjectParameter("ToContactFirstName", toContactFirstName) :
                new ObjectParameter("ToContactFirstName", typeof(string));
    
            var toContactLastNameParameter = toContactLastName != null ?
                new ObjectParameter("ToContactLastName", toContactLastName) :
                new ObjectParameter("ToContactLastName", typeof(string));
    
            var toContactMobileNumberParameter = toContactMobileNumber != null ?
                new ObjectParameter("ToContactMobileNumber", toContactMobileNumber) :
                new ObjectParameter("ToContactMobileNumber", typeof(string));
    
            var toBankIdParameter = toBankId.HasValue ?
                new ObjectParameter("ToBankId", toBankId) :
                new ObjectParameter("ToBankId", typeof(int));
    
            var toAccountNoParameter = toAccountNo != null ?
                new ObjectParameter("ToAccountNo", toAccountNo) :
                new ObjectParameter("ToAccountNo", typeof(string));
    
            var toAccountNameParameter = toAccountName != null ?
                new ObjectParameter("ToAccountName", toAccountName) :
                new ObjectParameter("ToAccountName", typeof(string));
    
            var toIdCardNumberParameter = toIdCardNumber != null ?
                new ObjectParameter("ToIdCardNumber", toIdCardNumber) :
                new ObjectParameter("ToIdCardNumber", typeof(string));
    
            var toPassPortNumberParameter = toPassPortNumber != null ?
                new ObjectParameter("ToPassPortNumber", toPassPortNumber) :
                new ObjectParameter("ToPassPortNumber", typeof(string));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RequestEndorseContactAndAccount_Update_Result>("usp_RequestEndorseContactAndAccount_Update", referenceIdParameter, toContactTitleIdParameter, toContactFirstNameParameter, toContactLastNameParameter, toContactMobileNumberParameter, toBankIdParameter, toAccountNoParameter, toAccountNameParameter, toIdCardNumberParameter, toPassPortNumberParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_DocumentRequestEndorseContactAndAccount_SelectById_Result> usp_DocumentRequestEndorseContactAndAccount_SelectById(Nullable<int> referenceId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var referenceIdParameter = referenceId.HasValue ?
                new ObjectParameter("ReferenceId", referenceId) :
                new ObjectParameter("ReferenceId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DocumentRequestEndorseContactAndAccount_SelectById_Result>("usp_DocumentRequestEndorseContactAndAccount_SelectById", referenceIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_RequestEndorseContactAndAccount_Select_Result> usp_RequestEndorseContactAndAccount_Select(Nullable<int> branchId, Nullable<int> approveStatusid, Nullable<int> applicationId, string applicationName, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var approveStatusidParameter = approveStatusid.HasValue ?
                new ObjectParameter("ApproveStatusid", approveStatusid) :
                new ObjectParameter("ApproveStatusid", typeof(int));
    
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RequestEndorseContactAndAccount_Select_Result>("usp_RequestEndorseContactAndAccount_Select", branchIdParameter, approveStatusidParameter, applicationIdParameter, applicationNameParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_RequestEndorseContactAndAccount_SelectById_Result> usp_RequestEndorseContactAndAccount_SelectById(Nullable<int> requestEndorseContactAndAccountId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var requestEndorseContactAndAccountIdParameter = requestEndorseContactAndAccountId.HasValue ?
                new ObjectParameter("RequestEndorseContactAndAccountId", requestEndorseContactAndAccountId) :
                new ObjectParameter("RequestEndorseContactAndAccountId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RequestEndorseContactAndAccount_SelectById_Result>("usp_RequestEndorseContactAndAccount_SelectById", requestEndorseContactAndAccountIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationByPass_Check_Result> usp_ApplicationByPass_Check(Nullable<int> applicationId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationByPass_Check_Result>("usp_ApplicationByPass_Check", applicationIdParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationRound_Select_V2_Result> usp_ApplicationRound_Select_V2(Nullable<int> applicationId, Nullable<int> branchId, string applicationRoundStatusIdList, string applicationRoundPaymentStatusIdList, Nullable<System.DateTime> period, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var applicationRoundStatusIdListParameter = applicationRoundStatusIdList != null ?
                new ObjectParameter("ApplicationRoundStatusIdList", applicationRoundStatusIdList) :
                new ObjectParameter("ApplicationRoundStatusIdList", typeof(string));
    
            var applicationRoundPaymentStatusIdListParameter = applicationRoundPaymentStatusIdList != null ?
                new ObjectParameter("ApplicationRoundPaymentStatusIdList", applicationRoundPaymentStatusIdList) :
                new ObjectParameter("ApplicationRoundPaymentStatusIdList", typeof(string));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationRound_Select_V2_Result>("usp_ApplicationRound_Select_V2", applicationIdParameter, branchIdParameter, applicationRoundStatusIdListParameter, applicationRoundPaymentStatusIdListParameter, periodParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual int usp_GenerateCode_ForReportGroup(string transactionCodeControlTypeDetail, ObjectParameter result)
        {
            var transactionCodeControlTypeDetailParameter = transactionCodeControlTypeDetail != null ?
                new ObjectParameter("TransactionCodeControlTypeDetail", transactionCodeControlTypeDetail) :
                new ObjectParameter("TransactionCodeControlTypeDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GenerateCode_ForReportGroup", transactionCodeControlTypeDetailParameter, result);
        }
    
        public virtual ObjectResult<usp_TmpApplicationPolicyImport_Insert_Result> usp_TmpApplicationPolicyImport_Insert(string tmpApplicationPolicyImportCode, string applicationCode, string policyno)
        {
            var tmpApplicationPolicyImportCodeParameter = tmpApplicationPolicyImportCode != null ?
                new ObjectParameter("TmpApplicationPolicyImportCode", tmpApplicationPolicyImportCode) :
                new ObjectParameter("TmpApplicationPolicyImportCode", typeof(string));
    
            var applicationCodeParameter = applicationCode != null ?
                new ObjectParameter("ApplicationCode", applicationCode) :
                new ObjectParameter("ApplicationCode", typeof(string));
    
            var policynoParameter = policyno != null ?
                new ObjectParameter("Policyno", policyno) :
                new ObjectParameter("Policyno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TmpApplicationPolicyImport_Insert_Result>("usp_TmpApplicationPolicyImport_Insert", tmpApplicationPolicyImportCodeParameter, applicationCodeParameter, policynoParameter);
        }
    
        public virtual ObjectResult<usp_TmpApplicationPolicyImport_OverView_Select_Result> usp_TmpApplicationPolicyImport_OverView_Select(string tmpApplicationPolicyImportCode, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var tmpApplicationPolicyImportCodeParameter = tmpApplicationPolicyImportCode != null ?
                new ObjectParameter("TmpApplicationPolicyImportCode", tmpApplicationPolicyImportCode) :
                new ObjectParameter("TmpApplicationPolicyImportCode", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TmpApplicationPolicyImport_OverView_Select_Result>("usp_TmpApplicationPolicyImport_OverView_Select", tmpApplicationPolicyImportCodeParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_TmpApplicationPolicyImport_ToApplication_Update_Result> usp_TmpApplicationPolicyImport_ToApplication_Update(string tmpApplicationPolicyImportCode, Nullable<int> updateByUserId)
        {
            var tmpApplicationPolicyImportCodeParameter = tmpApplicationPolicyImportCode != null ?
                new ObjectParameter("TmpApplicationPolicyImportCode", tmpApplicationPolicyImportCode) :
                new ObjectParameter("TmpApplicationPolicyImportCode", typeof(string));
    
            var updateByUserIdParameter = updateByUserId.HasValue ?
                new ObjectParameter("UpdateByUserId", updateByUserId) :
                new ObjectParameter("UpdateByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TmpApplicationPolicyImport_ToApplication_Update_Result>("usp_TmpApplicationPolicyImport_ToApplication_Update", tmpApplicationPolicyImportCodeParameter, updateByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_TmpApplicationPolicyImport_Validate_Result1> usp_TmpApplicationPolicyImport_Validate(string tmpApplicationPolicyImportCode)
        {
            var tmpApplicationPolicyImportCodeParameter = tmpApplicationPolicyImportCode != null ?
                new ObjectParameter("TmpApplicationPolicyImportCode", tmpApplicationPolicyImportCode) :
                new ObjectParameter("TmpApplicationPolicyImportCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TmpApplicationPolicyImport_Validate_Result1>("usp_TmpApplicationPolicyImport_Validate", tmpApplicationPolicyImportCodeParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationPolicyNo_Select_Result> usp_ApplicationPolicyNo_Select(Nullable<int> applicationId, Nullable<int> provinceID, string applicationName, string applicationCode, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var provinceIDParameter = provinceID.HasValue ?
                new ObjectParameter("ProvinceID", provinceID) :
                new ObjectParameter("ProvinceID", typeof(int));
    
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var applicationCodeParameter = applicationCode != null ?
                new ObjectParameter("ApplicationCode", applicationCode) :
                new ObjectParameter("ApplicationCode", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationPolicyNo_Select_Result>("usp_ApplicationPolicyNo_Select", applicationIdParameter, provinceIDParameter, applicationNameParameter, applicationCodeParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationPolicyNo_Update_Result> usp_ApplicationPolicyNo_Update(Nullable<int> applicationId, string policyNo, Nullable<int> updateByUserId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var policyNoParameter = policyNo != null ?
                new ObjectParameter("PolicyNo", policyNo) :
                new ObjectParameter("PolicyNo", typeof(string));
    
            var updateByUserIdParameter = updateByUserId.HasValue ?
                new ObjectParameter("UpdateByUserId", updateByUserId) :
                new ObjectParameter("UpdateByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationPolicyNo_Update_Result>("usp_ApplicationPolicyNo_Update", applicationIdParameter, policyNoParameter, updateByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_TicketDetail_Select_Result> usp_TicketDetail_Select(string tmpGenTicketHeaderCode)
        {
            var tmpGenTicketHeaderCodeParameter = tmpGenTicketHeaderCode != null ?
                new ObjectParameter("TmpGenTicketHeaderCode", tmpGenTicketHeaderCode) :
                new ObjectParameter("TmpGenTicketHeaderCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TicketDetail_Select_Result>("usp_TicketDetail_Select", tmpGenTicketHeaderCodeParameter);
        }
    
        public virtual ObjectResult<usp_TicketHeader_Select_Result> usp_TicketHeader_Select(Nullable<int> applicationId, string applicationName, string applicationCode, Nullable<int> branchId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var applicationCodeParameter = applicationCode != null ?
                new ObjectParameter("ApplicationCode", applicationCode) :
                new ObjectParameter("ApplicationCode", typeof(string));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TicketHeader_Select_Result>("usp_TicketHeader_Select", applicationIdParameter, applicationNameParameter, applicationCodeParameter, branchIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_TmpTicketDetail_Insert_Result> usp_TmpTicketDetail_Insert(string tmpGenTicketHeaderCode, Nullable<int> customerDetailId)
        {
            var tmpGenTicketHeaderCodeParameter = tmpGenTicketHeaderCode != null ?
                new ObjectParameter("TmpGenTicketHeaderCode", tmpGenTicketHeaderCode) :
                new ObjectParameter("TmpGenTicketHeaderCode", typeof(string));
    
            var customerDetailIdParameter = customerDetailId.HasValue ?
                new ObjectParameter("CustomerDetailId", customerDetailId) :
                new ObjectParameter("CustomerDetailId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TmpTicketDetail_Insert_Result>("usp_TmpTicketDetail_Insert", tmpGenTicketHeaderCodeParameter, customerDetailIdParameter);
        }
    
        public virtual ObjectResult<usp_TmpTicketHeader_Delete_Result> usp_TmpTicketHeader_Delete(string tmpGenTicketHeaderCode)
        {
            var tmpGenTicketHeaderCodeParameter = tmpGenTicketHeaderCode != null ?
                new ObjectParameter("TmpGenTicketHeaderCode", tmpGenTicketHeaderCode) :
                new ObjectParameter("TmpGenTicketHeaderCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TmpTicketHeader_Delete_Result>("usp_TmpTicketHeader_Delete", tmpGenTicketHeaderCodeParameter);
        }
    
        public virtual ObjectResult<usp_TmpTicketHeader_Insert_Result> usp_TmpTicketHeader_Insert(Nullable<int> appId)
        {
            var appIdParameter = appId.HasValue ?
                new ObjectParameter("AppId", appId) :
                new ObjectParameter("AppId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TmpTicketHeader_Insert_Result>("usp_TmpTicketHeader_Insert", appIdParameter);
        }
    
        public virtual int usp_CustomerApplication_PAC_Organize_InsertOrUpdate(Nullable<int> applicationId, Nullable<int> createdByUserId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CustomerApplication_PAC_Organize_InsertOrUpdate", applicationIdParameter, createdByUserIdParameter);
        }
    
        public virtual int usp_CustomerApplication_PAC_Person_InsertOrUpdate(Nullable<int> applicationRoundId, Nullable<int> createdByUserId)
        {
            var applicationRoundIdParameter = applicationRoundId.HasValue ?
                new ObjectParameter("ApplicationRoundId", applicationRoundId) :
                new ObjectParameter("ApplicationRoundId", typeof(int));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CustomerApplication_PAC_Person_InsertOrUpdate", applicationRoundIdParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_PovinceByBranch_Select_Result> usp_PovinceByBranch_Select(Nullable<int> branchId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PovinceByBranch_Select_Result>("usp_PovinceByBranch_Select", branchIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_GetPAApplicationDetail_Result> usp_GetPAApplicationDetail(string applicationCode)
        {
            var applicationCodeParameter = applicationCode != null ?
                new ObjectParameter("ApplicationCode", applicationCode) :
                new ObjectParameter("ApplicationCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetPAApplicationDetail_Result>("usp_GetPAApplicationDetail", applicationCodeParameter);
        }
    
        public virtual ObjectResult<usp_PAApplicationSearch_Select_Result> usp_PAApplicationSearch_Select(Nullable<int> policyYear, Nullable<int> provinceId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var policyYearParameter = policyYear.HasValue ?
                new ObjectParameter("PolicyYear", policyYear) :
                new ObjectParameter("PolicyYear", typeof(int));
    
            var provinceIdParameter = provinceId.HasValue ?
                new ObjectParameter("ProvinceId", provinceId) :
                new ObjectParameter("ProvinceId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PAApplicationSearch_Select_Result>("usp_PAApplicationSearch_Select", policyYearParameter, provinceIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_PolicyYear_Select_Result> usp_PolicyYear_Select(Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PolicyYear_Select_Result>("usp_PolicyYear_Select", indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_PersonnelApplication_Insert_Result> usp_PersonnelApplication_Insert(Nullable<int> pAYear, string personnelApplicationName, string refApplicationCode, Nullable<int> refSchoolOrganizeId, Nullable<int> productId, Nullable<int> branchId, Nullable<System.DateTime> startCoverDate, Nullable<System.DateTime> effectiveDate, Nullable<System.DateTime> endCoverDate, Nullable<int> createdByUserId)
        {
            var pAYearParameter = pAYear.HasValue ?
                new ObjectParameter("PAYear", pAYear) :
                new ObjectParameter("PAYear", typeof(int));
    
            var personnelApplicationNameParameter = personnelApplicationName != null ?
                new ObjectParameter("PersonnelApplicationName", personnelApplicationName) :
                new ObjectParameter("PersonnelApplicationName", typeof(string));
    
            var refApplicationCodeParameter = refApplicationCode != null ?
                new ObjectParameter("RefApplicationCode", refApplicationCode) :
                new ObjectParameter("RefApplicationCode", typeof(string));
    
            var refSchoolOrganizeIdParameter = refSchoolOrganizeId.HasValue ?
                new ObjectParameter("RefSchoolOrganizeId", refSchoolOrganizeId) :
                new ObjectParameter("RefSchoolOrganizeId", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var startCoverDateParameter = startCoverDate.HasValue ?
                new ObjectParameter("StartCoverDate", startCoverDate) :
                new ObjectParameter("StartCoverDate", typeof(System.DateTime));
    
            var effectiveDateParameter = effectiveDate.HasValue ?
                new ObjectParameter("EffectiveDate", effectiveDate) :
                new ObjectParameter("EffectiveDate", typeof(System.DateTime));
    
            var endCoverDateParameter = endCoverDate.HasValue ?
                new ObjectParameter("EndCoverDate", endCoverDate) :
                new ObjectParameter("EndCoverDate", typeof(System.DateTime));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonnelApplication_Insert_Result>("usp_PersonnelApplication_Insert", pAYearParameter, personnelApplicationNameParameter, refApplicationCodeParameter, refSchoolOrganizeIdParameter, productIdParameter, branchIdParameter, startCoverDateParameter, effectiveDateParameter, endCoverDateParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_TmpPersonnelCustomerDetail_Insert_Result> usp_TmpPersonnelCustomerDetail_Insert(Nullable<System.Guid> tempId, string titleName, string firstName, string lastName, string idCareNumber, string passPortNumber, string position, string mobileNumber)
        {
            var tempIdParameter = tempId.HasValue ?
                new ObjectParameter("TempId", tempId) :
                new ObjectParameter("TempId", typeof(System.Guid));
    
            var titleNameParameter = titleName != null ?
                new ObjectParameter("TitleName", titleName) :
                new ObjectParameter("TitleName", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var idCareNumberParameter = idCareNumber != null ?
                new ObjectParameter("IdCareNumber", idCareNumber) :
                new ObjectParameter("IdCareNumber", typeof(string));
    
            var passPortNumberParameter = passPortNumber != null ?
                new ObjectParameter("PassPortNumber", passPortNumber) :
                new ObjectParameter("PassPortNumber", typeof(string));
    
            var positionParameter = position != null ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(string));
    
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TmpPersonnelCustomerDetail_Insert_Result>("usp_TmpPersonnelCustomerDetail_Insert", tempIdParameter, titleNameParameter, firstNameParameter, lastNameParameter, idCareNumberParameter, passPortNumberParameter, positionParameter, mobileNumberParameter);
        }
    
        public virtual ObjectResult<usp_TmpPersonnelCustomerDetail_Preview_Result> usp_TmpPersonnelCustomerDetail_Preview(Nullable<System.Guid> tempId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var tempIdParameter = tempId.HasValue ?
                new ObjectParameter("TempId", tempId) :
                new ObjectParameter("TempId", typeof(System.Guid));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TmpPersonnelCustomerDetail_Preview_Result>("usp_TmpPersonnelCustomerDetail_Preview", tempIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_TmpPersonnelCustomerDetail_Validate_Result> usp_TmpPersonnelCustomerDetail_Validate(Nullable<System.Guid> tempId)
        {
            var tempIdParameter = tempId.HasValue ?
                new ObjectParameter("TempId", tempId) :
                new ObjectParameter("TempId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TmpPersonnelCustomerDetail_Validate_Result>("usp_TmpPersonnelCustomerDetail_Validate", tempIdParameter);
        }
    
        public virtual ObjectResult<usp_PersonnelProduct_Select_Result> usp_PersonnelProduct_Select(Nullable<int> productId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonnelProduct_Select_Result>("usp_PersonnelProduct_Select", productIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_GetPersonnelApplicationDetail_Result> usp_GetPersonnelApplicationDetail(Nullable<int> personnelApplicationId)
        {
            var personnelApplicationIdParameter = personnelApplicationId.HasValue ?
                new ObjectParameter("PersonnelApplicationId", personnelApplicationId) :
                new ObjectParameter("PersonnelApplicationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetPersonnelApplicationDetail_Result>("usp_GetPersonnelApplicationDetail", personnelApplicationIdParameter);
        }
    
        public virtual ObjectResult<usp_PersonnelApplication_Select_Result> usp_PersonnelApplication_Select(Nullable<int> personnelApplicationId, Nullable<int> branchId, Nullable<int> year, Nullable<int> personnelApplicationStatusId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var personnelApplicationIdParameter = personnelApplicationId.HasValue ?
                new ObjectParameter("PersonnelApplicationId", personnelApplicationId) :
                new ObjectParameter("PersonnelApplicationId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var personnelApplicationStatusIdParameter = personnelApplicationStatusId.HasValue ?
                new ObjectParameter("PersonnelApplicationStatusId", personnelApplicationStatusId) :
                new ObjectParameter("PersonnelApplicationStatusId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonnelApplication_Select_Result>("usp_PersonnelApplication_Select", personnelApplicationIdParameter, branchIdParameter, yearParameter, personnelApplicationStatusIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_PersonnelApplication_Update_Result> usp_PersonnelApplication_Update(Nullable<int> personnelApplicationId, Nullable<int> productId, Nullable<int> updatedByUserId)
        {
            var personnelApplicationIdParameter = personnelApplicationId.HasValue ?
                new ObjectParameter("PersonnelApplicationId", personnelApplicationId) :
                new ObjectParameter("PersonnelApplicationId", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var updatedByUserIdParameter = updatedByUserId.HasValue ?
                new ObjectParameter("UpdatedByUserId", updatedByUserId) :
                new ObjectParameter("UpdatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonnelApplication_Update_Result>("usp_PersonnelApplication_Update", personnelApplicationIdParameter, productIdParameter, updatedByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_PersonnelApplicationCancelCause_Select_Result> usp_PersonnelApplicationCancelCause_Select(Nullable<int> personnelApplicationCancelCauseId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var personnelApplicationCancelCauseIdParameter = personnelApplicationCancelCauseId.HasValue ?
                new ObjectParameter("PersonnelApplicationCancelCauseId", personnelApplicationCancelCauseId) :
                new ObjectParameter("PersonnelApplicationCancelCauseId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonnelApplicationCancelCause_Select_Result>("usp_PersonnelApplicationCancelCause_Select", personnelApplicationCancelCauseIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_PersonnelApplicationRound_Select_Result> usp_PersonnelApplicationRound_Select(Nullable<int> year, Nullable<int> branchId, Nullable<int> personnelApplicationRoundId, string personnelApplicationRoundStatusIdList, Nullable<bool> isEndorse, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var personnelApplicationRoundIdParameter = personnelApplicationRoundId.HasValue ?
                new ObjectParameter("PersonnelApplicationRoundId", personnelApplicationRoundId) :
                new ObjectParameter("PersonnelApplicationRoundId", typeof(int));
    
            var personnelApplicationRoundStatusIdListParameter = personnelApplicationRoundStatusIdList != null ?
                new ObjectParameter("PersonnelApplicationRoundStatusIdList", personnelApplicationRoundStatusIdList) :
                new ObjectParameter("PersonnelApplicationRoundStatusIdList", typeof(string));
    
            var isEndorseParameter = isEndorse.HasValue ?
                new ObjectParameter("IsEndorse", isEndorse) :
                new ObjectParameter("IsEndorse", typeof(bool));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonnelApplicationRound_Select_Result>("usp_PersonnelApplicationRound_Select", yearParameter, branchIdParameter, personnelApplicationRoundIdParameter, personnelApplicationRoundStatusIdListParameter, isEndorseParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_PersonnelApplicationRoundApprove_Update_Result> usp_PersonnelApplicationRoundApprove_Update(Nullable<int> personnelApplicationRoundId, Nullable<int> personnelApplicationRoundStatusId, Nullable<int> personnelApplicationRoundApproveCauseId, string personnelApplicationRoundApproveRemark, Nullable<int> updatedByUserId)
        {
            var personnelApplicationRoundIdParameter = personnelApplicationRoundId.HasValue ?
                new ObjectParameter("PersonnelApplicationRoundId", personnelApplicationRoundId) :
                new ObjectParameter("PersonnelApplicationRoundId", typeof(int));
    
            var personnelApplicationRoundStatusIdParameter = personnelApplicationRoundStatusId.HasValue ?
                new ObjectParameter("PersonnelApplicationRoundStatusId", personnelApplicationRoundStatusId) :
                new ObjectParameter("PersonnelApplicationRoundStatusId", typeof(int));
    
            var personnelApplicationRoundApproveCauseIdParameter = personnelApplicationRoundApproveCauseId.HasValue ?
                new ObjectParameter("PersonnelApplicationRoundApproveCauseId", personnelApplicationRoundApproveCauseId) :
                new ObjectParameter("PersonnelApplicationRoundApproveCauseId", typeof(int));
    
            var personnelApplicationRoundApproveRemarkParameter = personnelApplicationRoundApproveRemark != null ?
                new ObjectParameter("PersonnelApplicationRoundApproveRemark", personnelApplicationRoundApproveRemark) :
                new ObjectParameter("PersonnelApplicationRoundApproveRemark", typeof(string));
    
            var updatedByUserIdParameter = updatedByUserId.HasValue ?
                new ObjectParameter("UpdatedByUserId", updatedByUserId) :
                new ObjectParameter("UpdatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonnelApplicationRoundApprove_Update_Result>("usp_PersonnelApplicationRoundApprove_Update", personnelApplicationRoundIdParameter, personnelApplicationRoundStatusIdParameter, personnelApplicationRoundApproveCauseIdParameter, personnelApplicationRoundApproveRemarkParameter, updatedByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_PersonnelApplicationRoundCancel_Update_Result> usp_PersonnelApplicationRoundCancel_Update(Nullable<int> personnelApplicationRoundId, Nullable<int> personnelApplicationRoundCancelCauseId, string personnelApplicationRoundRemark, Nullable<int> updatedByUserId)
        {
            var personnelApplicationRoundIdParameter = personnelApplicationRoundId.HasValue ?
                new ObjectParameter("PersonnelApplicationRoundId", personnelApplicationRoundId) :
                new ObjectParameter("PersonnelApplicationRoundId", typeof(int));
    
            var personnelApplicationRoundCancelCauseIdParameter = personnelApplicationRoundCancelCauseId.HasValue ?
                new ObjectParameter("PersonnelApplicationRoundCancelCauseId", personnelApplicationRoundCancelCauseId) :
                new ObjectParameter("PersonnelApplicationRoundCancelCauseId", typeof(int));
    
            var personnelApplicationRoundRemarkParameter = personnelApplicationRoundRemark != null ?
                new ObjectParameter("PersonnelApplicationRoundRemark", personnelApplicationRoundRemark) :
                new ObjectParameter("PersonnelApplicationRoundRemark", typeof(string));
    
            var updatedByUserIdParameter = updatedByUserId.HasValue ?
                new ObjectParameter("UpdatedByUserId", updatedByUserId) :
                new ObjectParameter("UpdatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonnelApplicationRoundCancel_Update_Result>("usp_PersonnelApplicationRoundCancel_Update", personnelApplicationRoundIdParameter, personnelApplicationRoundCancelCauseIdParameter, personnelApplicationRoundRemarkParameter, updatedByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_PersonnelApplicationRoundCancelCause_Select_Result> usp_PersonnelApplicationRoundCancelCause_Select(Nullable<int> personnelApplicationRoundCancelCauseId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var personnelApplicationRoundCancelCauseIdParameter = personnelApplicationRoundCancelCauseId.HasValue ?
                new ObjectParameter("PersonnelApplicationRoundCancelCauseId", personnelApplicationRoundCancelCauseId) :
                new ObjectParameter("PersonnelApplicationRoundCancelCauseId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonnelApplicationRoundCancelCause_Select_Result>("usp_PersonnelApplicationRoundCancelCause_Select", personnelApplicationRoundCancelCauseIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_PersonnelApplicationRoundSent_Update_Result> usp_PersonnelApplicationRoundSent_Update(Nullable<int> personnelApplicationRoundId, Nullable<int> updatedByUserId)
        {
            var personnelApplicationRoundIdParameter = personnelApplicationRoundId.HasValue ?
                new ObjectParameter("PersonnelApplicationRoundId", personnelApplicationRoundId) :
                new ObjectParameter("PersonnelApplicationRoundId", typeof(int));
    
            var updatedByUserIdParameter = updatedByUserId.HasValue ?
                new ObjectParameter("UpdatedByUserId", updatedByUserId) :
                new ObjectParameter("UpdatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonnelApplicationRoundSent_Update_Result>("usp_PersonnelApplicationRoundSent_Update", personnelApplicationRoundIdParameter, updatedByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_PersonnelApplicationRoundStatus_Select_Result> usp_PersonnelApplicationRoundStatus_Select(Nullable<int> personnelApplicationRoundStatusId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var personnelApplicationRoundStatusIdParameter = personnelApplicationRoundStatusId.HasValue ?
                new ObjectParameter("PersonnelApplicationRoundStatusId", personnelApplicationRoundStatusId) :
                new ObjectParameter("PersonnelApplicationRoundStatusId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonnelApplicationRoundStatus_Select_Result>("usp_PersonnelApplicationRoundStatus_Select", personnelApplicationRoundStatusIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_PersonnelApplicationStatus_Select_Result> usp_PersonnelApplicationStatus_Select(Nullable<int> personnelApplicationStatusId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var personnelApplicationStatusIdParameter = personnelApplicationStatusId.HasValue ?
                new ObjectParameter("PersonnelApplicationStatusId", personnelApplicationStatusId) :
                new ObjectParameter("PersonnelApplicationStatusId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonnelApplicationStatus_Select_Result>("usp_PersonnelApplicationStatus_Select", personnelApplicationStatusIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_PersonnelCustomerDetailCancelCause_Select_Result> usp_PersonnelCustomerDetailCancelCause_Select(Nullable<int> personnelCustomerDetailCancelCauseId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var personnelCustomerDetailCancelCauseIdParameter = personnelCustomerDetailCancelCauseId.HasValue ?
                new ObjectParameter("PersonnelCustomerDetailCancelCauseId", personnelCustomerDetailCancelCauseId) :
                new ObjectParameter("PersonnelCustomerDetailCancelCauseId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonnelCustomerDetailCancelCause_Select_Result>("usp_PersonnelCustomerDetailCancelCause_Select", personnelCustomerDetailCancelCauseIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_PersonnelCustomerDetailStatus_Select_Result> usp_PersonnelCustomerDetailStatus_Select(Nullable<int> personnelCustomerDetailStatusId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var personnelCustomerDetailStatusIdParameter = personnelCustomerDetailStatusId.HasValue ?
                new ObjectParameter("PersonnelCustomerDetailStatusId", personnelCustomerDetailStatusId) :
                new ObjectParameter("PersonnelCustomerDetailStatusId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonnelCustomerDetailStatus_Select_Result>("usp_PersonnelCustomerDetailStatus_Select", personnelCustomerDetailStatusIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_PersonnelCustomerDetail_Insert_Result1> usp_PersonnelCustomerDetail_Insert(Nullable<System.Guid> tempId, Nullable<int> personnelApplicationId, Nullable<int> createdByUserId, Nullable<System.DateTime> effectiveDate)
        {
            var tempIdParameter = tempId.HasValue ?
                new ObjectParameter("TempId", tempId) :
                new ObjectParameter("TempId", typeof(System.Guid));
    
            var personnelApplicationIdParameter = personnelApplicationId.HasValue ?
                new ObjectParameter("PersonnelApplicationId", personnelApplicationId) :
                new ObjectParameter("PersonnelApplicationId", typeof(int));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            var effectiveDateParameter = effectiveDate.HasValue ?
                new ObjectParameter("EffectiveDate", effectiveDate) :
                new ObjectParameter("EffectiveDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonnelCustomerDetail_Insert_Result1>("usp_PersonnelCustomerDetail_Insert", tempIdParameter, personnelApplicationIdParameter, createdByUserIdParameter, effectiveDateParameter);
        }
    
        public virtual ObjectResult<usp_PesonnelApplicationSearch_Select_Result> usp_PesonnelApplicationSearch_Select(Nullable<int> year, Nullable<int> branchId, Nullable<int> provinceId, string shcoolName, string firstName, string lastName, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var provinceIdParameter = provinceId.HasValue ?
                new ObjectParameter("ProvinceId", provinceId) :
                new ObjectParameter("ProvinceId", typeof(int));
    
            var shcoolNameParameter = shcoolName != null ?
                new ObjectParameter("ShcoolName", shcoolName) :
                new ObjectParameter("ShcoolName", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PesonnelApplicationSearch_Select_Result>("usp_PesonnelApplicationSearch_Select", yearParameter, branchIdParameter, provinceIdParameter, shcoolNameParameter, firstNameParameter, lastNameParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_GetTmpPersonnelCustomerDetailErrorCount_Result> usp_GetTmpPersonnelCustomerDetailErrorCount(Nullable<System.Guid> tempId)
        {
            var tempIdParameter = tempId.HasValue ?
                new ObjectParameter("TempId", tempId) :
                new ObjectParameter("TempId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetTmpPersonnelCustomerDetailErrorCount_Result>("usp_GetTmpPersonnelCustomerDetailErrorCount", tempIdParameter);
        }
    
        public virtual ObjectResult<usp_TmpPersonnelApplicationPolicy_Insert_Result> usp_TmpPersonnelApplicationPolicy_Insert(Nullable<System.Guid> tempId, string personnelApplicationCode, string policyNo)
        {
            var tempIdParameter = tempId.HasValue ?
                new ObjectParameter("TempId", tempId) :
                new ObjectParameter("TempId", typeof(System.Guid));
    
            var personnelApplicationCodeParameter = personnelApplicationCode != null ?
                new ObjectParameter("PersonnelApplicationCode", personnelApplicationCode) :
                new ObjectParameter("PersonnelApplicationCode", typeof(string));
    
            var policyNoParameter = policyNo != null ?
                new ObjectParameter("PolicyNo", policyNo) :
                new ObjectParameter("PolicyNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TmpPersonnelApplicationPolicy_Insert_Result>("usp_TmpPersonnelApplicationPolicy_Insert", tempIdParameter, personnelApplicationCodeParameter, policyNoParameter);
        }
    
        public virtual ObjectResult<usp_TmpPersonnelApplicationPolicy_Preview_Result> usp_TmpPersonnelApplicationPolicy_Preview(Nullable<System.Guid> tempId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var tempIdParameter = tempId.HasValue ?
                new ObjectParameter("TempId", tempId) :
                new ObjectParameter("TempId", typeof(System.Guid));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TmpPersonnelApplicationPolicy_Preview_Result>("usp_TmpPersonnelApplicationPolicy_Preview", tempIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_PersonnelApplicationPolicy_Update_Result1> usp_PersonnelApplicationPolicy_Update(Nullable<System.Guid> tempId, Nullable<int> updatedByUserId)
        {
            var tempIdParameter = tempId.HasValue ?
                new ObjectParameter("TempId", tempId) :
                new ObjectParameter("TempId", typeof(System.Guid));
    
            var updatedByUserIdParameter = updatedByUserId.HasValue ?
                new ObjectParameter("UpdatedByUserId", updatedByUserId) :
                new ObjectParameter("UpdatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonnelApplicationPolicy_Update_Result1>("usp_PersonnelApplicationPolicy_Update", tempIdParameter, updatedByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_PersonnelCustomerDetail_Select_Result1> usp_PersonnelCustomerDetail_Select(Nullable<int> personnelApplicationId, Nullable<int> personnelCustomerDetailId, Nullable<int> personnelApplicationRoundId, string personnelCustomerDetailStatusListId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var personnelApplicationIdParameter = personnelApplicationId.HasValue ?
                new ObjectParameter("PersonnelApplicationId", personnelApplicationId) :
                new ObjectParameter("PersonnelApplicationId", typeof(int));
    
            var personnelCustomerDetailIdParameter = personnelCustomerDetailId.HasValue ?
                new ObjectParameter("PersonnelCustomerDetailId", personnelCustomerDetailId) :
                new ObjectParameter("PersonnelCustomerDetailId", typeof(int));
    
            var personnelApplicationRoundIdParameter = personnelApplicationRoundId.HasValue ?
                new ObjectParameter("PersonnelApplicationRoundId", personnelApplicationRoundId) :
                new ObjectParameter("PersonnelApplicationRoundId", typeof(int));
    
            var personnelCustomerDetailStatusListIdParameter = personnelCustomerDetailStatusListId != null ?
                new ObjectParameter("PersonnelCustomerDetailStatusListId", personnelCustomerDetailStatusListId) :
                new ObjectParameter("PersonnelCustomerDetailStatusListId", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonnelCustomerDetail_Select_Result1>("usp_PersonnelCustomerDetail_Select", personnelApplicationIdParameter, personnelCustomerDetailIdParameter, personnelApplicationRoundIdParameter, personnelCustomerDetailStatusListIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_PersonnelApplicationRoundByApplicationId_Select_Result> usp_PersonnelApplicationRoundByApplicationId_Select(Nullable<int> personnelApplicationId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var personnelApplicationIdParameter = personnelApplicationId.HasValue ?
                new ObjectParameter("PersonnelApplicationId", personnelApplicationId) :
                new ObjectParameter("PersonnelApplicationId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonnelApplicationRoundByApplicationId_Select_Result>("usp_PersonnelApplicationRoundByApplicationId_Select", personnelApplicationIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_PersonnelApplicationTransactionHeader_Select_Result> usp_PersonnelApplicationTransactionHeader_Select(Nullable<int> personnelApplicationId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var personnelApplicationIdParameter = personnelApplicationId.HasValue ?
                new ObjectParameter("PersonnelApplicationId", personnelApplicationId) :
                new ObjectParameter("PersonnelApplicationId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonnelApplicationTransactionHeader_Select_Result>("usp_PersonnelApplicationTransactionHeader_Select", personnelApplicationIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_GetPersonnelCustomerDetail_Result> usp_GetPersonnelCustomerDetail(string personnelCustomerDetailCode)
        {
            var personnelCustomerDetailCodeParameter = personnelCustomerDetailCode != null ?
                new ObjectParameter("PersonnelCustomerDetailCode", personnelCustomerDetailCode) :
                new ObjectParameter("PersonnelCustomerDetailCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetPersonnelCustomerDetail_Result>("usp_GetPersonnelCustomerDetail", personnelCustomerDetailCodeParameter);
        }
    
        public virtual ObjectResult<usp_PersonnelApplicationRoundWaitApprove_Select_Result> usp_PersonnelApplicationRoundWaitApprove_Select(Nullable<int> year, Nullable<int> branchId, Nullable<int> personnelApplicationRoundApproveStatusId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var personnelApplicationRoundApproveStatusIdParameter = personnelApplicationRoundApproveStatusId.HasValue ?
                new ObjectParameter("PersonnelApplicationRoundApproveStatusId", personnelApplicationRoundApproveStatusId) :
                new ObjectParameter("PersonnelApplicationRoundApproveStatusId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonnelApplicationRoundWaitApprove_Select_Result>("usp_PersonnelApplicationRoundWaitApprove_Select", yearParameter, branchIdParameter, personnelApplicationRoundApproveStatusIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_RequestCancelPersonnelApplication_Select_Result1> usp_RequestCancelPersonnelApplication_Select(Nullable<int> branchId, Nullable<int> requestCancelPersonnelApplicationId, Nullable<int> personnelApproveStatusId, Nullable<int> year, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var requestCancelPersonnelApplicationIdParameter = requestCancelPersonnelApplicationId.HasValue ?
                new ObjectParameter("RequestCancelPersonnelApplicationId", requestCancelPersonnelApplicationId) :
                new ObjectParameter("RequestCancelPersonnelApplicationId", typeof(int));
    
            var personnelApproveStatusIdParameter = personnelApproveStatusId.HasValue ?
                new ObjectParameter("PersonnelApproveStatusId", personnelApproveStatusId) :
                new ObjectParameter("PersonnelApproveStatusId", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RequestCancelPersonnelApplication_Select_Result1>("usp_RequestCancelPersonnelApplication_Select", branchIdParameter, requestCancelPersonnelApplicationIdParameter, personnelApproveStatusIdParameter, yearParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_RequestCancelPersonnelApplication_Insert_Result> usp_RequestCancelPersonnelApplication_Insert(Nullable<int> personnelApplicationId, Nullable<int> createdByUserId)
        {
            var personnelApplicationIdParameter = personnelApplicationId.HasValue ?
                new ObjectParameter("PersonnelApplicationId", personnelApplicationId) :
                new ObjectParameter("PersonnelApplicationId", typeof(int));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RequestCancelPersonnelApplication_Insert_Result>("usp_RequestCancelPersonnelApplication_Insert", personnelApplicationIdParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_RequestCancelPersonnelApplication_Sent_Update_Result> usp_RequestCancelPersonnelApplication_Sent_Update(Nullable<int> requestCancelPersonnelApplicationId, Nullable<int> personnelApplicationCancelCauseId, string personnelApplicationCancelCauseCauseRemark, Nullable<int> updatedByUserId)
        {
            var requestCancelPersonnelApplicationIdParameter = requestCancelPersonnelApplicationId.HasValue ?
                new ObjectParameter("RequestCancelPersonnelApplicationId", requestCancelPersonnelApplicationId) :
                new ObjectParameter("RequestCancelPersonnelApplicationId", typeof(int));
    
            var personnelApplicationCancelCauseIdParameter = personnelApplicationCancelCauseId.HasValue ?
                new ObjectParameter("PersonnelApplicationCancelCauseId", personnelApplicationCancelCauseId) :
                new ObjectParameter("PersonnelApplicationCancelCauseId", typeof(int));
    
            var personnelApplicationCancelCauseCauseRemarkParameter = personnelApplicationCancelCauseCauseRemark != null ?
                new ObjectParameter("PersonnelApplicationCancelCauseCauseRemark", personnelApplicationCancelCauseCauseRemark) :
                new ObjectParameter("PersonnelApplicationCancelCauseCauseRemark", typeof(string));
    
            var updatedByUserIdParameter = updatedByUserId.HasValue ?
                new ObjectParameter("UpdatedByUserId", updatedByUserId) :
                new ObjectParameter("UpdatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RequestCancelPersonnelApplication_Sent_Update_Result>("usp_RequestCancelPersonnelApplication_Sent_Update", requestCancelPersonnelApplicationIdParameter, personnelApplicationCancelCauseIdParameter, personnelApplicationCancelCauseCauseRemarkParameter, updatedByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_ReportPersonnelApplicationWaitApprove_Select_Result> usp_ReportPersonnelApplicationWaitApprove_Select(Nullable<int> year, Nullable<int> branchId, string personnelApplicationRoundStatusList, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var personnelApplicationRoundStatusListParameter = personnelApplicationRoundStatusList != null ?
                new ObjectParameter("PersonnelApplicationRoundStatusList", personnelApplicationRoundStatusList) :
                new ObjectParameter("PersonnelApplicationRoundStatusList", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReportPersonnelApplicationWaitApprove_Select_Result>("usp_ReportPersonnelApplicationWaitApprove_Select", yearParameter, branchIdParameter, personnelApplicationRoundStatusListParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_TmpPersonnelApplicationPolicy_Validate_Result> usp_TmpPersonnelApplicationPolicy_Validate(Nullable<System.Guid> tempId)
        {
            var tempIdParameter = tempId.HasValue ?
                new ObjectParameter("TempId", tempId) :
                new ObjectParameter("TempId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TmpPersonnelApplicationPolicy_Validate_Result>("usp_TmpPersonnelApplicationPolicy_Validate", tempIdParameter);
        }
    
        public virtual ObjectResult<usp_ReportPersonnelApplication_Select_Result> usp_ReportPersonnelApplication_Select(Nullable<int> year, string personnelApplicationStatusListId, Nullable<int> branchId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var personnelApplicationStatusListIdParameter = personnelApplicationStatusListId != null ?
                new ObjectParameter("PersonnelApplicationStatusListId", personnelApplicationStatusListId) :
                new ObjectParameter("PersonnelApplicationStatusListId", typeof(string));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReportPersonnelApplication_Select_Result>("usp_ReportPersonnelApplication_Select", yearParameter, personnelApplicationStatusListIdParameter, branchIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_RequestCancelPersonnelApplication_Approve_Update_Result> usp_RequestCancelPersonnelApplication_Approve_Update(Nullable<int> requestCancelPersonnelApplicationId, Nullable<int> personnelApproveStatusId, Nullable<int> personnelApproveCauseId, string personnelApproveRemark, Nullable<int> personnelApproveByUserId)
        {
            var requestCancelPersonnelApplicationIdParameter = requestCancelPersonnelApplicationId.HasValue ?
                new ObjectParameter("RequestCancelPersonnelApplicationId", requestCancelPersonnelApplicationId) :
                new ObjectParameter("RequestCancelPersonnelApplicationId", typeof(int));
    
            var personnelApproveStatusIdParameter = personnelApproveStatusId.HasValue ?
                new ObjectParameter("PersonnelApproveStatusId", personnelApproveStatusId) :
                new ObjectParameter("PersonnelApproveStatusId", typeof(int));
    
            var personnelApproveCauseIdParameter = personnelApproveCauseId.HasValue ?
                new ObjectParameter("PersonnelApproveCauseId", personnelApproveCauseId) :
                new ObjectParameter("PersonnelApproveCauseId", typeof(int));
    
            var personnelApproveRemarkParameter = personnelApproveRemark != null ?
                new ObjectParameter("PersonnelApproveRemark", personnelApproveRemark) :
                new ObjectParameter("PersonnelApproveRemark", typeof(string));
    
            var personnelApproveByUserIdParameter = personnelApproveByUserId.HasValue ?
                new ObjectParameter("PersonnelApproveByUserId", personnelApproveByUserId) :
                new ObjectParameter("PersonnelApproveByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RequestCancelPersonnelApplication_Approve_Update_Result>("usp_RequestCancelPersonnelApplication_Approve_Update", requestCancelPersonnelApplicationIdParameter, personnelApproveStatusIdParameter, personnelApproveCauseIdParameter, personnelApproveRemarkParameter, personnelApproveByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_DocumentRequestCancelPersonnalApplication_Select_Result> usp_DocumentRequestCancelPersonnalApplication_Select(Nullable<int> referenceId, Nullable<int> docTypeId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var referenceIdParameter = referenceId.HasValue ?
                new ObjectParameter("ReferenceId", referenceId) :
                new ObjectParameter("ReferenceId", typeof(int));
    
            var docTypeIdParameter = docTypeId.HasValue ?
                new ObjectParameter("DocTypeId", docTypeId) :
                new ObjectParameter("DocTypeId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DocumentRequestCancelPersonnalApplication_Select_Result>("usp_DocumentRequestCancelPersonnalApplication_Select", referenceIdParameter, docTypeIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_DocumentRequestCancelPersonnelApplication_Select_Result> usp_DocumentRequestCancelPersonnelApplication_Select(Nullable<int> referenceId, Nullable<int> docTypeId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var referenceIdParameter = referenceId.HasValue ?
                new ObjectParameter("ReferenceId", referenceId) :
                new ObjectParameter("ReferenceId", typeof(int));
    
            var docTypeIdParameter = docTypeId.HasValue ?
                new ObjectParameter("DocTypeId", docTypeId) :
                new ObjectParameter("DocTypeId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DocumentRequestCancelPersonnelApplication_Select_Result>("usp_DocumentRequestCancelPersonnelApplication_Select", referenceIdParameter, docTypeIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_PersonnelApplicationRoundForGenReport_Select_Result> usp_PersonnelApplicationRoundForGenReport_Select(Nullable<int> insuranceCompanyId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var insuranceCompanyIdParameter = insuranceCompanyId.HasValue ?
                new ObjectParameter("InsuranceCompanyId", insuranceCompanyId) :
                new ObjectParameter("InsuranceCompanyId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonnelApplicationRoundForGenReport_Select_Result>("usp_PersonnelApplicationRoundForGenReport_Select", insuranceCompanyIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_PersonnelReportDetail_Select_Result> usp_PersonnelReportDetail_Select(Nullable<int> personnelReportGroupId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var personnelReportGroupIdParameter = personnelReportGroupId.HasValue ?
                new ObjectParameter("PersonnelReportGroupId", personnelReportGroupId) :
                new ObjectParameter("PersonnelReportGroupId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonnelReportDetail_Select_Result>("usp_PersonnelReportDetail_Select", personnelReportGroupIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_PersonnelReportGroup_Select_Result> usp_PersonnelReportGroup_Select(Nullable<System.DateTime> createdDatefrom, Nullable<System.DateTime> createdDateto, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var createdDatefromParameter = createdDatefrom.HasValue ?
                new ObjectParameter("CreatedDatefrom", createdDatefrom) :
                new ObjectParameter("CreatedDatefrom", typeof(System.DateTime));
    
            var createdDatetoParameter = createdDateto.HasValue ?
                new ObjectParameter("CreatedDateto", createdDateto) :
                new ObjectParameter("CreatedDateto", typeof(System.DateTime));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonnelReportGroup_Select_Result>("usp_PersonnelReportGroup_Select", createdDatefromParameter, createdDatetoParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_PersonnelReportHeader_Insert_Result> usp_PersonnelReportHeader_Insert(Nullable<int> insuranceId, Nullable<int> createdByUserId)
        {
            var insuranceIdParameter = insuranceId.HasValue ?
                new ObjectParameter("InsuranceId", insuranceId) :
                new ObjectParameter("InsuranceId", typeof(int));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonnelReportHeader_Insert_Result>("usp_PersonnelReportHeader_Insert", insuranceIdParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_PersonnelReportHeader_Select_Result> usp_PersonnelReportHeader_Select(Nullable<int> personnelReportGroupId, Nullable<bool> isEndorse, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var personnelReportGroupIdParameter = personnelReportGroupId.HasValue ?
                new ObjectParameter("personnelReportGroupId", personnelReportGroupId) :
                new ObjectParameter("personnelReportGroupId", typeof(int));
    
            var isEndorseParameter = isEndorse.HasValue ?
                new ObjectParameter("IsEndorse", isEndorse) :
                new ObjectParameter("IsEndorse", typeof(bool));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonnelReportHeader_Select_Result>("usp_PersonnelReportHeader_Select", personnelReportGroupIdParameter, isEndorseParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_PersonnelReportGroup_Update_Result> usp_PersonnelReportGroup_Update(Nullable<int> personnelReportGroupId, Nullable<int> personnelReportGroupStatusId, Nullable<int> updatedByUserId)
        {
            var personnelReportGroupIdParameter = personnelReportGroupId.HasValue ?
                new ObjectParameter("PersonnelReportGroupId", personnelReportGroupId) :
                new ObjectParameter("PersonnelReportGroupId", typeof(int));
    
            var personnelReportGroupStatusIdParameter = personnelReportGroupStatusId.HasValue ?
                new ObjectParameter("PersonnelReportGroupStatusId", personnelReportGroupStatusId) :
                new ObjectParameter("PersonnelReportGroupStatusId", typeof(int));
    
            var updatedByUserIdParameter = updatedByUserId.HasValue ?
                new ObjectParameter("UpdatedByUserId", updatedByUserId) :
                new ObjectParameter("UpdatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonnelReportGroup_Update_Result>("usp_PersonnelReportGroup_Update", personnelReportGroupIdParameter, personnelReportGroupStatusIdParameter, updatedByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationPostPDPA_Select_Result> usp_ApplicationPostPDPA_Select(Nullable<int> applicationId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationPostPDPA_Select_Result>("usp_ApplicationPostPDPA_Select", applicationIdParameter);
        }
    
        public virtual ObjectResult<usp_PersonnelDocument_Select_Result> usp_PersonnelDocument_Select(Nullable<int> personnelApplicationId, string documentTypelistId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var personnelApplicationIdParameter = personnelApplicationId.HasValue ?
                new ObjectParameter("PersonnelApplicationId", personnelApplicationId) :
                new ObjectParameter("PersonnelApplicationId", typeof(int));
    
            var documentTypelistIdParameter = documentTypelistId != null ?
                new ObjectParameter("DocumentTypelistId", documentTypelistId) :
                new ObjectParameter("DocumentTypelistId", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonnelDocument_Select_Result>("usp_PersonnelDocument_Select", personnelApplicationIdParameter, documentTypelistIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_PersonnelCustomerDetailToSendSMS_Insert_Result> usp_PersonnelCustomerDetailToSendSMS_Insert(Nullable<int> personnelReportGroupId, Nullable<int> updatedByUserId)
        {
            var personnelReportGroupIdParameter = personnelReportGroupId.HasValue ?
                new ObjectParameter("PersonnelReportGroupId", personnelReportGroupId) :
                new ObjectParameter("PersonnelReportGroupId", typeof(int));
    
            var updatedByUserIdParameter = updatedByUserId.HasValue ?
                new ObjectParameter("UpdatedByUserId", updatedByUserId) :
                new ObjectParameter("UpdatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonnelCustomerDetailToSendSMS_Insert_Result>("usp_PersonnelCustomerDetailToSendSMS_Insert", personnelReportGroupIdParameter, updatedByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_PersonnelApplicationForPolicyMonitor_Select_Result> usp_PersonnelApplicationForPolicyMonitor_Select(Nullable<int> personnelApplicationId, Nullable<int> branchId, Nullable<int> year, Nullable<int> personnelApplicationStatusId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var personnelApplicationIdParameter = personnelApplicationId.HasValue ?
                new ObjectParameter("PersonnelApplicationId", personnelApplicationId) :
                new ObjectParameter("PersonnelApplicationId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var personnelApplicationStatusIdParameter = personnelApplicationStatusId.HasValue ?
                new ObjectParameter("PersonnelApplicationStatusId", personnelApplicationStatusId) :
                new ObjectParameter("PersonnelApplicationStatusId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonnelApplicationForPolicyMonitor_Select_Result>("usp_PersonnelApplicationForPolicyMonitor_Select", personnelApplicationIdParameter, branchIdParameter, yearParameter, personnelApplicationStatusIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_PersonnelResultSendSMS_Select_Result> usp_PersonnelResultSendSMS_Select(Nullable<System.DateTime> sendDateFrom, Nullable<System.DateTime> sendDateTo, Nullable<int> sMSStatusId, Nullable<int> branchId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var sendDateFromParameter = sendDateFrom.HasValue ?
                new ObjectParameter("SendDateFrom", sendDateFrom) :
                new ObjectParameter("SendDateFrom", typeof(System.DateTime));
    
            var sendDateToParameter = sendDateTo.HasValue ?
                new ObjectParameter("SendDateTo", sendDateTo) :
                new ObjectParameter("SendDateTo", typeof(System.DateTime));
    
            var sMSStatusIdParameter = sMSStatusId.HasValue ?
                new ObjectParameter("SMSStatusId", sMSStatusId) :
                new ObjectParameter("SMSStatusId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonnelResultSendSMS_Select_Result>("usp_PersonnelResultSendSMS_Select", sendDateFromParameter, sendDateToParameter, sMSStatusIdParameter, branchIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_PersonnelReportGroupToSMI_Update_Result> usp_PersonnelReportGroupToSMI_Update(Nullable<int> personnelReportGroupId, Nullable<int> updatedByUserId)
        {
            var personnelReportGroupIdParameter = personnelReportGroupId.HasValue ?
                new ObjectParameter("PersonnelReportGroupId", personnelReportGroupId) :
                new ObjectParameter("PersonnelReportGroupId", typeof(int));
    
            var updatedByUserIdParameter = updatedByUserId.HasValue ?
                new ObjectParameter("UpdatedByUserId", updatedByUserId) :
                new ObjectParameter("UpdatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonnelReportGroupToSMI_Update_Result>("usp_PersonnelReportGroupToSMI_Update", personnelReportGroupIdParameter, updatedByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_EndorsePersonnelCustomerDatailHeader_Insert_Result> usp_EndorsePersonnelCustomerDatailHeader_Insert(Nullable<int> personnelApplicationId, Nullable<int> createdByUserId)
        {
            var personnelApplicationIdParameter = personnelApplicationId.HasValue ?
                new ObjectParameter("PersonnelApplicationId", personnelApplicationId) :
                new ObjectParameter("PersonnelApplicationId", typeof(int));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_EndorsePersonnelCustomerDatailHeader_Insert_Result>("usp_EndorsePersonnelCustomerDatailHeader_Insert", personnelApplicationIdParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_DocumentEndorsePersonnelCustomerDetail_Select_Result> usp_DocumentEndorsePersonnelCustomerDetail_Select(Nullable<int> referenceId, Nullable<int> documentSubTypeId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var referenceIdParameter = referenceId.HasValue ?
                new ObjectParameter("ReferenceId", referenceId) :
                new ObjectParameter("ReferenceId", typeof(int));
    
            var documentSubTypeIdParameter = documentSubTypeId.HasValue ?
                new ObjectParameter("DocumentSubTypeId", documentSubTypeId) :
                new ObjectParameter("DocumentSubTypeId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DocumentEndorsePersonnelCustomerDetail_Select_Result>("usp_DocumentEndorsePersonnelCustomerDetail_Select", referenceIdParameter, documentSubTypeIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_EndorsePersonnelCustomerDetail_Select_Result> usp_EndorsePersonnelCustomerDetail_Select(Nullable<int> pAYear, Nullable<int> branchId, Nullable<int> endorsePersonnelCustomerDetailStatusId, string searchDetail, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType)
        {
            var pAYearParameter = pAYear.HasValue ?
                new ObjectParameter("PAYear", pAYear) :
                new ObjectParameter("PAYear", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var endorsePersonnelCustomerDetailStatusIdParameter = endorsePersonnelCustomerDetailStatusId.HasValue ?
                new ObjectParameter("EndorsePersonnelCustomerDetailStatusId", endorsePersonnelCustomerDetailStatusId) :
                new ObjectParameter("EndorsePersonnelCustomerDetailStatusId", typeof(int));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_EndorsePersonnelCustomerDetail_Select_Result>("usp_EndorsePersonnelCustomerDetail_Select", pAYearParameter, branchIdParameter, endorsePersonnelCustomerDetailStatusIdParameter, searchDetailParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter);
        }
    
        public virtual ObjectResult<usp_EndorsePersonnelCustomerDetailHeader_Sent_Update_Result> usp_EndorsePersonnelCustomerDetailHeader_Sent_Update(Nullable<int> endorsePersonnelCustomerDetailHeaderId, Nullable<int> updatedByUserId)
        {
            var endorsePersonnelCustomerDetailHeaderIdParameter = endorsePersonnelCustomerDetailHeaderId.HasValue ?
                new ObjectParameter("EndorsePersonnelCustomerDetailHeaderId", endorsePersonnelCustomerDetailHeaderId) :
                new ObjectParameter("EndorsePersonnelCustomerDetailHeaderId", typeof(int));
    
            var updatedByUserIdParameter = updatedByUserId.HasValue ?
                new ObjectParameter("UpdatedByUserId", updatedByUserId) :
                new ObjectParameter("UpdatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_EndorsePersonnelCustomerDetailHeader_Sent_Update_Result>("usp_EndorsePersonnelCustomerDetailHeader_Sent_Update", endorsePersonnelCustomerDetailHeaderIdParameter, updatedByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_EndorsePersonnelCustomerDetailItem_Delete_Result> usp_EndorsePersonnelCustomerDetailItem_Delete(Nullable<int> endorsePersonnelCustomerDetailItemId, Nullable<int> updatedByUserId)
        {
            var endorsePersonnelCustomerDetailItemIdParameter = endorsePersonnelCustomerDetailItemId.HasValue ?
                new ObjectParameter("EndorsePersonnelCustomerDetailItemId", endorsePersonnelCustomerDetailItemId) :
                new ObjectParameter("EndorsePersonnelCustomerDetailItemId", typeof(int));
    
            var updatedByUserIdParameter = updatedByUserId.HasValue ?
                new ObjectParameter("UpdatedByUserId", updatedByUserId) :
                new ObjectParameter("UpdatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_EndorsePersonnelCustomerDetailItem_Delete_Result>("usp_EndorsePersonnelCustomerDetailItem_Delete", endorsePersonnelCustomerDetailItemIdParameter, updatedByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_EndorsePersonnelCustomerDetailItem_Insert_Result> usp_EndorsePersonnelCustomerDetailItem_Insert(Nullable<int> endorsePersonnelCustomerDetailHeaderId, Nullable<int> personnelCustomerDetailId, string personnelCustomerDetailCode, string fromIdCard, string fromPassport, Nullable<int> fromTitleId, string fromFirstName, string fromLastName, string fromPosition, string fromMobileNumber, string toIdCard, string toPassport, Nullable<int> toTitleId, string toFirstName, string toLastName, string toPosition, string toMobileNumber, Nullable<int> createdByUserId)
        {
            var endorsePersonnelCustomerDetailHeaderIdParameter = endorsePersonnelCustomerDetailHeaderId.HasValue ?
                new ObjectParameter("EndorsePersonnelCustomerDetailHeaderId", endorsePersonnelCustomerDetailHeaderId) :
                new ObjectParameter("EndorsePersonnelCustomerDetailHeaderId", typeof(int));
    
            var personnelCustomerDetailIdParameter = personnelCustomerDetailId.HasValue ?
                new ObjectParameter("PersonnelCustomerDetailId", personnelCustomerDetailId) :
                new ObjectParameter("PersonnelCustomerDetailId", typeof(int));
    
            var personnelCustomerDetailCodeParameter = personnelCustomerDetailCode != null ?
                new ObjectParameter("PersonnelCustomerDetailCode", personnelCustomerDetailCode) :
                new ObjectParameter("PersonnelCustomerDetailCode", typeof(string));
    
            var fromIdCardParameter = fromIdCard != null ?
                new ObjectParameter("FromIdCard", fromIdCard) :
                new ObjectParameter("FromIdCard", typeof(string));
    
            var fromPassportParameter = fromPassport != null ?
                new ObjectParameter("FromPassport", fromPassport) :
                new ObjectParameter("FromPassport", typeof(string));
    
            var fromTitleIdParameter = fromTitleId.HasValue ?
                new ObjectParameter("FromTitleId", fromTitleId) :
                new ObjectParameter("FromTitleId", typeof(int));
    
            var fromFirstNameParameter = fromFirstName != null ?
                new ObjectParameter("FromFirstName", fromFirstName) :
                new ObjectParameter("FromFirstName", typeof(string));
    
            var fromLastNameParameter = fromLastName != null ?
                new ObjectParameter("FromLastName", fromLastName) :
                new ObjectParameter("FromLastName", typeof(string));
    
            var fromPositionParameter = fromPosition != null ?
                new ObjectParameter("FromPosition", fromPosition) :
                new ObjectParameter("FromPosition", typeof(string));
    
            var fromMobileNumberParameter = fromMobileNumber != null ?
                new ObjectParameter("FromMobileNumber", fromMobileNumber) :
                new ObjectParameter("FromMobileNumber", typeof(string));
    
            var toIdCardParameter = toIdCard != null ?
                new ObjectParameter("ToIdCard", toIdCard) :
                new ObjectParameter("ToIdCard", typeof(string));
    
            var toPassportParameter = toPassport != null ?
                new ObjectParameter("ToPassport", toPassport) :
                new ObjectParameter("ToPassport", typeof(string));
    
            var toTitleIdParameter = toTitleId.HasValue ?
                new ObjectParameter("ToTitleId", toTitleId) :
                new ObjectParameter("ToTitleId", typeof(int));
    
            var toFirstNameParameter = toFirstName != null ?
                new ObjectParameter("ToFirstName", toFirstName) :
                new ObjectParameter("ToFirstName", typeof(string));
    
            var toLastNameParameter = toLastName != null ?
                new ObjectParameter("ToLastName", toLastName) :
                new ObjectParameter("ToLastName", typeof(string));
    
            var toPositionParameter = toPosition != null ?
                new ObjectParameter("ToPosition", toPosition) :
                new ObjectParameter("ToPosition", typeof(string));
    
            var toMobileNumberParameter = toMobileNumber != null ?
                new ObjectParameter("ToMobileNumber", toMobileNumber) :
                new ObjectParameter("ToMobileNumber", typeof(string));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_EndorsePersonnelCustomerDetailItem_Insert_Result>("usp_EndorsePersonnelCustomerDetailItem_Insert", endorsePersonnelCustomerDetailHeaderIdParameter, personnelCustomerDetailIdParameter, personnelCustomerDetailCodeParameter, fromIdCardParameter, fromPassportParameter, fromTitleIdParameter, fromFirstNameParameter, fromLastNameParameter, fromPositionParameter, fromMobileNumberParameter, toIdCardParameter, toPassportParameter, toTitleIdParameter, toFirstNameParameter, toLastNameParameter, toPositionParameter, toMobileNumberParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_EndorsePersonnelCustomerDetailItem_Select_Result> usp_EndorsePersonnelCustomerDetailItem_Select(Nullable<int> endorsePersonnelCustomerDetailHeaderId, Nullable<int> endorsePersonnelCustomerDetailItemId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var endorsePersonnelCustomerDetailHeaderIdParameter = endorsePersonnelCustomerDetailHeaderId.HasValue ?
                new ObjectParameter("EndorsePersonnelCustomerDetailHeaderId", endorsePersonnelCustomerDetailHeaderId) :
                new ObjectParameter("EndorsePersonnelCustomerDetailHeaderId", typeof(int));
    
            var endorsePersonnelCustomerDetailItemIdParameter = endorsePersonnelCustomerDetailItemId.HasValue ?
                new ObjectParameter("EndorsePersonnelCustomerDetailItemId", endorsePersonnelCustomerDetailItemId) :
                new ObjectParameter("EndorsePersonnelCustomerDetailItemId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_EndorsePersonnelCustomerDetailItem_Select_Result>("usp_EndorsePersonnelCustomerDetailItem_Select", endorsePersonnelCustomerDetailHeaderIdParameter, endorsePersonnelCustomerDetailItemIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_EndorsePersonnelCustomerDetailItem_Update_Result> usp_EndorsePersonnelCustomerDetailItem_Update(Nullable<int> endorsePersonnelCustomerDetailItemId, string toIdCard, string toPassport, Nullable<int> toTitleId, string toFirstName, string toLastName, string toPosition, string toMobileNumber, Nullable<int> updatedByUserId)
        {
            var endorsePersonnelCustomerDetailItemIdParameter = endorsePersonnelCustomerDetailItemId.HasValue ?
                new ObjectParameter("EndorsePersonnelCustomerDetailItemId", endorsePersonnelCustomerDetailItemId) :
                new ObjectParameter("EndorsePersonnelCustomerDetailItemId", typeof(int));
    
            var toIdCardParameter = toIdCard != null ?
                new ObjectParameter("ToIdCard", toIdCard) :
                new ObjectParameter("ToIdCard", typeof(string));
    
            var toPassportParameter = toPassport != null ?
                new ObjectParameter("ToPassport", toPassport) :
                new ObjectParameter("ToPassport", typeof(string));
    
            var toTitleIdParameter = toTitleId.HasValue ?
                new ObjectParameter("ToTitleId", toTitleId) :
                new ObjectParameter("ToTitleId", typeof(int));
    
            var toFirstNameParameter = toFirstName != null ?
                new ObjectParameter("ToFirstName", toFirstName) :
                new ObjectParameter("ToFirstName", typeof(string));
    
            var toLastNameParameter = toLastName != null ?
                new ObjectParameter("ToLastName", toLastName) :
                new ObjectParameter("ToLastName", typeof(string));
    
            var toPositionParameter = toPosition != null ?
                new ObjectParameter("ToPosition", toPosition) :
                new ObjectParameter("ToPosition", typeof(string));
    
            var toMobileNumberParameter = toMobileNumber != null ?
                new ObjectParameter("ToMobileNumber", toMobileNumber) :
                new ObjectParameter("ToMobileNumber", typeof(string));
    
            var updatedByUserIdParameter = updatedByUserId.HasValue ?
                new ObjectParameter("UpdatedByUserId", updatedByUserId) :
                new ObjectParameter("UpdatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_EndorsePersonnelCustomerDetailItem_Update_Result>("usp_EndorsePersonnelCustomerDetailItem_Update", endorsePersonnelCustomerDetailItemIdParameter, toIdCardParameter, toPassportParameter, toTitleIdParameter, toFirstNameParameter, toLastNameParameter, toPositionParameter, toMobileNumberParameter, updatedByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_EndorsePersonnelCustomerDetailItemById_Select_Result> usp_EndorsePersonnelCustomerDetailItemById_Select(Nullable<int> endorsePersonnelCustomerDetailItemId)
        {
            var endorsePersonnelCustomerDetailItemIdParameter = endorsePersonnelCustomerDetailItemId.HasValue ?
                new ObjectParameter("EndorsePersonnelCustomerDetailItemId", endorsePersonnelCustomerDetailItemId) :
                new ObjectParameter("EndorsePersonnelCustomerDetailItemId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_EndorsePersonnelCustomerDetailItemById_Select_Result>("usp_EndorsePersonnelCustomerDetailItemById_Select", endorsePersonnelCustomerDetailItemIdParameter);
        }
    
        public virtual ObjectResult<usp_EndorsePersonnelCustomerDetailStatus_Select_Result> usp_EndorsePersonnelCustomerDetailStatus_Select(Nullable<int> endorsePersonnelCustomerDetailStatusId)
        {
            var endorsePersonnelCustomerDetailStatusIdParameter = endorsePersonnelCustomerDetailStatusId.HasValue ?
                new ObjectParameter("EndorsePersonnelCustomerDetailStatusId", endorsePersonnelCustomerDetailStatusId) :
                new ObjectParameter("EndorsePersonnelCustomerDetailStatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_EndorsePersonnelCustomerDetailStatus_Select_Result>("usp_EndorsePersonnelCustomerDetailStatus_Select", endorsePersonnelCustomerDetailStatusIdParameter);
        }
    
        public virtual ObjectResult<usp_PersonnelCustomerDetailById_Select_Result> usp_PersonnelCustomerDetailById_Select(Nullable<int> personnelCustomerDetailId)
        {
            var personnelCustomerDetailIdParameter = personnelCustomerDetailId.HasValue ?
                new ObjectParameter("PersonnelCustomerDetailId", personnelCustomerDetailId) :
                new ObjectParameter("PersonnelCustomerDetailId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonnelCustomerDetailById_Select_Result>("usp_PersonnelCustomerDetailById_Select", personnelCustomerDetailIdParameter);
        }
    
        public virtual ObjectResult<usp_EndorsePersonnelCustomerDetail_Approve_Update_Result> usp_EndorsePersonnelCustomerDetail_Approve_Update(Nullable<int> endorsePersonnelCustomerDetailHeaderId, Nullable<int> endorsePersonnelCustomerDetailStatusId, Nullable<int> approveCauseId, string approveRemark, Nullable<int> updatedByUserId)
        {
            var endorsePersonnelCustomerDetailHeaderIdParameter = endorsePersonnelCustomerDetailHeaderId.HasValue ?
                new ObjectParameter("EndorsePersonnelCustomerDetailHeaderId", endorsePersonnelCustomerDetailHeaderId) :
                new ObjectParameter("EndorsePersonnelCustomerDetailHeaderId", typeof(int));
    
            var endorsePersonnelCustomerDetailStatusIdParameter = endorsePersonnelCustomerDetailStatusId.HasValue ?
                new ObjectParameter("EndorsePersonnelCustomerDetailStatusId", endorsePersonnelCustomerDetailStatusId) :
                new ObjectParameter("EndorsePersonnelCustomerDetailStatusId", typeof(int));
    
            var approveCauseIdParameter = approveCauseId.HasValue ?
                new ObjectParameter("ApproveCauseId", approveCauseId) :
                new ObjectParameter("ApproveCauseId", typeof(int));
    
            var approveRemarkParameter = approveRemark != null ?
                new ObjectParameter("ApproveRemark", approveRemark) :
                new ObjectParameter("ApproveRemark", typeof(string));
    
            var updatedByUserIdParameter = updatedByUserId.HasValue ?
                new ObjectParameter("UpdatedByUserId", updatedByUserId) :
                new ObjectParameter("UpdatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_EndorsePersonnelCustomerDetail_Approve_Update_Result>("usp_EndorsePersonnelCustomerDetail_Approve_Update", endorsePersonnelCustomerDetailHeaderIdParameter, endorsePersonnelCustomerDetailStatusIdParameter, approveCauseIdParameter, approveRemarkParameter, updatedByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_PersonnelEndorseCustomerForGenReport_Select_Result> usp_PersonnelEndorseCustomerForGenReport_Select(Nullable<int> insuranceId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var insuranceIdParameter = insuranceId.HasValue ?
                new ObjectParameter("InsuranceId", insuranceId) :
                new ObjectParameter("InsuranceId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonnelEndorseCustomerForGenReport_Select_Result>("usp_PersonnelEndorseCustomerForGenReport_Select", insuranceIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_PersonnelEndorseCustomerReportGroup_Insert_Result> usp_PersonnelEndorseCustomerReportGroup_Insert(Nullable<int> insuranceId, Nullable<int> createdByUserId)
        {
            var insuranceIdParameter = insuranceId.HasValue ?
                new ObjectParameter("InsuranceId", insuranceId) :
                new ObjectParameter("InsuranceId", typeof(int));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonnelEndorseCustomerReportGroup_Insert_Result>("usp_PersonnelEndorseCustomerReportGroup_Insert", insuranceIdParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_PersonnelEndorseCustomerReportGroup_Select_Result> usp_PersonnelEndorseCustomerReportGroup_Select(Nullable<System.DateTime> createdDateFrom, Nullable<System.DateTime> createdDateTo, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var createdDateFromParameter = createdDateFrom.HasValue ?
                new ObjectParameter("CreatedDateFrom", createdDateFrom) :
                new ObjectParameter("CreatedDateFrom", typeof(System.DateTime));
    
            var createdDateToParameter = createdDateTo.HasValue ?
                new ObjectParameter("CreatedDateTo", createdDateTo) :
                new ObjectParameter("CreatedDateTo", typeof(System.DateTime));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonnelEndorseCustomerReportGroup_Select_Result>("usp_PersonnelEndorseCustomerReportGroup_Select", createdDateFromParameter, createdDateToParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_PersonnelEndorseCustomerReportDetail_Select_Result> usp_PersonnelEndorseCustomerReportDetail_Select(Nullable<int> personnelEndorseReportGroupId)
        {
            var personnelEndorseReportGroupIdParameter = personnelEndorseReportGroupId.HasValue ?
                new ObjectParameter("PersonnelEndorseReportGroupId", personnelEndorseReportGroupId) :
                new ObjectParameter("PersonnelEndorseReportGroupId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonnelEndorseCustomerReportDetail_Select_Result>("usp_PersonnelEndorseCustomerReportDetail_Select", personnelEndorseReportGroupIdParameter);
        }
    
        public virtual ObjectResult<usp_EndorsePersonnelCustomerDetailHistory_Select_Result> usp_EndorsePersonnelCustomerDetailHistory_Select(Nullable<int> personnelApplicationId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var personnelApplicationIdParameter = personnelApplicationId.HasValue ?
                new ObjectParameter("PersonnelApplicationId", personnelApplicationId) :
                new ObjectParameter("PersonnelApplicationId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_EndorsePersonnelCustomerDetailHistory_Select_Result>("usp_EndorsePersonnelCustomerDetailHistory_Select", personnelApplicationIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_PersonnelEndorseCustomerReportGroup_Update_Result> usp_PersonnelEndorseCustomerReportGroup_Update(Nullable<int> personnelEndorseCustomerReportGroupId, Nullable<int> personnelEndorseCustomerReportGroupStatusId, Nullable<int> updatedByUserId)
        {
            var personnelEndorseCustomerReportGroupIdParameter = personnelEndorseCustomerReportGroupId.HasValue ?
                new ObjectParameter("PersonnelEndorseCustomerReportGroupId", personnelEndorseCustomerReportGroupId) :
                new ObjectParameter("PersonnelEndorseCustomerReportGroupId", typeof(int));
    
            var personnelEndorseCustomerReportGroupStatusIdParameter = personnelEndorseCustomerReportGroupStatusId.HasValue ?
                new ObjectParameter("PersonnelEndorseCustomerReportGroupStatusId", personnelEndorseCustomerReportGroupStatusId) :
                new ObjectParameter("PersonnelEndorseCustomerReportGroupStatusId", typeof(int));
    
            var updatedByUserIdParameter = updatedByUserId.HasValue ?
                new ObjectParameter("UpdatedByUserId", updatedByUserId) :
                new ObjectParameter("UpdatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonnelEndorseCustomerReportGroup_Update_Result>("usp_PersonnelEndorseCustomerReportGroup_Update", personnelEndorseCustomerReportGroupIdParameter, personnelEndorseCustomerReportGroupStatusIdParameter, updatedByUserIdParameter);
        }
    }
}
