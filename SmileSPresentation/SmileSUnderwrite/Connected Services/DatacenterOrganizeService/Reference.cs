//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmileSUnderwrite.DatacenterOrganizeService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="usp_Hospital_Select_Result", Namespace="http://schemas.datacontract.org/2004/07/SmileDataCenterService.Model")]
    [System.SerializableAttribute()]
    public partial class usp_Hospital_Select_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AbbreviationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressFullDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CreateBy_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizeDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrganizeType_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Organize_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Ref_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SortOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Title_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Abbreviation {
            get {
                return this.AbbreviationField;
            }
            set {
                if ((object.ReferenceEquals(this.AbbreviationField, value) != true)) {
                    this.AbbreviationField = value;
                    this.RaisePropertyChanged("Abbreviation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressFullDetail {
            get {
                return this.AddressFullDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressFullDetailField, value) != true)) {
                    this.AddressFullDetailField = value;
                    this.RaisePropertyChanged("AddressFullDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CreateBy_ID {
            get {
                return this.CreateBy_IDField;
            }
            set {
                if ((this.CreateBy_IDField.Equals(value) != true)) {
                    this.CreateBy_IDField = value;
                    this.RaisePropertyChanged("CreateBy_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizeCode {
            get {
                return this.OrganizeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizeCodeField, value) != true)) {
                    this.OrganizeCodeField = value;
                    this.RaisePropertyChanged("OrganizeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizeDetail {
            get {
                return this.OrganizeDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizeDetailField, value) != true)) {
                    this.OrganizeDetailField = value;
                    this.RaisePropertyChanged("OrganizeDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OrganizeType_ID {
            get {
                return this.OrganizeType_IDField;
            }
            set {
                if ((this.OrganizeType_IDField.Equals(value) != true)) {
                    this.OrganizeType_IDField = value;
                    this.RaisePropertyChanged("OrganizeType_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Organize_ID {
            get {
                return this.Organize_IDField;
            }
            set {
                if ((this.Organize_IDField.Equals(value) != true)) {
                    this.Organize_IDField = value;
                    this.RaisePropertyChanged("Organize_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Ref_ID {
            get {
                return this.Ref_IDField;
            }
            set {
                if ((this.Ref_IDField.Equals(value) != true)) {
                    this.Ref_IDField = value;
                    this.RaisePropertyChanged("Ref_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortName {
            get {
                return this.ShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortNameField, value) != true)) {
                    this.ShortNameField = value;
                    this.RaisePropertyChanged("ShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SortOrder {
            get {
                return this.SortOrderField;
            }
            set {
                if ((this.SortOrderField.Equals(value) != true)) {
                    this.SortOrderField = value;
                    this.RaisePropertyChanged("SortOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Title_ID {
            get {
                return this.Title_IDField;
            }
            set {
                if ((this.Title_IDField.Equals(value) != true)) {
                    this.Title_IDField = value;
                    this.RaisePropertyChanged("Title_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="usp_Insurance_Select_Result", Namespace="http://schemas.datacontract.org/2004/07/SmileDataCenterService.Model")]
    [System.SerializableAttribute()]
    public partial class usp_Insurance_Select_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AbbreviationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CreateBy_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsuranceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsuranceCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InsuranceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrganizeType_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Ref_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SortOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Title_IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Abbreviation {
            get {
                return this.AbbreviationField;
            }
            set {
                if ((object.ReferenceEquals(this.AbbreviationField, value) != true)) {
                    this.AbbreviationField = value;
                    this.RaisePropertyChanged("Abbreviation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CreateBy_ID {
            get {
                return this.CreateBy_IDField;
            }
            set {
                if ((this.CreateBy_IDField.Equals(value) != true)) {
                    this.CreateBy_IDField = value;
                    this.RaisePropertyChanged("CreateBy_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Insurance {
            get {
                return this.InsuranceField;
            }
            set {
                if ((object.ReferenceEquals(this.InsuranceField, value) != true)) {
                    this.InsuranceField = value;
                    this.RaisePropertyChanged("Insurance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsuranceCode {
            get {
                return this.InsuranceCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.InsuranceCodeField, value) != true)) {
                    this.InsuranceCodeField = value;
                    this.RaisePropertyChanged("InsuranceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InsuranceId {
            get {
                return this.InsuranceIdField;
            }
            set {
                if ((this.InsuranceIdField.Equals(value) != true)) {
                    this.InsuranceIdField = value;
                    this.RaisePropertyChanged("InsuranceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OrganizeType_ID {
            get {
                return this.OrganizeType_IDField;
            }
            set {
                if ((this.OrganizeType_IDField.Equals(value) != true)) {
                    this.OrganizeType_IDField = value;
                    this.RaisePropertyChanged("OrganizeType_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Ref_ID {
            get {
                return this.Ref_IDField;
            }
            set {
                if ((this.Ref_IDField.Equals(value) != true)) {
                    this.Ref_IDField = value;
                    this.RaisePropertyChanged("Ref_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortName {
            get {
                return this.ShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortNameField, value) != true)) {
                    this.ShortNameField = value;
                    this.RaisePropertyChanged("ShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SortOrder {
            get {
                return this.SortOrderField;
            }
            set {
                if ((this.SortOrderField.Equals(value) != true)) {
                    this.SortOrderField = value;
                    this.RaisePropertyChanged("SortOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Title_ID {
            get {
                return this.Title_IDField;
            }
            set {
                if ((this.Title_IDField.Equals(value) != true)) {
                    this.Title_IDField = value;
                    this.RaisePropertyChanged("Title_ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DatacenterOrganizeService.IOrganizeService")]
    public interface IOrganizeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrganizeService/GetHospital", ReplyAction="http://tempuri.org/IOrganizeService/GetHospitalResponse")]
        SmileSUnderwrite.DatacenterOrganizeService.usp_Hospital_Select_Result[] GetHospital(string provinceId, string districtId, string subDistrictId, string keyWord, int pageSize, int indexStart, string sortField, string orderType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrganizeService/GetHospital", ReplyAction="http://tempuri.org/IOrganizeService/GetHospitalResponse")]
        System.Threading.Tasks.Task<SmileSUnderwrite.DatacenterOrganizeService.usp_Hospital_Select_Result[]> GetHospitalAsync(string provinceId, string districtId, string subDistrictId, string keyWord, int pageSize, int indexStart, string sortField, string orderType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrganizeService/GetOtherInsurance", ReplyAction="http://tempuri.org/IOrganizeService/GetOtherInsuranceResponse")]
        SmileSUnderwrite.DatacenterOrganizeService.usp_Insurance_Select_Result[] GetOtherInsurance(System.Nullable<int> insuranceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrganizeService/GetOtherInsurance", ReplyAction="http://tempuri.org/IOrganizeService/GetOtherInsuranceResponse")]
        System.Threading.Tasks.Task<SmileSUnderwrite.DatacenterOrganizeService.usp_Insurance_Select_Result[]> GetOtherInsuranceAsync(System.Nullable<int> insuranceId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOrganizeServiceChannel : SmileSUnderwrite.DatacenterOrganizeService.IOrganizeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OrganizeServiceClient : System.ServiceModel.ClientBase<SmileSUnderwrite.DatacenterOrganizeService.IOrganizeService>, SmileSUnderwrite.DatacenterOrganizeService.IOrganizeService {
        
        public OrganizeServiceClient() {
        }
        
        public OrganizeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OrganizeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrganizeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrganizeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SmileSUnderwrite.DatacenterOrganizeService.usp_Hospital_Select_Result[] GetHospital(string provinceId, string districtId, string subDistrictId, string keyWord, int pageSize, int indexStart, string sortField, string orderType) {
            return base.Channel.GetHospital(provinceId, districtId, subDistrictId, keyWord, pageSize, indexStart, sortField, orderType);
        }
        
        public System.Threading.Tasks.Task<SmileSUnderwrite.DatacenterOrganizeService.usp_Hospital_Select_Result[]> GetHospitalAsync(string provinceId, string districtId, string subDistrictId, string keyWord, int pageSize, int indexStart, string sortField, string orderType) {
            return base.Channel.GetHospitalAsync(provinceId, districtId, subDistrictId, keyWord, pageSize, indexStart, sortField, orderType);
        }
        
        public SmileSUnderwrite.DatacenterOrganizeService.usp_Insurance_Select_Result[] GetOtherInsurance(System.Nullable<int> insuranceId) {
            return base.Channel.GetOtherInsurance(insuranceId);
        }
        
        public System.Threading.Tasks.Task<SmileSUnderwrite.DatacenterOrganizeService.usp_Insurance_Select_Result[]> GetOtherInsuranceAsync(System.Nullable<int> insuranceId) {
            return base.Channel.GetOtherInsuranceAsync(insuranceId);
        }
    }
}
