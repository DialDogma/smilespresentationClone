//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmileClaimV1.ApplicationService_PA {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="usp_ApplicationSearch_Select_Result", Namespace="http://schemas.datacontract.org/2004/07/SmileSPAService.Model")]
    [System.SerializableAttribute()]
    public partial class usp_ApplicationSearch_Select_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ApplicationYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndCoverDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SchoolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartCoverDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationIDField, value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationStatus {
            get {
                return this.ApplicationStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationStatusField, value) != true)) {
                    this.ApplicationStatusField = value;
                    this.RaisePropertyChanged("ApplicationStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ApplicationYear {
            get {
                return this.ApplicationYearField;
            }
            set {
                if ((this.ApplicationYearField.Equals(value) != true)) {
                    this.ApplicationYearField = value;
                    this.RaisePropertyChanged("ApplicationYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndCoverDate {
            get {
                return this.EndCoverDateField;
            }
            set {
                if ((this.EndCoverDateField.Equals(value) != true)) {
                    this.EndCoverDateField = value;
                    this.RaisePropertyChanged("EndCoverDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string School {
            get {
                return this.SchoolField;
            }
            set {
                if ((object.ReferenceEquals(this.SchoolField, value) != true)) {
                    this.SchoolField = value;
                    this.RaisePropertyChanged("School");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartCoverDate {
            get {
                return this.StartCoverDateField;
            }
            set {
                if ((this.StartCoverDateField.Equals(value) != true)) {
                    this.StartCoverDateField = value;
                    this.RaisePropertyChanged("StartCoverDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="usp_ApplicationSearch_HeaderInfo_Result", Namespace="http://schemas.datacontract.org/2004/07/SmileSPAService.Model")]
    [System.SerializableAttribute()]
    public partial class usp_ApplicationSearch_HeaderInfo_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TotalPagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TotalRecordsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TotalPages {
            get {
                return this.TotalPagesField;
            }
            set {
                if ((this.TotalPagesField.Equals(value) != true)) {
                    this.TotalPagesField = value;
                    this.RaisePropertyChanged("TotalPages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TotalRecords {
            get {
                return this.TotalRecordsField;
            }
            set {
                if ((this.TotalRecordsField.Equals(value) != true)) {
                    this.TotalRecordsField = value;
                    this.RaisePropertyChanged("TotalRecords");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="usp_CustomerSearch_Select_Result", Namespace="http://schemas.datacontract.org/2004/07/SmileSPAService.Model")]
    [System.SerializableAttribute()]
    public partial class usp_CustomerSearch_Select_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerDetailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EffectiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndCoverDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartCoverDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationIDField, value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerDetailID {
            get {
                return this.CustomerDetailIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerDetailIDField, value) != true)) {
                    this.CustomerDetailIDField = value;
                    this.RaisePropertyChanged("CustomerDetailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerStatus {
            get {
                return this.CustomerStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerStatusField, value) != true)) {
                    this.CustomerStatusField = value;
                    this.RaisePropertyChanged("CustomerStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerType {
            get {
                return this.CustomerTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerTypeField, value) != true)) {
                    this.CustomerTypeField = value;
                    this.RaisePropertyChanged("CustomerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EffectiveDate {
            get {
                return this.EffectiveDateField;
            }
            set {
                if ((this.EffectiveDateField.Equals(value) != true)) {
                    this.EffectiveDateField = value;
                    this.RaisePropertyChanged("EffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndCoverDate {
            get {
                return this.EndCoverDateField;
            }
            set {
                if ((this.EndCoverDateField.Equals(value) != true)) {
                    this.EndCoverDateField = value;
                    this.RaisePropertyChanged("EndCoverDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartCoverDate {
            get {
                return this.StartCoverDateField;
            }
            set {
                if ((this.StartCoverDateField.Equals(value) != true)) {
                    this.StartCoverDateField = value;
                    this.RaisePropertyChanged("StartCoverDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="usp_CustomerDetail_Select_Result", Namespace="http://schemas.datacontract.org/2004/07/SmileSPAService.Model")]
    [System.SerializableAttribute()]
    public partial class usp_CustomerDetail_Select_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string App_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ApplicationYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerDetailStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EffectiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndCoverDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdentityNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LevelRoomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SchoolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string School_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartCoverDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string App_id {
            get {
                return this.App_idField;
            }
            set {
                if ((object.ReferenceEquals(this.App_idField, value) != true)) {
                    this.App_idField = value;
                    this.RaisePropertyChanged("App_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ApplicationYear {
            get {
                return this.ApplicationYearField;
            }
            set {
                if ((this.ApplicationYearField.Equals(value) != true)) {
                    this.ApplicationYearField = value;
                    this.RaisePropertyChanged("ApplicationYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerDetailStatus {
            get {
                return this.CustomerDetailStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerDetailStatusField, value) != true)) {
                    this.CustomerDetailStatusField = value;
                    this.RaisePropertyChanged("CustomerDetailStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerType {
            get {
                return this.CustomerTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerTypeField, value) != true)) {
                    this.CustomerTypeField = value;
                    this.RaisePropertyChanged("CustomerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EffectiveDate {
            get {
                return this.EffectiveDateField;
            }
            set {
                if ((this.EffectiveDateField.Equals(value) != true)) {
                    this.EffectiveDateField = value;
                    this.RaisePropertyChanged("EffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndCoverDate {
            get {
                return this.EndCoverDateField;
            }
            set {
                if ((this.EndCoverDateField.Equals(value) != true)) {
                    this.EndCoverDateField = value;
                    this.RaisePropertyChanged("EndCoverDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdentityNumber {
            get {
                return this.IdentityNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.IdentityNumberField, value) != true)) {
                    this.IdentityNumberField = value;
                    this.RaisePropertyChanged("IdentityNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LevelRoom {
            get {
                return this.LevelRoomField;
            }
            set {
                if ((object.ReferenceEquals(this.LevelRoomField, value) != true)) {
                    this.LevelRoomField = value;
                    this.RaisePropertyChanged("LevelRoom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Position {
            get {
                return this.PositionField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionField, value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string School {
            get {
                return this.SchoolField;
            }
            set {
                if ((object.ReferenceEquals(this.SchoolField, value) != true)) {
                    this.SchoolField = value;
                    this.RaisePropertyChanged("School");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string School_id {
            get {
                return this.School_idField;
            }
            set {
                if ((object.ReferenceEquals(this.School_idField, value) != true)) {
                    this.School_idField = value;
                    this.RaisePropertyChanged("School_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartCoverDate {
            get {
                return this.StartCoverDateField;
            }
            set {
                if ((this.StartCoverDateField.Equals(value) != true)) {
                    this.StartCoverDateField = value;
                    this.RaisePropertyChanged("StartCoverDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="usp_BenefitCoverage_ByBenefitID_Select_Result", Namespace="http://schemas.datacontract.org/2004/07/SmileSPAService.Model")]
    [System.SerializableAttribute()]
    public partial class usp_BenefitCoverage_ByBenefitID_Select_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BenefitNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> CoverageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationIDField, value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BenefitName {
            get {
                return this.BenefitNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BenefitNameField, value) != true)) {
                    this.BenefitNameField = value;
                    this.RaisePropertyChanged("BenefitName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Coverage {
            get {
                return this.CoverageField;
            }
            set {
                if ((this.CoverageField.Equals(value) != true)) {
                    this.CoverageField = value;
                    this.RaisePropertyChanged("Coverage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerType {
            get {
                return this.CustomerTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerTypeField, value) != true)) {
                    this.CustomerTypeField = value;
                    this.RaisePropertyChanged("CustomerType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="usp_CustomerBenefitDetail_Select_Result", Namespace="http://schemas.datacontract.org/2004/07/SmileSPAService.Model")]
    [System.SerializableAttribute()]
    public partial class usp_CustomerBenefitDetail_Select_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BenefitDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> CoverageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationIDField, value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BenefitDetail {
            get {
                return this.BenefitDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.BenefitDetailField, value) != true)) {
                    this.BenefitDetailField = value;
                    this.RaisePropertyChanged("BenefitDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Coverage {
            get {
                return this.CoverageField;
            }
            set {
                if ((this.CoverageField.Equals(value) != true)) {
                    this.CoverageField = value;
                    this.RaisePropertyChanged("Coverage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerType {
            get {
                return this.CustomerTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerTypeField, value) != true)) {
                    this.CustomerTypeField = value;
                    this.RaisePropertyChanged("CustomerType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="usp_CustomerSearch_HeaderInfo_Result", Namespace="http://schemas.datacontract.org/2004/07/SmileSPAService.Model")]
    [System.SerializableAttribute()]
    public partial class usp_CustomerSearch_HeaderInfo_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TotalPagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TotalRecordsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TotalPages {
            get {
                return this.TotalPagesField;
            }
            set {
                if ((this.TotalPagesField.Equals(value) != true)) {
                    this.TotalPagesField = value;
                    this.RaisePropertyChanged("TotalPages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TotalRecords {
            get {
                return this.TotalRecordsField;
            }
            set {
                if ((this.TotalRecordsField.Equals(value) != true)) {
                    this.TotalRecordsField = value;
                    this.RaisePropertyChanged("TotalRecords");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="usp_ApplicationYear_Select_Result", Namespace="http://schemas.datacontract.org/2004/07/SmileSPAService.Model")]
    [System.SerializableAttribute()]
    public partial class usp_ApplicationYear_Select_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Detail {
            get {
                return this.DetailField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailField, value) != true)) {
                    this.DetailField = value;
                    this.RaisePropertyChanged("Detail");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="usp_ApplicationDetail_Select_Result", Namespace="http://schemas.datacontract.org/2004/07/SmileSPAService.Model")]
    [System.SerializableAttribute()]
    public partial class usp_ApplicationDetail_Select_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SchoolIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SchoolNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationIDField, value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SchoolID {
            get {
                return this.SchoolIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SchoolIDField, value) != true)) {
                    this.SchoolIDField = value;
                    this.RaisePropertyChanged("SchoolID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SchoolName {
            get {
                return this.SchoolNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SchoolNameField, value) != true)) {
                    this.SchoolNameField = value;
                    this.RaisePropertyChanged("SchoolName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ApplicationService_PA.IApplicationService")]
    public interface IApplicationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/ApplicationSearch", ReplyAction="http://tempuri.org/IApplicationService/ApplicationSearchResponse")]
        SmileClaimV1.ApplicationService_PA.usp_ApplicationSearch_Select_Result[] ApplicationSearch(int rowsPerPage, int pageNumber, string criteria, System.Nullable<int> applicationYear, string schoolId, string provinceId, string districtId, string branchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/ApplicationSearch", ReplyAction="http://tempuri.org/IApplicationService/ApplicationSearchResponse")]
        System.Threading.Tasks.Task<SmileClaimV1.ApplicationService_PA.usp_ApplicationSearch_Select_Result[]> ApplicationSearchAsync(int rowsPerPage, int pageNumber, string criteria, System.Nullable<int> applicationYear, string schoolId, string provinceId, string districtId, string branchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/ApplicationSearchHeaderInfo", ReplyAction="http://tempuri.org/IApplicationService/ApplicationSearchHeaderInfoResponse")]
        SmileClaimV1.ApplicationService_PA.usp_ApplicationSearch_HeaderInfo_Result ApplicationSearchHeaderInfo(int pageSize, string criteria, System.Nullable<int> applicationYear, string schoolId, string provinceId, string districtId, string branchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/ApplicationSearchHeaderInfo", ReplyAction="http://tempuri.org/IApplicationService/ApplicationSearchHeaderInfoResponse")]
        System.Threading.Tasks.Task<SmileClaimV1.ApplicationService_PA.usp_ApplicationSearch_HeaderInfo_Result> ApplicationSearchHeaderInfoAsync(int pageSize, string criteria, System.Nullable<int> applicationYear, string schoolId, string provinceId, string districtId, string branchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/CustomerSearch", ReplyAction="http://tempuri.org/IApplicationService/CustomerSearchResponse")]
        SmileClaimV1.ApplicationService_PA.usp_CustomerSearch_Select_Result[] CustomerSearch(string applicationID, int rowsPerPage, int pageNumber, string criteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/CustomerSearch", ReplyAction="http://tempuri.org/IApplicationService/CustomerSearchResponse")]
        System.Threading.Tasks.Task<SmileClaimV1.ApplicationService_PA.usp_CustomerSearch_Select_Result[]> CustomerSearchAsync(string applicationID, int rowsPerPage, int pageNumber, string criteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetCustomerDetail", ReplyAction="http://tempuri.org/IApplicationService/GetCustomerDetailResponse")]
        SmileClaimV1.ApplicationService_PA.usp_CustomerDetail_Select_Result[] GetCustomerDetail(string CustomerDetailID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetCustomerDetail", ReplyAction="http://tempuri.org/IApplicationService/GetCustomerDetailResponse")]
        System.Threading.Tasks.Task<SmileClaimV1.ApplicationService_PA.usp_CustomerDetail_Select_Result[]> GetCustomerDetailAsync(string CustomerDetailID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetCoverageByBenefitID", ReplyAction="http://tempuri.org/IApplicationService/GetCoverageByBenefitIDResponse")]
        SmileClaimV1.ApplicationService_PA.usp_BenefitCoverage_ByBenefitID_Select_Result[] GetCoverageByBenefitID(string applicationID, string benefitID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetCoverageByBenefitID", ReplyAction="http://tempuri.org/IApplicationService/GetCoverageByBenefitIDResponse")]
        System.Threading.Tasks.Task<SmileClaimV1.ApplicationService_PA.usp_BenefitCoverage_ByBenefitID_Select_Result[]> GetCoverageByBenefitIDAsync(string applicationID, string benefitID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetCustomerBenefitDetail", ReplyAction="http://tempuri.org/IApplicationService/GetCustomerBenefitDetailResponse")]
        SmileClaimV1.ApplicationService_PA.usp_CustomerBenefitDetail_Select_Result[] GetCustomerBenefitDetail(string applicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetCustomerBenefitDetail", ReplyAction="http://tempuri.org/IApplicationService/GetCustomerBenefitDetailResponse")]
        System.Threading.Tasks.Task<SmileClaimV1.ApplicationService_PA.usp_CustomerBenefitDetail_Select_Result[]> GetCustomerBenefitDetailAsync(string applicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetCustomerSearchHeaderInfo", ReplyAction="http://tempuri.org/IApplicationService/GetCustomerSearchHeaderInfoResponse")]
        SmileClaimV1.ApplicationService_PA.usp_CustomerSearch_HeaderInfo_Result GetCustomerSearchHeaderInfo(int pageSize, string applicationID, string criteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetCustomerSearchHeaderInfo", ReplyAction="http://tempuri.org/IApplicationService/GetCustomerSearchHeaderInfoResponse")]
        System.Threading.Tasks.Task<SmileClaimV1.ApplicationService_PA.usp_CustomerSearch_HeaderInfo_Result> GetCustomerSearchHeaderInfoAsync(int pageSize, string applicationID, string criteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetApplicationYear", ReplyAction="http://tempuri.org/IApplicationService/GetApplicationYearResponse")]
        SmileClaimV1.ApplicationService_PA.usp_ApplicationYear_Select_Result[] GetApplicationYear();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetApplicationYear", ReplyAction="http://tempuri.org/IApplicationService/GetApplicationYearResponse")]
        System.Threading.Tasks.Task<SmileClaimV1.ApplicationService_PA.usp_ApplicationYear_Select_Result[]> GetApplicationYearAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetApplicationDetailByApplicationID", ReplyAction="http://tempuri.org/IApplicationService/GetApplicationDetailByApplicationIDRespons" +
            "e")]
        SmileClaimV1.ApplicationService_PA.usp_ApplicationDetail_Select_Result GetApplicationDetailByApplicationID(string applicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetApplicationDetailByApplicationID", ReplyAction="http://tempuri.org/IApplicationService/GetApplicationDetailByApplicationIDRespons" +
            "e")]
        System.Threading.Tasks.Task<SmileClaimV1.ApplicationService_PA.usp_ApplicationDetail_Select_Result> GetApplicationDetailByApplicationIDAsync(string applicationID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IApplicationServiceChannel : SmileClaimV1.ApplicationService_PA.IApplicationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ApplicationServiceClient : System.ServiceModel.ClientBase<SmileClaimV1.ApplicationService_PA.IApplicationService>, SmileClaimV1.ApplicationService_PA.IApplicationService {
        
        public ApplicationServiceClient() {
        }
        
        public ApplicationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ApplicationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ApplicationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ApplicationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SmileClaimV1.ApplicationService_PA.usp_ApplicationSearch_Select_Result[] ApplicationSearch(int rowsPerPage, int pageNumber, string criteria, System.Nullable<int> applicationYear, string schoolId, string provinceId, string districtId, string branchId) {
            return base.Channel.ApplicationSearch(rowsPerPage, pageNumber, criteria, applicationYear, schoolId, provinceId, districtId, branchId);
        }
        
        public System.Threading.Tasks.Task<SmileClaimV1.ApplicationService_PA.usp_ApplicationSearch_Select_Result[]> ApplicationSearchAsync(int rowsPerPage, int pageNumber, string criteria, System.Nullable<int> applicationYear, string schoolId, string provinceId, string districtId, string branchId) {
            return base.Channel.ApplicationSearchAsync(rowsPerPage, pageNumber, criteria, applicationYear, schoolId, provinceId, districtId, branchId);
        }
        
        public SmileClaimV1.ApplicationService_PA.usp_ApplicationSearch_HeaderInfo_Result ApplicationSearchHeaderInfo(int pageSize, string criteria, System.Nullable<int> applicationYear, string schoolId, string provinceId, string districtId, string branchId) {
            return base.Channel.ApplicationSearchHeaderInfo(pageSize, criteria, applicationYear, schoolId, provinceId, districtId, branchId);
        }
        
        public System.Threading.Tasks.Task<SmileClaimV1.ApplicationService_PA.usp_ApplicationSearch_HeaderInfo_Result> ApplicationSearchHeaderInfoAsync(int pageSize, string criteria, System.Nullable<int> applicationYear, string schoolId, string provinceId, string districtId, string branchId) {
            return base.Channel.ApplicationSearchHeaderInfoAsync(pageSize, criteria, applicationYear, schoolId, provinceId, districtId, branchId);
        }
        
        public SmileClaimV1.ApplicationService_PA.usp_CustomerSearch_Select_Result[] CustomerSearch(string applicationID, int rowsPerPage, int pageNumber, string criteria) {
            return base.Channel.CustomerSearch(applicationID, rowsPerPage, pageNumber, criteria);
        }
        
        public System.Threading.Tasks.Task<SmileClaimV1.ApplicationService_PA.usp_CustomerSearch_Select_Result[]> CustomerSearchAsync(string applicationID, int rowsPerPage, int pageNumber, string criteria) {
            return base.Channel.CustomerSearchAsync(applicationID, rowsPerPage, pageNumber, criteria);
        }
        
        public SmileClaimV1.ApplicationService_PA.usp_CustomerDetail_Select_Result[] GetCustomerDetail(string CustomerDetailID) {
            return base.Channel.GetCustomerDetail(CustomerDetailID);
        }
        
        public System.Threading.Tasks.Task<SmileClaimV1.ApplicationService_PA.usp_CustomerDetail_Select_Result[]> GetCustomerDetailAsync(string CustomerDetailID) {
            return base.Channel.GetCustomerDetailAsync(CustomerDetailID);
        }
        
        public SmileClaimV1.ApplicationService_PA.usp_BenefitCoverage_ByBenefitID_Select_Result[] GetCoverageByBenefitID(string applicationID, string benefitID) {
            return base.Channel.GetCoverageByBenefitID(applicationID, benefitID);
        }
        
        public System.Threading.Tasks.Task<SmileClaimV1.ApplicationService_PA.usp_BenefitCoverage_ByBenefitID_Select_Result[]> GetCoverageByBenefitIDAsync(string applicationID, string benefitID) {
            return base.Channel.GetCoverageByBenefitIDAsync(applicationID, benefitID);
        }
        
        public SmileClaimV1.ApplicationService_PA.usp_CustomerBenefitDetail_Select_Result[] GetCustomerBenefitDetail(string applicationID) {
            return base.Channel.GetCustomerBenefitDetail(applicationID);
        }
        
        public System.Threading.Tasks.Task<SmileClaimV1.ApplicationService_PA.usp_CustomerBenefitDetail_Select_Result[]> GetCustomerBenefitDetailAsync(string applicationID) {
            return base.Channel.GetCustomerBenefitDetailAsync(applicationID);
        }
        
        public SmileClaimV1.ApplicationService_PA.usp_CustomerSearch_HeaderInfo_Result GetCustomerSearchHeaderInfo(int pageSize, string applicationID, string criteria) {
            return base.Channel.GetCustomerSearchHeaderInfo(pageSize, applicationID, criteria);
        }
        
        public System.Threading.Tasks.Task<SmileClaimV1.ApplicationService_PA.usp_CustomerSearch_HeaderInfo_Result> GetCustomerSearchHeaderInfoAsync(int pageSize, string applicationID, string criteria) {
            return base.Channel.GetCustomerSearchHeaderInfoAsync(pageSize, applicationID, criteria);
        }
        
        public SmileClaimV1.ApplicationService_PA.usp_ApplicationYear_Select_Result[] GetApplicationYear() {
            return base.Channel.GetApplicationYear();
        }
        
        public System.Threading.Tasks.Task<SmileClaimV1.ApplicationService_PA.usp_ApplicationYear_Select_Result[]> GetApplicationYearAsync() {
            return base.Channel.GetApplicationYearAsync();
        }
        
        public SmileClaimV1.ApplicationService_PA.usp_ApplicationDetail_Select_Result GetApplicationDetailByApplicationID(string applicationID) {
            return base.Channel.GetApplicationDetailByApplicationID(applicationID);
        }
        
        public System.Threading.Tasks.Task<SmileClaimV1.ApplicationService_PA.usp_ApplicationDetail_Select_Result> GetApplicationDetailByApplicationIDAsync(string applicationID) {
            return base.Channel.GetApplicationDetailByApplicationIDAsync(applicationID);
        }
    }
}
