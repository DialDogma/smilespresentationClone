//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmileClaimV1.ClaimService_PH {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="usp_CountOPDByApp_YearFormat_select_Result", Namespace="http://schemas.datacontract.org/2004/07/SmileSPHService.Model")]
    [System.SerializableAttribute()]
    public partial class usp_CountOPDByApp_YearFormat_select_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OPD_AllField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OPD_NetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OPD_UsedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OPD_All {
            get {
                return this.OPD_AllField;
            }
            set {
                if ((this.OPD_AllField.Equals(value) != true)) {
                    this.OPD_AllField = value;
                    this.RaisePropertyChanged("OPD_All");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OPD_Net {
            get {
                return this.OPD_NetField;
            }
            set {
                if ((this.OPD_NetField.Equals(value) != true)) {
                    this.OPD_NetField = value;
                    this.RaisePropertyChanged("OPD_Net");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OPD_Used {
            get {
                return this.OPD_UsedField;
            }
            set {
                if ((this.OPD_UsedField.Equals(value) != true)) {
                    this.OPD_UsedField = value;
                    this.RaisePropertyChanged("OPD_Used");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ClaimService_PH.IClaimService")]
    public interface IClaimService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/GetCountOPD", ReplyAction="http://tempuri.org/IClaimService/GetCountOPDResponse")]
        SmileClaimV1.ClaimService_PH.usp_CountOPDByApp_YearFormat_select_Result GetCountOPD(string _applicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/GetCountOPD", ReplyAction="http://tempuri.org/IClaimService/GetCountOPDResponse")]
        System.Threading.Tasks.Task<SmileClaimV1.ClaimService_PH.usp_CountOPDByApp_YearFormat_select_Result> GetCountOPDAsync(string _applicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/CreateClaimPH", ReplyAction="http://tempuri.org/IClaimService/CreateClaimPHResponse")]
        string CreateClaimPH(
                    string _applicationID, 
                    string _hospitalID, 
                    string _claimtypeID, 
                    string _claimadmittypeID, 
                    System.DateTime _datehappen, 
                    string _productID, 
                    string _insurancecompanyID, 
                    string _chiefcomplainID, 
                    string _statusID, 
                    string _createdbyID, 
                    string _continuefromclaimID, 
                    string _agentID, 
                    string _chiefcomplainanswer, 
                    string _ICD10_1, 
                    string _ICD10_2, 
                    string _ICD10_3, 
                    string _remark, 
                    string _overfromcompany, 
                    string _denycauseID, 
                    string _receiptstatusID, 
                    string _sendinsurancestatusID, 
                    string _payhospitalcashheaderID, 
                    string _claimheadergroupID, 
                    string _approvedbyID, 
                    string _claimpaybyID, 
                    string hospitalClaimInformCode, 
                    System.Nullable<bool> _iscontinue, 
                    System.Nullable<System.DateTime> _datenotice, 
                    System.Nullable<int> _ageatclaim_year, 
                    System.Nullable<int> _ageatclaim_month, 
                    System.Nullable<int> _ageatclaim_day, 
                    System.Nullable<int> _ageappatclaim_year, 
                    System.Nullable<int> _ageappatclaim_month, 
                    System.Nullable<int> _ageappatclaim_day, 
                    System.Nullable<bool> _iswalkoutclaim, 
                    System.Nullable<bool> _ischiefcomplainwarning, 
                    System.Nullable<bool> _iscontinueclaimwarning, 
                    System.Nullable<bool> _isexgratia, 
                    System.Nullable<bool> _isnoDCRwarning, 
                    System.Nullable<bool> _ispaycenter, 
                    System.Nullable<System.DateTime> _approveddate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/CreateClaimPH", ReplyAction="http://tempuri.org/IClaimService/CreateClaimPHResponse")]
        System.Threading.Tasks.Task<string> CreateClaimPHAsync(
                    string _applicationID, 
                    string _hospitalID, 
                    string _claimtypeID, 
                    string _claimadmittypeID, 
                    System.DateTime _datehappen, 
                    string _productID, 
                    string _insurancecompanyID, 
                    string _chiefcomplainID, 
                    string _statusID, 
                    string _createdbyID, 
                    string _continuefromclaimID, 
                    string _agentID, 
                    string _chiefcomplainanswer, 
                    string _ICD10_1, 
                    string _ICD10_2, 
                    string _ICD10_3, 
                    string _remark, 
                    string _overfromcompany, 
                    string _denycauseID, 
                    string _receiptstatusID, 
                    string _sendinsurancestatusID, 
                    string _payhospitalcashheaderID, 
                    string _claimheadergroupID, 
                    string _approvedbyID, 
                    string _claimpaybyID, 
                    string hospitalClaimInformCode, 
                    System.Nullable<bool> _iscontinue, 
                    System.Nullable<System.DateTime> _datenotice, 
                    System.Nullable<int> _ageatclaim_year, 
                    System.Nullable<int> _ageatclaim_month, 
                    System.Nullable<int> _ageatclaim_day, 
                    System.Nullable<int> _ageappatclaim_year, 
                    System.Nullable<int> _ageappatclaim_month, 
                    System.Nullable<int> _ageappatclaim_day, 
                    System.Nullable<bool> _iswalkoutclaim, 
                    System.Nullable<bool> _ischiefcomplainwarning, 
                    System.Nullable<bool> _iscontinueclaimwarning, 
                    System.Nullable<bool> _isexgratia, 
                    System.Nullable<bool> _isnoDCRwarning, 
                    System.Nullable<bool> _ispaycenter, 
                    System.Nullable<System.DateTime> _approveddate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/UpdateStatusClaimNotUse", ReplyAction="http://tempuri.org/IClaimService/UpdateStatusClaimNotUseResponse")]
        string UpdateStatusClaimNotUse(string ClaimID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/UpdateStatusClaimNotUse", ReplyAction="http://tempuri.org/IClaimService/UpdateStatusClaimNotUseResponse")]
        System.Threading.Tasks.Task<string> UpdateStatusClaimNotUseAsync(string ClaimID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClaimServiceChannel : SmileClaimV1.ClaimService_PH.IClaimService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClaimServiceClient : System.ServiceModel.ClientBase<SmileClaimV1.ClaimService_PH.IClaimService>, SmileClaimV1.ClaimService_PH.IClaimService {
        
        public ClaimServiceClient() {
        }
        
        public ClaimServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClaimServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClaimServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClaimServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SmileClaimV1.ClaimService_PH.usp_CountOPDByApp_YearFormat_select_Result GetCountOPD(string _applicationID) {
            return base.Channel.GetCountOPD(_applicationID);
        }
        
        public System.Threading.Tasks.Task<SmileClaimV1.ClaimService_PH.usp_CountOPDByApp_YearFormat_select_Result> GetCountOPDAsync(string _applicationID) {
            return base.Channel.GetCountOPDAsync(_applicationID);
        }
        
        public string CreateClaimPH(
                    string _applicationID, 
                    string _hospitalID, 
                    string _claimtypeID, 
                    string _claimadmittypeID, 
                    System.DateTime _datehappen, 
                    string _productID, 
                    string _insurancecompanyID, 
                    string _chiefcomplainID, 
                    string _statusID, 
                    string _createdbyID, 
                    string _continuefromclaimID, 
                    string _agentID, 
                    string _chiefcomplainanswer, 
                    string _ICD10_1, 
                    string _ICD10_2, 
                    string _ICD10_3, 
                    string _remark, 
                    string _overfromcompany, 
                    string _denycauseID, 
                    string _receiptstatusID, 
                    string _sendinsurancestatusID, 
                    string _payhospitalcashheaderID, 
                    string _claimheadergroupID, 
                    string _approvedbyID, 
                    string _claimpaybyID, 
                    string hospitalClaimInformCode, 
                    System.Nullable<bool> _iscontinue, 
                    System.Nullable<System.DateTime> _datenotice, 
                    System.Nullable<int> _ageatclaim_year, 
                    System.Nullable<int> _ageatclaim_month, 
                    System.Nullable<int> _ageatclaim_day, 
                    System.Nullable<int> _ageappatclaim_year, 
                    System.Nullable<int> _ageappatclaim_month, 
                    System.Nullable<int> _ageappatclaim_day, 
                    System.Nullable<bool> _iswalkoutclaim, 
                    System.Nullable<bool> _ischiefcomplainwarning, 
                    System.Nullable<bool> _iscontinueclaimwarning, 
                    System.Nullable<bool> _isexgratia, 
                    System.Nullable<bool> _isnoDCRwarning, 
                    System.Nullable<bool> _ispaycenter, 
                    System.Nullable<System.DateTime> _approveddate) {
            return base.Channel.CreateClaimPH(_applicationID, _hospitalID, _claimtypeID, _claimadmittypeID, _datehappen, _productID, _insurancecompanyID, _chiefcomplainID, _statusID, _createdbyID, _continuefromclaimID, _agentID, _chiefcomplainanswer, _ICD10_1, _ICD10_2, _ICD10_3, _remark, _overfromcompany, _denycauseID, _receiptstatusID, _sendinsurancestatusID, _payhospitalcashheaderID, _claimheadergroupID, _approvedbyID, _claimpaybyID, hospitalClaimInformCode, _iscontinue, _datenotice, _ageatclaim_year, _ageatclaim_month, _ageatclaim_day, _ageappatclaim_year, _ageappatclaim_month, _ageappatclaim_day, _iswalkoutclaim, _ischiefcomplainwarning, _iscontinueclaimwarning, _isexgratia, _isnoDCRwarning, _ispaycenter, _approveddate);
        }
        
        public System.Threading.Tasks.Task<string> CreateClaimPHAsync(
                    string _applicationID, 
                    string _hospitalID, 
                    string _claimtypeID, 
                    string _claimadmittypeID, 
                    System.DateTime _datehappen, 
                    string _productID, 
                    string _insurancecompanyID, 
                    string _chiefcomplainID, 
                    string _statusID, 
                    string _createdbyID, 
                    string _continuefromclaimID, 
                    string _agentID, 
                    string _chiefcomplainanswer, 
                    string _ICD10_1, 
                    string _ICD10_2, 
                    string _ICD10_3, 
                    string _remark, 
                    string _overfromcompany, 
                    string _denycauseID, 
                    string _receiptstatusID, 
                    string _sendinsurancestatusID, 
                    string _payhospitalcashheaderID, 
                    string _claimheadergroupID, 
                    string _approvedbyID, 
                    string _claimpaybyID, 
                    string hospitalClaimInformCode, 
                    System.Nullable<bool> _iscontinue, 
                    System.Nullable<System.DateTime> _datenotice, 
                    System.Nullable<int> _ageatclaim_year, 
                    System.Nullable<int> _ageatclaim_month, 
                    System.Nullable<int> _ageatclaim_day, 
                    System.Nullable<int> _ageappatclaim_year, 
                    System.Nullable<int> _ageappatclaim_month, 
                    System.Nullable<int> _ageappatclaim_day, 
                    System.Nullable<bool> _iswalkoutclaim, 
                    System.Nullable<bool> _ischiefcomplainwarning, 
                    System.Nullable<bool> _iscontinueclaimwarning, 
                    System.Nullable<bool> _isexgratia, 
                    System.Nullable<bool> _isnoDCRwarning, 
                    System.Nullable<bool> _ispaycenter, 
                    System.Nullable<System.DateTime> _approveddate) {
            return base.Channel.CreateClaimPHAsync(_applicationID, _hospitalID, _claimtypeID, _claimadmittypeID, _datehappen, _productID, _insurancecompanyID, _chiefcomplainID, _statusID, _createdbyID, _continuefromclaimID, _agentID, _chiefcomplainanswer, _ICD10_1, _ICD10_2, _ICD10_3, _remark, _overfromcompany, _denycauseID, _receiptstatusID, _sendinsurancestatusID, _payhospitalcashheaderID, _claimheadergroupID, _approvedbyID, _claimpaybyID, hospitalClaimInformCode, _iscontinue, _datenotice, _ageatclaim_year, _ageatclaim_month, _ageatclaim_day, _ageappatclaim_year, _ageappatclaim_month, _ageappatclaim_day, _iswalkoutclaim, _ischiefcomplainwarning, _iscontinueclaimwarning, _isexgratia, _isnoDCRwarning, _ispaycenter, _approveddate);
        }
        
        public string UpdateStatusClaimNotUse(string ClaimID) {
            return base.Channel.UpdateStatusClaimNotUse(ClaimID);
        }
        
        public System.Threading.Tasks.Task<string> UpdateStatusClaimNotUseAsync(string ClaimID) {
            return base.Channel.UpdateStatusClaimNotUseAsync(ClaimID);
        }
    }
}
