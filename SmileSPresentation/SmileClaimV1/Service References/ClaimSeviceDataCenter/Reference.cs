//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmileClaimV1.ClaimSeviceDataCenter {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="usp_ClaimType_Select_Result", Namespace="http://schemas.datacontract.org/2004/07/SmileDataCenterService.Model")]
    [System.SerializableAttribute()]
    public partial class usp_ClaimType_Select_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClaimTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClaimTypeDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClaimTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ProductGroupIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClaimTypeCode {
            get {
                return this.ClaimTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaimTypeCodeField, value) != true)) {
                    this.ClaimTypeCodeField = value;
                    this.RaisePropertyChanged("ClaimTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClaimTypeDetail {
            get {
                return this.ClaimTypeDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaimTypeDetailField, value) != true)) {
                    this.ClaimTypeDetailField = value;
                    this.RaisePropertyChanged("ClaimTypeDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClaimTypeID {
            get {
                return this.ClaimTypeIDField;
            }
            set {
                if ((this.ClaimTypeIDField.Equals(value) != true)) {
                    this.ClaimTypeIDField = value;
                    this.RaisePropertyChanged("ClaimTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProductGroupID {
            get {
                return this.ProductGroupIDField;
            }
            set {
                if ((this.ProductGroupIDField.Equals(value) != true)) {
                    this.ProductGroupIDField = value;
                    this.RaisePropertyChanged("ProductGroupID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="usp_ClaimAdmitType_Select_Result", Namespace="http://schemas.datacontract.org/2004/07/SmileDataCenterService.Model")]
    [System.SerializableAttribute()]
    public partial class usp_ClaimAdmitType_Select_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClaimAdmitTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClaimAdmitTypeDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClaimAdmitTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClaimTypeDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ProductGroupIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClaimAdmitTypeCode {
            get {
                return this.ClaimAdmitTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaimAdmitTypeCodeField, value) != true)) {
                    this.ClaimAdmitTypeCodeField = value;
                    this.RaisePropertyChanged("ClaimAdmitTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClaimAdmitTypeDetail {
            get {
                return this.ClaimAdmitTypeDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaimAdmitTypeDetailField, value) != true)) {
                    this.ClaimAdmitTypeDetailField = value;
                    this.RaisePropertyChanged("ClaimAdmitTypeDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClaimAdmitTypeID {
            get {
                return this.ClaimAdmitTypeIDField;
            }
            set {
                if ((this.ClaimAdmitTypeIDField.Equals(value) != true)) {
                    this.ClaimAdmitTypeIDField = value;
                    this.RaisePropertyChanged("ClaimAdmitTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClaimTypeDetail {
            get {
                return this.ClaimTypeDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaimTypeDetailField, value) != true)) {
                    this.ClaimTypeDetailField = value;
                    this.RaisePropertyChanged("ClaimTypeDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProductGroupID {
            get {
                return this.ProductGroupIDField;
            }
            set {
                if ((this.ProductGroupIDField.Equals(value) != true)) {
                    this.ProductGroupIDField = value;
                    this.RaisePropertyChanged("ProductGroupID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="usp_ChiefComplain_Select_Result", Namespace="http://schemas.datacontract.org/2004/07/SmileDataCenterService.Model")]
    [System.SerializableAttribute()]
    public partial class usp_ChiefComplain_Select_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Authorize_ConditionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChiefComplainCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChiefComplainDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChiefComplainIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Hospital_NoticeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsConsultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuestionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Authorize_Condition {
            get {
                return this.Authorize_ConditionField;
            }
            set {
                if ((object.ReferenceEquals(this.Authorize_ConditionField, value) != true)) {
                    this.Authorize_ConditionField = value;
                    this.RaisePropertyChanged("Authorize_Condition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChiefComplainCode {
            get {
                return this.ChiefComplainCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ChiefComplainCodeField, value) != true)) {
                    this.ChiefComplainCodeField = value;
                    this.RaisePropertyChanged("ChiefComplainCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChiefComplainDetail {
            get {
                return this.ChiefComplainDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.ChiefComplainDetailField, value) != true)) {
                    this.ChiefComplainDetailField = value;
                    this.RaisePropertyChanged("ChiefComplainDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChiefComplainID {
            get {
                return this.ChiefComplainIDField;
            }
            set {
                if ((this.ChiefComplainIDField.Equals(value) != true)) {
                    this.ChiefComplainIDField = value;
                    this.RaisePropertyChanged("ChiefComplainID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Hospital_Notice {
            get {
                return this.Hospital_NoticeField;
            }
            set {
                if ((object.ReferenceEquals(this.Hospital_NoticeField, value) != true)) {
                    this.Hospital_NoticeField = value;
                    this.RaisePropertyChanged("Hospital_Notice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsConsult {
            get {
                return this.IsConsultField;
            }
            set {
                if ((this.IsConsultField.Equals(value) != true)) {
                    this.IsConsultField = value;
                    this.RaisePropertyChanged("IsConsult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Question {
            get {
                return this.QuestionField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionField, value) != true)) {
                    this.QuestionField = value;
                    this.RaisePropertyChanged("Question");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ClaimSeviceDataCenter.IClaimService")]
    public interface IClaimService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/GetClaimType", ReplyAction="http://tempuri.org/IClaimService/GetClaimTypeResponse")]
        SmileClaimV1.ClaimSeviceDataCenter.usp_ClaimType_Select_Result[] GetClaimType(System.Nullable<int> productGroupID, System.Nullable<bool> isActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/GetClaimType", ReplyAction="http://tempuri.org/IClaimService/GetClaimTypeResponse")]
        System.Threading.Tasks.Task<SmileClaimV1.ClaimSeviceDataCenter.usp_ClaimType_Select_Result[]> GetClaimTypeAsync(System.Nullable<int> productGroupID, System.Nullable<bool> isActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/GetClaimAdmidType", ReplyAction="http://tempuri.org/IClaimService/GetClaimAdmidTypeResponse")]
        SmileClaimV1.ClaimSeviceDataCenter.usp_ClaimAdmitType_Select_Result[] GetClaimAdmidType(System.Nullable<int> productGroupID, System.Nullable<int> claimTypeID, System.Nullable<bool> isActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/GetClaimAdmidType", ReplyAction="http://tempuri.org/IClaimService/GetClaimAdmidTypeResponse")]
        System.Threading.Tasks.Task<SmileClaimV1.ClaimSeviceDataCenter.usp_ClaimAdmitType_Select_Result[]> GetClaimAdmidTypeAsync(System.Nullable<int> productGroupID, System.Nullable<int> claimTypeID, System.Nullable<bool> isActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/GetChiefComplain", ReplyAction="http://tempuri.org/IClaimService/GetChiefComplainResponse")]
        SmileClaimV1.ClaimSeviceDataCenter.usp_ChiefComplain_Select_Result[] GetChiefComplain(System.Nullable<int> chiefComplainID, System.Nullable<bool> isActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/GetChiefComplain", ReplyAction="http://tempuri.org/IClaimService/GetChiefComplainResponse")]
        System.Threading.Tasks.Task<SmileClaimV1.ClaimSeviceDataCenter.usp_ChiefComplain_Select_Result[]> GetChiefComplainAsync(System.Nullable<int> chiefComplainID, System.Nullable<bool> isActive);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClaimServiceChannel : SmileClaimV1.ClaimSeviceDataCenter.IClaimService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClaimServiceClient : System.ServiceModel.ClientBase<SmileClaimV1.ClaimSeviceDataCenter.IClaimService>, SmileClaimV1.ClaimSeviceDataCenter.IClaimService {
        
        public ClaimServiceClient() {
        }
        
        public ClaimServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClaimServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClaimServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClaimServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SmileClaimV1.ClaimSeviceDataCenter.usp_ClaimType_Select_Result[] GetClaimType(System.Nullable<int> productGroupID, System.Nullable<bool> isActive) {
            return base.Channel.GetClaimType(productGroupID, isActive);
        }
        
        public System.Threading.Tasks.Task<SmileClaimV1.ClaimSeviceDataCenter.usp_ClaimType_Select_Result[]> GetClaimTypeAsync(System.Nullable<int> productGroupID, System.Nullable<bool> isActive) {
            return base.Channel.GetClaimTypeAsync(productGroupID, isActive);
        }
        
        public SmileClaimV1.ClaimSeviceDataCenter.usp_ClaimAdmitType_Select_Result[] GetClaimAdmidType(System.Nullable<int> productGroupID, System.Nullable<int> claimTypeID, System.Nullable<bool> isActive) {
            return base.Channel.GetClaimAdmidType(productGroupID, claimTypeID, isActive);
        }
        
        public System.Threading.Tasks.Task<SmileClaimV1.ClaimSeviceDataCenter.usp_ClaimAdmitType_Select_Result[]> GetClaimAdmidTypeAsync(System.Nullable<int> productGroupID, System.Nullable<int> claimTypeID, System.Nullable<bool> isActive) {
            return base.Channel.GetClaimAdmidTypeAsync(productGroupID, claimTypeID, isActive);
        }
        
        public SmileClaimV1.ClaimSeviceDataCenter.usp_ChiefComplain_Select_Result[] GetChiefComplain(System.Nullable<int> chiefComplainID, System.Nullable<bool> isActive) {
            return base.Channel.GetChiefComplain(chiefComplainID, isActive);
        }
        
        public System.Threading.Tasks.Task<SmileClaimV1.ClaimSeviceDataCenter.usp_ChiefComplain_Select_Result[]> GetChiefComplainAsync(System.Nullable<int> chiefComplainID, System.Nullable<bool> isActive) {
            return base.Channel.GetChiefComplainAsync(chiefComplainID, isActive);
        }
    }
}
