//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmileSUnderwriteAudit.UnderwriteBranchService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="usp_PHQueueByAppCode_Select_Result", Namespace="http://schemas.datacontract.org/2004/07/SmileSUnderwriteRESTfulService.Models")]
    [System.SerializableAttribute()]
    public partial class usp_PHQueueByAppCode_Select_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AssignDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssignToEmployeeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssignToEmployeeFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AssignToUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CMIsApproveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CMIsApprovePassConditionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CallStatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CallToCustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CallToPayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ClosedByUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ClosedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CreatedByUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CustomerBirthDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerMobileNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ImportQueueDetailIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsFoundCustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OccupationDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OccupationLevelDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PHQueueIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PHQueueStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PHQueueStatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PayMethodTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayMethodTypeDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayerBankAccountNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PayerBankIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PayerBirthDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PayerDistrictIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayerFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PayerOccupationLevelIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayerOfficeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayerOfficeTelephoneNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayerRelateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayerTelephoneNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PeriodTypeDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PeriodTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> PremiumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QueueCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> QueueExpireDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> QueueTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartCoverDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StudyAreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StudyAreaIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> UnderwriteBranchResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UnderwriteDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnderwriteEmployeeFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnderwriteRemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> UnderwriteResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UnderwriteUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UpdatedByUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdatedDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationCode {
            get {
                return this.ApplicationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationCodeField, value) != true)) {
                    this.ApplicationCodeField = value;
                    this.RaisePropertyChanged("ApplicationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationStatus {
            get {
                return this.ApplicationStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationStatusField, value) != true)) {
                    this.ApplicationStatusField = value;
                    this.RaisePropertyChanged("ApplicationStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AssignDate {
            get {
                return this.AssignDateField;
            }
            set {
                if ((this.AssignDateField.Equals(value) != true)) {
                    this.AssignDateField = value;
                    this.RaisePropertyChanged("AssignDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssignToEmployeeCode {
            get {
                return this.AssignToEmployeeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignToEmployeeCodeField, value) != true)) {
                    this.AssignToEmployeeCodeField = value;
                    this.RaisePropertyChanged("AssignToEmployeeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssignToEmployeeFullName {
            get {
                return this.AssignToEmployeeFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignToEmployeeFullNameField, value) != true)) {
                    this.AssignToEmployeeFullNameField = value;
                    this.RaisePropertyChanged("AssignToEmployeeFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AssignToUserId {
            get {
                return this.AssignToUserIdField;
            }
            set {
                if ((this.AssignToUserIdField.Equals(value) != true)) {
                    this.AssignToUserIdField = value;
                    this.RaisePropertyChanged("AssignToUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankDetail {
            get {
                return this.BankDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.BankDetailField, value) != true)) {
                    this.BankDetailField = value;
                    this.RaisePropertyChanged("BankDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CMIsApprove {
            get {
                return this.CMIsApproveField;
            }
            set {
                if ((this.CMIsApproveField.Equals(value) != true)) {
                    this.CMIsApproveField = value;
                    this.RaisePropertyChanged("CMIsApprove");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CMIsApprovePassCondition {
            get {
                return this.CMIsApprovePassConditionField;
            }
            set {
                if ((this.CMIsApprovePassConditionField.Equals(value) != true)) {
                    this.CMIsApprovePassConditionField = value;
                    this.RaisePropertyChanged("CMIsApprovePassCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CallStatusId {
            get {
                return this.CallStatusIdField;
            }
            set {
                if ((this.CallStatusIdField.Equals(value) != true)) {
                    this.CallStatusIdField = value;
                    this.RaisePropertyChanged("CallStatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CallToCustomer {
            get {
                return this.CallToCustomerField;
            }
            set {
                if ((this.CallToCustomerField.Equals(value) != true)) {
                    this.CallToCustomerField = value;
                    this.RaisePropertyChanged("CallToCustomer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CallToPayer {
            get {
                return this.CallToPayerField;
            }
            set {
                if ((this.CallToPayerField.Equals(value) != true)) {
                    this.CallToPayerField = value;
                    this.RaisePropertyChanged("CallToPayer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ClosedByUserId {
            get {
                return this.ClosedByUserIdField;
            }
            set {
                if ((this.ClosedByUserIdField.Equals(value) != true)) {
                    this.ClosedByUserIdField = value;
                    this.RaisePropertyChanged("ClosedByUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClosedDate {
            get {
                return this.ClosedDateField;
            }
            set {
                if ((this.ClosedDateField.Equals(value) != true)) {
                    this.ClosedDateField = value;
                    this.RaisePropertyChanged("ClosedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CreatedByUserId {
            get {
                return this.CreatedByUserIdField;
            }
            set {
                if ((this.CreatedByUserIdField.Equals(value) != true)) {
                    this.CreatedByUserIdField = value;
                    this.RaisePropertyChanged("CreatedByUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CustomerBirthDate {
            get {
                return this.CustomerBirthDateField;
            }
            set {
                if ((this.CustomerBirthDateField.Equals(value) != true)) {
                    this.CustomerBirthDateField = value;
                    this.RaisePropertyChanged("CustomerBirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerFullName {
            get {
                return this.CustomerFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerFullNameField, value) != true)) {
                    this.CustomerFullNameField = value;
                    this.RaisePropertyChanged("CustomerFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerMobileNo {
            get {
                return this.CustomerMobileNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerMobileNoField, value) != true)) {
                    this.CustomerMobileNoField = value;
                    this.RaisePropertyChanged("CustomerMobileNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ImportQueueDetailId {
            get {
                return this.ImportQueueDetailIdField;
            }
            set {
                if ((this.ImportQueueDetailIdField.Equals(value) != true)) {
                    this.ImportQueueDetailIdField = value;
                    this.RaisePropertyChanged("ImportQueueDetailId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsFoundCustomer {
            get {
                return this.IsFoundCustomerField;
            }
            set {
                if ((this.IsFoundCustomerField.Equals(value) != true)) {
                    this.IsFoundCustomerField = value;
                    this.RaisePropertyChanged("IsFoundCustomer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OccupationDetail {
            get {
                return this.OccupationDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.OccupationDetailField, value) != true)) {
                    this.OccupationDetailField = value;
                    this.RaisePropertyChanged("OccupationDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OccupationLevelDetail {
            get {
                return this.OccupationLevelDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.OccupationLevelDetailField, value) != true)) {
                    this.OccupationLevelDetailField = value;
                    this.RaisePropertyChanged("OccupationLevelDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PHQueueId {
            get {
                return this.PHQueueIdField;
            }
            set {
                if ((this.PHQueueIdField.Equals(value) != true)) {
                    this.PHQueueIdField = value;
                    this.RaisePropertyChanged("PHQueueId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PHQueueStatus {
            get {
                return this.PHQueueStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.PHQueueStatusField, value) != true)) {
                    this.PHQueueStatusField = value;
                    this.RaisePropertyChanged("PHQueueStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PHQueueStatusId {
            get {
                return this.PHQueueStatusIdField;
            }
            set {
                if ((this.PHQueueStatusIdField.Equals(value) != true)) {
                    this.PHQueueStatusIdField = value;
                    this.RaisePropertyChanged("PHQueueStatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PayMethodType {
            get {
                return this.PayMethodTypeField;
            }
            set {
                if ((this.PayMethodTypeField.Equals(value) != true)) {
                    this.PayMethodTypeField = value;
                    this.RaisePropertyChanged("PayMethodType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayMethodTypeDetail {
            get {
                return this.PayMethodTypeDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.PayMethodTypeDetailField, value) != true)) {
                    this.PayMethodTypeDetailField = value;
                    this.RaisePropertyChanged("PayMethodTypeDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayerBankAccountNo {
            get {
                return this.PayerBankAccountNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PayerBankAccountNoField, value) != true)) {
                    this.PayerBankAccountNoField = value;
                    this.RaisePropertyChanged("PayerBankAccountNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PayerBankId {
            get {
                return this.PayerBankIdField;
            }
            set {
                if ((this.PayerBankIdField.Equals(value) != true)) {
                    this.PayerBankIdField = value;
                    this.RaisePropertyChanged("PayerBankId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PayerBirthDate {
            get {
                return this.PayerBirthDateField;
            }
            set {
                if ((this.PayerBirthDateField.Equals(value) != true)) {
                    this.PayerBirthDateField = value;
                    this.RaisePropertyChanged("PayerBirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PayerDistrictId {
            get {
                return this.PayerDistrictIdField;
            }
            set {
                if ((this.PayerDistrictIdField.Equals(value) != true)) {
                    this.PayerDistrictIdField = value;
                    this.RaisePropertyChanged("PayerDistrictId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayerFullName {
            get {
                return this.PayerFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PayerFullNameField, value) != true)) {
                    this.PayerFullNameField = value;
                    this.RaisePropertyChanged("PayerFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PayerOccupationLevelId {
            get {
                return this.PayerOccupationLevelIdField;
            }
            set {
                if ((this.PayerOccupationLevelIdField.Equals(value) != true)) {
                    this.PayerOccupationLevelIdField = value;
                    this.RaisePropertyChanged("PayerOccupationLevelId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayerOfficeName {
            get {
                return this.PayerOfficeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PayerOfficeNameField, value) != true)) {
                    this.PayerOfficeNameField = value;
                    this.RaisePropertyChanged("PayerOfficeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayerOfficeTelephoneNo {
            get {
                return this.PayerOfficeTelephoneNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PayerOfficeTelephoneNoField, value) != true)) {
                    this.PayerOfficeTelephoneNoField = value;
                    this.RaisePropertyChanged("PayerOfficeTelephoneNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayerRelate {
            get {
                return this.PayerRelateField;
            }
            set {
                if ((object.ReferenceEquals(this.PayerRelateField, value) != true)) {
                    this.PayerRelateField = value;
                    this.RaisePropertyChanged("PayerRelate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayerTelephoneNo {
            get {
                return this.PayerTelephoneNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PayerTelephoneNoField, value) != true)) {
                    this.PayerTelephoneNoField = value;
                    this.RaisePropertyChanged("PayerTelephoneNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Period {
            get {
                return this.PeriodField;
            }
            set {
                if ((this.PeriodField.Equals(value) != true)) {
                    this.PeriodField = value;
                    this.RaisePropertyChanged("Period");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PeriodTypeDetail {
            get {
                return this.PeriodTypeDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.PeriodTypeDetailField, value) != true)) {
                    this.PeriodTypeDetailField = value;
                    this.RaisePropertyChanged("PeriodTypeDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PeriodTypeId {
            get {
                return this.PeriodTypeIdField;
            }
            set {
                if ((this.PeriodTypeIdField.Equals(value) != true)) {
                    this.PeriodTypeIdField = value;
                    this.RaisePropertyChanged("PeriodTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Premium {
            get {
                return this.PremiumField;
            }
            set {
                if ((this.PremiumField.Equals(value) != true)) {
                    this.PremiumField = value;
                    this.RaisePropertyChanged("Premium");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductDetail {
            get {
                return this.ProductDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductDetailField, value) != true)) {
                    this.ProductDetailField = value;
                    this.RaisePropertyChanged("ProductDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QueueCode {
            get {
                return this.QueueCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.QueueCodeField, value) != true)) {
                    this.QueueCodeField = value;
                    this.RaisePropertyChanged("QueueCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> QueueExpireDate {
            get {
                return this.QueueExpireDateField;
            }
            set {
                if ((this.QueueExpireDateField.Equals(value) != true)) {
                    this.QueueExpireDateField = value;
                    this.RaisePropertyChanged("QueueExpireDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> QueueTypeId {
            get {
                return this.QueueTypeIdField;
            }
            set {
                if ((this.QueueTypeIdField.Equals(value) != true)) {
                    this.QueueTypeIdField = value;
                    this.RaisePropertyChanged("QueueTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferenceCode {
            get {
                return this.ReferenceCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceCodeField, value) != true)) {
                    this.ReferenceCodeField = value;
                    this.RaisePropertyChanged("ReferenceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartCoverDate {
            get {
                return this.StartCoverDateField;
            }
            set {
                if ((this.StartCoverDateField.Equals(value) != true)) {
                    this.StartCoverDateField = value;
                    this.RaisePropertyChanged("StartCoverDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StudyArea {
            get {
                return this.StudyAreaField;
            }
            set {
                if ((object.ReferenceEquals(this.StudyAreaField, value) != true)) {
                    this.StudyAreaField = value;
                    this.RaisePropertyChanged("StudyArea");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StudyAreaId {
            get {
                return this.StudyAreaIdField;
            }
            set {
                if ((this.StudyAreaIdField.Equals(value) != true)) {
                    this.StudyAreaIdField = value;
                    this.RaisePropertyChanged("StudyAreaId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> UnderwriteBranchResult {
            get {
                return this.UnderwriteBranchResultField;
            }
            set {
                if ((this.UnderwriteBranchResultField.Equals(value) != true)) {
                    this.UnderwriteBranchResultField = value;
                    this.RaisePropertyChanged("UnderwriteBranchResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UnderwriteDate {
            get {
                return this.UnderwriteDateField;
            }
            set {
                if ((this.UnderwriteDateField.Equals(value) != true)) {
                    this.UnderwriteDateField = value;
                    this.RaisePropertyChanged("UnderwriteDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnderwriteEmployeeFullName {
            get {
                return this.UnderwriteEmployeeFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UnderwriteEmployeeFullNameField, value) != true)) {
                    this.UnderwriteEmployeeFullNameField = value;
                    this.RaisePropertyChanged("UnderwriteEmployeeFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnderwriteRemark {
            get {
                return this.UnderwriteRemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.UnderwriteRemarkField, value) != true)) {
                    this.UnderwriteRemarkField = value;
                    this.RaisePropertyChanged("UnderwriteRemark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> UnderwriteResult {
            get {
                return this.UnderwriteResultField;
            }
            set {
                if ((this.UnderwriteResultField.Equals(value) != true)) {
                    this.UnderwriteResultField = value;
                    this.RaisePropertyChanged("UnderwriteResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UnderwriteUserID {
            get {
                return this.UnderwriteUserIDField;
            }
            set {
                if ((this.UnderwriteUserIDField.Equals(value) != true)) {
                    this.UnderwriteUserIDField = value;
                    this.RaisePropertyChanged("UnderwriteUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UpdatedByUserId {
            get {
                return this.UpdatedByUserIdField;
            }
            set {
                if ((this.UpdatedByUserIdField.Equals(value) != true)) {
                    this.UpdatedByUserIdField = value;
                    this.RaisePropertyChanged("UpdatedByUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdatedDate {
            get {
                return this.UpdatedDateField;
            }
            set {
                if ((this.UpdatedDateField.Equals(value) != true)) {
                    this.UpdatedDateField = value;
                    this.RaisePropertyChanged("UpdatedDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="usp_UnderwriteBranch_PayerOtherAppByAppCode_Select_Result", Namespace="http://schemas.datacontract.org/2004/07/SmileSUnderwriteRESTfulService.Models")]
    [System.SerializableAttribute()]
    public partial class usp_UnderwriteBranch_PayerOtherAppByAppCode_Select_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string app_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string customerFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string customerLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string payerFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string payerLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> startCoverDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string statusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string app_Id {
            get {
                return this.app_IdField;
            }
            set {
                if ((object.ReferenceEquals(this.app_IdField, value) != true)) {
                    this.app_IdField = value;
                    this.RaisePropertyChanged("app_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string customerFirstName {
            get {
                return this.customerFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.customerFirstNameField, value) != true)) {
                    this.customerFirstNameField = value;
                    this.RaisePropertyChanged("customerFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string customerLastName {
            get {
                return this.customerLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.customerLastNameField, value) != true)) {
                    this.customerLastNameField = value;
                    this.RaisePropertyChanged("customerLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string payerFirstName {
            get {
                return this.payerFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.payerFirstNameField, value) != true)) {
                    this.payerFirstNameField = value;
                    this.RaisePropertyChanged("payerFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string payerLastName {
            get {
                return this.payerLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.payerLastNameField, value) != true)) {
                    this.payerLastNameField = value;
                    this.RaisePropertyChanged("payerLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> startCoverDate {
            get {
                return this.startCoverDateField;
            }
            set {
                if ((this.startCoverDateField.Equals(value) != true)) {
                    this.startCoverDateField = value;
                    this.RaisePropertyChanged("startCoverDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string status {
            get {
                return this.statusField;
            }
            set {
                if ((object.ReferenceEquals(this.statusField, value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UnderwriteBranchService.IUnderwriteBranchService")]
    public interface IUnderwriteBranchService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnderwriteBranchService/Set_PHQueue", ReplyAction="http://tempuri.org/IUnderwriteBranchService/Set_PHQueueResponse")]
        int Set_PHQueue(string applicationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnderwriteBranchService/Set_PHQueue", ReplyAction="http://tempuri.org/IUnderwriteBranchService/Set_PHQueueResponse")]
        System.Threading.Tasks.Task<int> Set_PHQueueAsync(string applicationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnderwriteBranchService/Set_PHQueueIsActive", ReplyAction="http://tempuri.org/IUnderwriteBranchService/Set_PHQueueIsActiveResponse")]
        string Set_PHQueueIsActive(string applicationCode, bool isActive, string employeeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnderwriteBranchService/Set_PHQueueIsActive", ReplyAction="http://tempuri.org/IUnderwriteBranchService/Set_PHQueueIsActiveResponse")]
        System.Threading.Tasks.Task<string> Set_PHQueueIsActiveAsync(string applicationCode, bool isActive, string employeeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnderwriteBranchService/Set_PHQueueAppCode", ReplyAction="http://tempuri.org/IUnderwriteBranchService/Set_PHQueueAppCodeResponse")]
        string Set_PHQueueAppCode(string applicationCodeRef, string applicationCodeSet, string employeeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnderwriteBranchService/Set_PHQueueAppCode", ReplyAction="http://tempuri.org/IUnderwriteBranchService/Set_PHQueueAppCodeResponse")]
        System.Threading.Tasks.Task<string> Set_PHQueueAppCodeAsync(string applicationCodeRef, string applicationCodeSet, string employeeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnderwriteBranchService/Set_PHQueueDCRCancel", ReplyAction="http://tempuri.org/IUnderwriteBranchService/Set_PHQueueDCRCancelResponse")]
        string Set_PHQueueDCRCancel(string applicationCode, string employeeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnderwriteBranchService/Set_PHQueueDCRCancel", ReplyAction="http://tempuri.org/IUnderwriteBranchService/Set_PHQueueDCRCancelResponse")]
        System.Threading.Tasks.Task<string> Set_PHQueueDCRCancelAsync(string applicationCode, string employeeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnderwriteBranchService/Set_PHQueueDetail", ReplyAction="http://tempuri.org/IUnderwriteBranchService/Set_PHQueueDetailResponse")]
        string Set_PHQueueDetail(string applicationCode, string customerFullName, string payerFullName, string employeeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnderwriteBranchService/Set_PHQueueDetail", ReplyAction="http://tempuri.org/IUnderwriteBranchService/Set_PHQueueDetailResponse")]
        System.Threading.Tasks.Task<string> Set_PHQueueDetailAsync(string applicationCode, string customerFullName, string payerFullName, string employeeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnderwriteBranchService/Set_PHQueuePayerAddress", ReplyAction="http://tempuri.org/IUnderwriteBranchService/Set_PHQueuePayerAddressResponse")]
        string Set_PHQueuePayerAddress(string applicationCode, string payerOfficeName, string payerOfficeTelephoneNo, System.Nullable<int> payerDistrictCode, string employeeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnderwriteBranchService/Set_PHQueuePayerAddress", ReplyAction="http://tempuri.org/IUnderwriteBranchService/Set_PHQueuePayerAddressResponse")]
        System.Threading.Tasks.Task<string> Set_PHQueuePayerAddressAsync(string applicationCode, string payerOfficeName, string payerOfficeTelephoneNo, System.Nullable<int> payerDistrictCode, string employeeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnderwriteBranchService/Get_PHQueueDetailByAppCode", ReplyAction="http://tempuri.org/IUnderwriteBranchService/Get_PHQueueDetailByAppCodeResponse")]
        SmileSUnderwriteAudit.UnderwriteBranchService.usp_PHQueueByAppCode_Select_Result Get_PHQueueDetailByAppCode(string applicationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnderwriteBranchService/Get_PHQueueDetailByAppCode", ReplyAction="http://tempuri.org/IUnderwriteBranchService/Get_PHQueueDetailByAppCodeResponse")]
        System.Threading.Tasks.Task<SmileSUnderwriteAudit.UnderwriteBranchService.usp_PHQueueByAppCode_Select_Result> Get_PHQueueDetailByAppCodeAsync(string applicationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnderwriteBranchService/Get_PayerOtherAppByAppCode", ReplyAction="http://tempuri.org/IUnderwriteBranchService/Get_PayerOtherAppByAppCodeResponse")]
        SmileSUnderwriteAudit.UnderwriteBranchService.usp_UnderwriteBranch_PayerOtherAppByAppCode_Select_Result[] Get_PayerOtherAppByAppCode(string applicationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnderwriteBranchService/Get_PayerOtherAppByAppCode", ReplyAction="http://tempuri.org/IUnderwriteBranchService/Get_PayerOtherAppByAppCodeResponse")]
        System.Threading.Tasks.Task<SmileSUnderwriteAudit.UnderwriteBranchService.usp_UnderwriteBranch_PayerOtherAppByAppCode_Select_Result[]> Get_PayerOtherAppByAppCodeAsync(string applicationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnderwriteBranchService/Get_PHQueueExpireDaysConfig", ReplyAction="http://tempuri.org/IUnderwriteBranchService/Get_PHQueueExpireDaysConfigResponse")]
        int Get_PHQueueExpireDaysConfig();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnderwriteBranchService/Get_PHQueueExpireDaysConfig", ReplyAction="http://tempuri.org/IUnderwriteBranchService/Get_PHQueueExpireDaysConfigResponse")]
        System.Threading.Tasks.Task<int> Get_PHQueueExpireDaysConfigAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnderwriteBranchService/Set_PHQueueUnderwrite", ReplyAction="http://tempuri.org/IUnderwriteBranchService/Set_PHQueueUnderwriteResponse")]
        string Set_PHQueueUnderwrite(string applicationCode, bool underwriteResult, string underwriteRemark, string employeeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnderwriteBranchService/Set_PHQueueUnderwrite", ReplyAction="http://tempuri.org/IUnderwriteBranchService/Set_PHQueueUnderwriteResponse")]
        System.Threading.Tasks.Task<string> Set_PHQueueUnderwriteAsync(string applicationCode, bool underwriteResult, string underwriteRemark, string employeeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnderwriteBranchService/Set_PHQueueChangePeriod", ReplyAction="http://tempuri.org/IUnderwriteBranchService/Set_PHQueueChangePeriodResponse")]
        string Set_PHQueueChangePeriod(string applicationCode, System.DateTime periodOld, System.DateTime periodNew, string employeeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnderwriteBranchService/Set_PHQueueChangePeriod", ReplyAction="http://tempuri.org/IUnderwriteBranchService/Set_PHQueueChangePeriodResponse")]
        System.Threading.Tasks.Task<string> Set_PHQueueChangePeriodAsync(string applicationCode, System.DateTime periodOld, System.DateTime periodNew, string employeeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnderwriteBranchService/Test", ReplyAction="http://tempuri.org/IUnderwriteBranchService/TestResponse")]
        string Test();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnderwriteBranchService/Test", ReplyAction="http://tempuri.org/IUnderwriteBranchService/TestResponse")]
        System.Threading.Tasks.Task<string> TestAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUnderwriteBranchServiceChannel : SmileSUnderwriteAudit.UnderwriteBranchService.IUnderwriteBranchService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UnderwriteBranchServiceClient : System.ServiceModel.ClientBase<SmileSUnderwriteAudit.UnderwriteBranchService.IUnderwriteBranchService>, SmileSUnderwriteAudit.UnderwriteBranchService.IUnderwriteBranchService {
        
        public UnderwriteBranchServiceClient() {
        }
        
        public UnderwriteBranchServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UnderwriteBranchServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UnderwriteBranchServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UnderwriteBranchServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Set_PHQueue(string applicationCode) {
            return base.Channel.Set_PHQueue(applicationCode);
        }
        
        public System.Threading.Tasks.Task<int> Set_PHQueueAsync(string applicationCode) {
            return base.Channel.Set_PHQueueAsync(applicationCode);
        }
        
        public string Set_PHQueueIsActive(string applicationCode, bool isActive, string employeeCode) {
            return base.Channel.Set_PHQueueIsActive(applicationCode, isActive, employeeCode);
        }
        
        public System.Threading.Tasks.Task<string> Set_PHQueueIsActiveAsync(string applicationCode, bool isActive, string employeeCode) {
            return base.Channel.Set_PHQueueIsActiveAsync(applicationCode, isActive, employeeCode);
        }
        
        public string Set_PHQueueAppCode(string applicationCodeRef, string applicationCodeSet, string employeeCode) {
            return base.Channel.Set_PHQueueAppCode(applicationCodeRef, applicationCodeSet, employeeCode);
        }
        
        public System.Threading.Tasks.Task<string> Set_PHQueueAppCodeAsync(string applicationCodeRef, string applicationCodeSet, string employeeCode) {
            return base.Channel.Set_PHQueueAppCodeAsync(applicationCodeRef, applicationCodeSet, employeeCode);
        }
        
        public string Set_PHQueueDCRCancel(string applicationCode, string employeeCode) {
            return base.Channel.Set_PHQueueDCRCancel(applicationCode, employeeCode);
        }
        
        public System.Threading.Tasks.Task<string> Set_PHQueueDCRCancelAsync(string applicationCode, string employeeCode) {
            return base.Channel.Set_PHQueueDCRCancelAsync(applicationCode, employeeCode);
        }
        
        public string Set_PHQueueDetail(string applicationCode, string customerFullName, string payerFullName, string employeeCode) {
            return base.Channel.Set_PHQueueDetail(applicationCode, customerFullName, payerFullName, employeeCode);
        }
        
        public System.Threading.Tasks.Task<string> Set_PHQueueDetailAsync(string applicationCode, string customerFullName, string payerFullName, string employeeCode) {
            return base.Channel.Set_PHQueueDetailAsync(applicationCode, customerFullName, payerFullName, employeeCode);
        }
        
        public string Set_PHQueuePayerAddress(string applicationCode, string payerOfficeName, string payerOfficeTelephoneNo, System.Nullable<int> payerDistrictCode, string employeeCode) {
            return base.Channel.Set_PHQueuePayerAddress(applicationCode, payerOfficeName, payerOfficeTelephoneNo, payerDistrictCode, employeeCode);
        }
        
        public System.Threading.Tasks.Task<string> Set_PHQueuePayerAddressAsync(string applicationCode, string payerOfficeName, string payerOfficeTelephoneNo, System.Nullable<int> payerDistrictCode, string employeeCode) {
            return base.Channel.Set_PHQueuePayerAddressAsync(applicationCode, payerOfficeName, payerOfficeTelephoneNo, payerDistrictCode, employeeCode);
        }
        
        public SmileSUnderwriteAudit.UnderwriteBranchService.usp_PHQueueByAppCode_Select_Result Get_PHQueueDetailByAppCode(string applicationCode) {
            return base.Channel.Get_PHQueueDetailByAppCode(applicationCode);
        }
        
        public System.Threading.Tasks.Task<SmileSUnderwriteAudit.UnderwriteBranchService.usp_PHQueueByAppCode_Select_Result> Get_PHQueueDetailByAppCodeAsync(string applicationCode) {
            return base.Channel.Get_PHQueueDetailByAppCodeAsync(applicationCode);
        }
        
        public SmileSUnderwriteAudit.UnderwriteBranchService.usp_UnderwriteBranch_PayerOtherAppByAppCode_Select_Result[] Get_PayerOtherAppByAppCode(string applicationCode) {
            return base.Channel.Get_PayerOtherAppByAppCode(applicationCode);
        }
        
        public System.Threading.Tasks.Task<SmileSUnderwriteAudit.UnderwriteBranchService.usp_UnderwriteBranch_PayerOtherAppByAppCode_Select_Result[]> Get_PayerOtherAppByAppCodeAsync(string applicationCode) {
            return base.Channel.Get_PayerOtherAppByAppCodeAsync(applicationCode);
        }
        
        public int Get_PHQueueExpireDaysConfig() {
            return base.Channel.Get_PHQueueExpireDaysConfig();
        }
        
        public System.Threading.Tasks.Task<int> Get_PHQueueExpireDaysConfigAsync() {
            return base.Channel.Get_PHQueueExpireDaysConfigAsync();
        }
        
        public string Set_PHQueueUnderwrite(string applicationCode, bool underwriteResult, string underwriteRemark, string employeeCode) {
            return base.Channel.Set_PHQueueUnderwrite(applicationCode, underwriteResult, underwriteRemark, employeeCode);
        }
        
        public System.Threading.Tasks.Task<string> Set_PHQueueUnderwriteAsync(string applicationCode, bool underwriteResult, string underwriteRemark, string employeeCode) {
            return base.Channel.Set_PHQueueUnderwriteAsync(applicationCode, underwriteResult, underwriteRemark, employeeCode);
        }
        
        public string Set_PHQueueChangePeriod(string applicationCode, System.DateTime periodOld, System.DateTime periodNew, string employeeCode) {
            return base.Channel.Set_PHQueueChangePeriod(applicationCode, periodOld, periodNew, employeeCode);
        }
        
        public System.Threading.Tasks.Task<string> Set_PHQueueChangePeriodAsync(string applicationCode, System.DateTime periodOld, System.DateTime periodNew, string employeeCode) {
            return base.Channel.Set_PHQueueChangePeriodAsync(applicationCode, periodOld, periodNew, employeeCode);
        }
        
        public string Test() {
            return base.Channel.Test();
        }
        
        public System.Threading.Tasks.Task<string> TestAsync() {
            return base.Channel.TestAsync();
        }
    }
}
