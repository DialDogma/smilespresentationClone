//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmileSUnderwriteAudit.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class UnderwriteCancerBranchV2Entities : DbContext
    {
        public UnderwriteCancerBranchV2Entities()
            : base("name=UnderwriteCancerBranchV2Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<usp_UnderwriteTypeCI_Select_Result> usp_UnderwriteTypeCI_Select(Nullable<int> underwriteTypeId)
        {
            var underwriteTypeIdParameter = underwriteTypeId.HasValue ?
                new ObjectParameter("UnderwriteTypeId", underwriteTypeId) :
                new ObjectParameter("UnderwriteTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UnderwriteTypeCI_Select_Result>("usp_UnderwriteTypeCI_Select", underwriteTypeIdParameter);
        }
    
        public virtual ObjectResult<usp_CallStatusCI_Select_Result> usp_CallStatusCI_Select(Nullable<int> callStatusId)
        {
            var callStatusIdParameter = callStatusId.HasValue ?
                new ObjectParameter("CallStatusId", callStatusId) :
                new ObjectParameter("CallStatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CallStatusCI_Select_Result>("usp_CallStatusCI_Select", callStatusIdParameter);
        }
    
        public virtual ObjectResult<usp_GiveTypeCI_Select_Result> usp_GiveTypeCI_Select(Nullable<int> giveTypeId)
        {
            var giveTypeIdParameter = giveTypeId.HasValue ?
                new ObjectParameter("GiveTypeId", giveTypeId) :
                new ObjectParameter("GiveTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GiveTypeCI_Select_Result>("usp_GiveTypeCI_Select", giveTypeIdParameter);
        }
    
        public virtual ObjectResult<usp_QueueStatusCI_Select_Result> usp_QueueStatusCI_Select(Nullable<int> queueStatusId)
        {
            var queueStatusIdParameter = queueStatusId.HasValue ?
                new ObjectParameter("QueueStatusId", queueStatusId) :
                new ObjectParameter("QueueStatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_QueueStatusCI_Select_Result>("usp_QueueStatusCI_Select", queueStatusIdParameter);
        }
    
        public virtual ObjectResult<usp_UnderwritePaymentTypeCI_Select_Result> usp_UnderwritePaymentTypeCI_Select(Nullable<int> underwritePaymentTypeId)
        {
            var underwritePaymentTypeIdParameter = underwritePaymentTypeId.HasValue ?
                new ObjectParameter("UnderwritePaymentTypeId", underwritePaymentTypeId) :
                new ObjectParameter("UnderwritePaymentTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UnderwritePaymentTypeCI_Select_Result>("usp_UnderwritePaymentTypeCI_Select", underwritePaymentTypeIdParameter);
        }
    
        public virtual ObjectResult<usp_QueueCIPaymentHistory_Select_Result> usp_QueueCIPaymentHistory_Select(Nullable<int> queueId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType)
        {
            var queueIdParameter = queueId.HasValue ?
                new ObjectParameter("QueueId", queueId) :
                new ObjectParameter("QueueId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_QueueCIPaymentHistory_Select_Result>("usp_QueueCIPaymentHistory_Select", queueIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter);
        }
    }
}
