//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmileSUnderwriteAudit.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class UnderwriteBranchV2Entities : DbContext
    {
        public UnderwriteBranchV2Entities()
            : base("name=UnderwriteBranchV2Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<usp_CallStatus_Select_Result1> usp_CallStatus_Select(Nullable<int> callStatusId)
        {
            var callStatusIdParameter = callStatusId.HasValue ?
                new ObjectParameter("CallStatusId", callStatusId) :
                new ObjectParameter("CallStatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CallStatus_Select_Result1>("usp_CallStatus_Select", callStatusIdParameter);
        }
    
        public virtual ObjectResult<usp_UnderwritePaymentType_Select_Result> usp_UnderwritePaymentType_Select(Nullable<int> underwritePaymentTypeId)
        {
            var underwritePaymentTypeIdParameter = underwritePaymentTypeId.HasValue ?
                new ObjectParameter("UnderwritePaymentTypeId", underwritePaymentTypeId) :
                new ObjectParameter("UnderwritePaymentTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UnderwritePaymentType_Select_Result>("usp_UnderwritePaymentType_Select", underwritePaymentTypeIdParameter);
        }
    
        public virtual ObjectResult<usp_UnderwriteType_Select_Result> usp_UnderwriteType_Select(Nullable<int> underwriteTypeId)
        {
            var underwriteTypeIdParameter = underwriteTypeId.HasValue ?
                new ObjectParameter("UnderwriteTypeId", underwriteTypeId) :
                new ObjectParameter("UnderwriteTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UnderwriteType_Select_Result>("usp_UnderwriteType_Select", underwriteTypeIdParameter);
        }
    
        public virtual ObjectResult<usp_Branch_Select_Result> usp_Branch_Select(Nullable<int> branchId)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Branch_Select_Result>("usp_Branch_Select", branchIdParameter);
        }
    
        public virtual ObjectResult<usp_BranchByAreaId_Select_Result> usp_BranchByAreaId_Select(Nullable<int> areaId)
        {
            var areaIdParameter = areaId.HasValue ?
                new ObjectParameter("AreaId", areaId) :
                new ObjectParameter("AreaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BranchByAreaId_Select_Result>("usp_BranchByAreaId_Select", areaIdParameter);
        }
    
        public virtual ObjectResult<usp_DocumentUnderwriteByQueueId_Select_Result1> usp_DocumentUnderwriteByQueueId_Select(Nullable<int> queueId, Nullable<int> documentUnderwriteTypeId)
        {
            var queueIdParameter = queueId.HasValue ?
                new ObjectParameter("QueueId", queueId) :
                new ObjectParameter("QueueId", typeof(int));
    
            var documentUnderwriteTypeIdParameter = documentUnderwriteTypeId.HasValue ?
                new ObjectParameter("DocumentUnderwriteTypeId", documentUnderwriteTypeId) :
                new ObjectParameter("DocumentUnderwriteTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DocumentUnderwriteByQueueId_Select_Result1>("usp_DocumentUnderwriteByQueueId_Select", queueIdParameter, documentUnderwriteTypeIdParameter);
        }
    }
}
