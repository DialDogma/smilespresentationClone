//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmileSMobileWebUI.AddressPHService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="usp_Address_Select_Result", Namespace="http://schemas.datacontract.org/2004/07/SmileSPHService.Model")]
    [System.SerializableAttribute()]
    public partial class usp_Address_Select_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressFullDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AmphoeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Amphoe_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuildingNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FloorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MooField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProvinceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Province_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SoiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TumbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Tumbol_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VillageNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressFullDetail {
            get {
                return this.AddressFullDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressFullDetailField, value) != true)) {
                    this.AddressFullDetailField = value;
                    this.RaisePropertyChanged("AddressFullDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Amphoe {
            get {
                return this.AmphoeField;
            }
            set {
                if ((object.ReferenceEquals(this.AmphoeField, value) != true)) {
                    this.AmphoeField = value;
                    this.RaisePropertyChanged("Amphoe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Amphoe_id {
            get {
                return this.Amphoe_idField;
            }
            set {
                if ((object.ReferenceEquals(this.Amphoe_idField, value) != true)) {
                    this.Amphoe_idField = value;
                    this.RaisePropertyChanged("Amphoe_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuildingName {
            get {
                return this.BuildingNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildingNameField, value) != true)) {
                    this.BuildingNameField = value;
                    this.RaisePropertyChanged("BuildingName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Floor {
            get {
                return this.FloorField;
            }
            set {
                if ((object.ReferenceEquals(this.FloorField, value) != true)) {
                    this.FloorField = value;
                    this.RaisePropertyChanged("Floor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Moo {
            get {
                return this.MooField;
            }
            set {
                if ((object.ReferenceEquals(this.MooField, value) != true)) {
                    this.MooField = value;
                    this.RaisePropertyChanged("Moo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string No {
            get {
                return this.NoField;
            }
            set {
                if ((object.ReferenceEquals(this.NoField, value) != true)) {
                    this.NoField = value;
                    this.RaisePropertyChanged("No");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Province {
            get {
                return this.ProvinceField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceField, value) != true)) {
                    this.ProvinceField = value;
                    this.RaisePropertyChanged("Province");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Province_id {
            get {
                return this.Province_idField;
            }
            set {
                if ((object.ReferenceEquals(this.Province_idField, value) != true)) {
                    this.Province_idField = value;
                    this.RaisePropertyChanged("Province_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Road {
            get {
                return this.RoadField;
            }
            set {
                if ((object.ReferenceEquals(this.RoadField, value) != true)) {
                    this.RoadField = value;
                    this.RaisePropertyChanged("Road");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Soi {
            get {
                return this.SoiField;
            }
            set {
                if ((object.ReferenceEquals(this.SoiField, value) != true)) {
                    this.SoiField = value;
                    this.RaisePropertyChanged("Soi");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tumbol {
            get {
                return this.TumbolField;
            }
            set {
                if ((object.ReferenceEquals(this.TumbolField, value) != true)) {
                    this.TumbolField = value;
                    this.RaisePropertyChanged("Tumbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tumbol_id {
            get {
                return this.Tumbol_idField;
            }
            set {
                if ((object.ReferenceEquals(this.Tumbol_idField, value) != true)) {
                    this.Tumbol_idField = value;
                    this.RaisePropertyChanged("Tumbol_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VillageName {
            get {
                return this.VillageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VillageNameField, value) != true)) {
                    this.VillageNameField = value;
                    this.RaisePropertyChanged("VillageName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCodeField, value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="usp_Address_Update_Result", Namespace="http://schemas.datacontract.org/2004/07/SmileSPHService.Model")]
    [System.SerializableAttribute()]
    public partial class usp_Address_Update_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address_IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address_ID {
            get {
                return this.Address_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.Address_IDField, value) != true)) {
                    this.Address_IDField = value;
                    this.RaisePropertyChanged("Address_ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AddressPHService.IAddressService")]
    public interface IAddressService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressService/GetAddressSelect", ReplyAction="http://tempuri.org/IAddressService/GetAddressSelectResponse")]
        SmileSMobileWebUI.AddressPHService.usp_Address_Select_Result GetAddressSelect(string addressId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressService/GetAddressSelect", ReplyAction="http://tempuri.org/IAddressService/GetAddressSelectResponse")]
        System.Threading.Tasks.Task<SmileSMobileWebUI.AddressPHService.usp_Address_Select_Result> GetAddressSelectAsync(string addressId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressService/SetAddress", ReplyAction="http://tempuri.org/IAddressService/SetAddressResponse")]
        SmileSMobileWebUI.AddressPHService.usp_Address_Update_Result SetAddress(string addressId, string buildingName, string villageName, string no, string moo, string floor, string soi, string road, string subDistrictId, string updateById);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressService/SetAddress", ReplyAction="http://tempuri.org/IAddressService/SetAddressResponse")]
        System.Threading.Tasks.Task<SmileSMobileWebUI.AddressPHService.usp_Address_Update_Result> SetAddressAsync(string addressId, string buildingName, string villageName, string no, string moo, string floor, string soi, string road, string subDistrictId, string updateById);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressService/SetCopyAddressDuplicate", ReplyAction="http://tempuri.org/IAddressService/SetCopyAddressDuplicateResponse")]
        void SetCopyAddressDuplicate(string FromAddressID, string ToAddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressService/SetCopyAddressDuplicate", ReplyAction="http://tempuri.org/IAddressService/SetCopyAddressDuplicateResponse")]
        System.Threading.Tasks.Task SetCopyAddressDuplicateAsync(string FromAddressID, string ToAddressID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAddressServiceChannel : SmileSMobileWebUI.AddressPHService.IAddressService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddressServiceClient : System.ServiceModel.ClientBase<SmileSMobileWebUI.AddressPHService.IAddressService>, SmileSMobileWebUI.AddressPHService.IAddressService {
        
        public AddressServiceClient() {
        }
        
        public AddressServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AddressServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AddressServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AddressServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SmileSMobileWebUI.AddressPHService.usp_Address_Select_Result GetAddressSelect(string addressId) {
            return base.Channel.GetAddressSelect(addressId);
        }
        
        public System.Threading.Tasks.Task<SmileSMobileWebUI.AddressPHService.usp_Address_Select_Result> GetAddressSelectAsync(string addressId) {
            return base.Channel.GetAddressSelectAsync(addressId);
        }
        
        public SmileSMobileWebUI.AddressPHService.usp_Address_Update_Result SetAddress(string addressId, string buildingName, string villageName, string no, string moo, string floor, string soi, string road, string subDistrictId, string updateById) {
            return base.Channel.SetAddress(addressId, buildingName, villageName, no, moo, floor, soi, road, subDistrictId, updateById);
        }
        
        public System.Threading.Tasks.Task<SmileSMobileWebUI.AddressPHService.usp_Address_Update_Result> SetAddressAsync(string addressId, string buildingName, string villageName, string no, string moo, string floor, string soi, string road, string subDistrictId, string updateById) {
            return base.Channel.SetAddressAsync(addressId, buildingName, villageName, no, moo, floor, soi, road, subDistrictId, updateById);
        }
        
        public void SetCopyAddressDuplicate(string FromAddressID, string ToAddressID) {
            base.Channel.SetCopyAddressDuplicate(FromAddressID, ToAddressID);
        }
        
        public System.Threading.Tasks.Task SetCopyAddressDuplicateAsync(string FromAddressID, string ToAddressID) {
            return base.Channel.SetCopyAddressDuplicateAsync(FromAddressID, ToAddressID);
        }
    }
}
