//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmileSMobileWebUI.PHClaimService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="usp_CountOPDByApp_YearFormat_select_Result", Namespace="http://schemas.datacontract.org/2004/07/SmileSPHService.Model")]
    [System.SerializableAttribute()]
    public partial class usp_CountOPDByApp_YearFormat_select_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OPD_AllField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OPD_NetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OPD_UsedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OPD_All {
            get {
                return this.OPD_AllField;
            }
            set {
                if ((this.OPD_AllField.Equals(value) != true)) {
                    this.OPD_AllField = value;
                    this.RaisePropertyChanged("OPD_All");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OPD_Net {
            get {
                return this.OPD_NetField;
            }
            set {
                if ((this.OPD_NetField.Equals(value) != true)) {
                    this.OPD_NetField = value;
                    this.RaisePropertyChanged("OPD_Net");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OPD_Used {
            get {
                return this.OPD_UsedField;
            }
            set {
                if ((this.OPD_UsedField.Equals(value) != true)) {
                    this.OPD_UsedField = value;
                    this.RaisePropertyChanged("OPD_Used");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="usp_GetClaimDetail_Select_Result", Namespace="http://schemas.datacontract.org/2004/07/SmileSPHService.Model")]
    [System.SerializableAttribute()]
    public partial class usp_GetClaimDetail_Select_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgentMobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgentScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppIDPKField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ApproveNetClaimField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BranchClaimIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClaimAdmitTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClaimCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClaimCodeContinueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> CompensateAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateAdmitINField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateAdmitOutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateHappenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DenyCauseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DenyCause_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DenyRemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FeedbackDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HospitalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HospitalProvinceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ICUDayCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IPDDayCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileCustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MoreInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayMethodTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServiceScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuggestionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string linkWebField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgentMobile {
            get {
                return this.AgentMobileField;
            }
            set {
                if ((object.ReferenceEquals(this.AgentMobileField, value) != true)) {
                    this.AgentMobileField = value;
                    this.RaisePropertyChanged("AgentMobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgentName {
            get {
                return this.AgentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AgentNameField, value) != true)) {
                    this.AgentNameField = value;
                    this.RaisePropertyChanged("AgentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AgentScore {
            get {
                return this.AgentScoreField;
            }
            set {
                if ((this.AgentScoreField.Equals(value) != true)) {
                    this.AgentScoreField = value;
                    this.RaisePropertyChanged("AgentScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppIDPK {
            get {
                return this.AppIDPKField;
            }
            set {
                if ((object.ReferenceEquals(this.AppIDPKField, value) != true)) {
                    this.AppIDPKField = value;
                    this.RaisePropertyChanged("AppIDPK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ApproveNetClaim {
            get {
                return this.ApproveNetClaimField;
            }
            set {
                if ((this.ApproveNetClaimField.Equals(value) != true)) {
                    this.ApproveNetClaimField = value;
                    this.RaisePropertyChanged("ApproveNetClaim");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BranchClaimID {
            get {
                return this.BranchClaimIDField;
            }
            set {
                if ((this.BranchClaimIDField.Equals(value) != true)) {
                    this.BranchClaimIDField = value;
                    this.RaisePropertyChanged("BranchClaimID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClaimAdmitTypeID {
            get {
                return this.ClaimAdmitTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaimAdmitTypeIDField, value) != true)) {
                    this.ClaimAdmitTypeIDField = value;
                    this.RaisePropertyChanged("ClaimAdmitTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClaimCode {
            get {
                return this.ClaimCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaimCodeField, value) != true)) {
                    this.ClaimCodeField = value;
                    this.RaisePropertyChanged("ClaimCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClaimCodeContinue {
            get {
                return this.ClaimCodeContinueField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaimCodeContinueField, value) != true)) {
                    this.ClaimCodeContinueField = value;
                    this.RaisePropertyChanged("ClaimCodeContinue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> CompensateAmount {
            get {
                return this.CompensateAmountField;
            }
            set {
                if ((this.CompensateAmountField.Equals(value) != true)) {
                    this.CompensateAmountField = value;
                    this.RaisePropertyChanged("CompensateAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateAdmitIN {
            get {
                return this.DateAdmitINField;
            }
            set {
                if ((this.DateAdmitINField.Equals(value) != true)) {
                    this.DateAdmitINField = value;
                    this.RaisePropertyChanged("DateAdmitIN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateAdmitOut {
            get {
                return this.DateAdmitOutField;
            }
            set {
                if ((this.DateAdmitOutField.Equals(value) != true)) {
                    this.DateAdmitOutField = value;
                    this.RaisePropertyChanged("DateAdmitOut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateHappen {
            get {
                return this.DateHappenField;
            }
            set {
                if ((this.DateHappenField.Equals(value) != true)) {
                    this.DateHappenField = value;
                    this.RaisePropertyChanged("DateHappen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DenyCauseName {
            get {
                return this.DenyCauseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DenyCauseNameField, value) != true)) {
                    this.DenyCauseNameField = value;
                    this.RaisePropertyChanged("DenyCauseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DenyCause_id {
            get {
                return this.DenyCause_idField;
            }
            set {
                if ((object.ReferenceEquals(this.DenyCause_idField, value) != true)) {
                    this.DenyCause_idField = value;
                    this.RaisePropertyChanged("DenyCause_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DenyRemark {
            get {
                return this.DenyRemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.DenyRemarkField, value) != true)) {
                    this.DenyRemarkField = value;
                    this.RaisePropertyChanged("DenyRemark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpCode {
            get {
                return this.EmpCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpCodeField, value) != true)) {
                    this.EmpCodeField = value;
                    this.RaisePropertyChanged("EmpCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FeedbackDate {
            get {
                return this.FeedbackDateField;
            }
            set {
                if ((this.FeedbackDateField.Equals(value) != true)) {
                    this.FeedbackDateField = value;
                    this.RaisePropertyChanged("FeedbackDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HospitalName {
            get {
                return this.HospitalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.HospitalNameField, value) != true)) {
                    this.HospitalNameField = value;
                    this.RaisePropertyChanged("HospitalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HospitalProvinceID {
            get {
                return this.HospitalProvinceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.HospitalProvinceIDField, value) != true)) {
                    this.HospitalProvinceIDField = value;
                    this.RaisePropertyChanged("HospitalProvinceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ICUDayCount {
            get {
                return this.ICUDayCountField;
            }
            set {
                if ((this.ICUDayCountField.Equals(value) != true)) {
                    this.ICUDayCountField = value;
                    this.RaisePropertyChanged("ICUDayCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IPDDayCount {
            get {
                return this.IPDDayCountField;
            }
            set {
                if ((this.IPDDayCountField.Equals(value) != true)) {
                    this.IPDDayCountField = value;
                    this.RaisePropertyChanged("IPDDayCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobileCustomer {
            get {
                return this.MobileCustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileCustomerField, value) != true)) {
                    this.MobileCustomerField = value;
                    this.RaisePropertyChanged("MobileCustomer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MoreInfo {
            get {
                return this.MoreInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.MoreInfoField, value) != true)) {
                    this.MoreInfoField = value;
                    this.RaisePropertyChanged("MoreInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayMethodType {
            get {
                return this.PayMethodTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PayMethodTypeField, value) != true)) {
                    this.PayMethodTypeField = value;
                    this.RaisePropertyChanged("PayMethodType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServiceScore {
            get {
                return this.ServiceScoreField;
            }
            set {
                if ((this.ServiceScoreField.Equals(value) != true)) {
                    this.ServiceScoreField = value;
                    this.RaisePropertyChanged("ServiceScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusName {
            get {
                return this.StatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusNameField, value) != true)) {
                    this.StatusNameField = value;
                    this.RaisePropertyChanged("StatusName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Suggestion {
            get {
                return this.SuggestionField;
            }
            set {
                if ((object.ReferenceEquals(this.SuggestionField, value) != true)) {
                    this.SuggestionField = value;
                    this.RaisePropertyChanged("Suggestion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemScore {
            get {
                return this.SystemScoreField;
            }
            set {
                if ((this.SystemScoreField.Equals(value) != true)) {
                    this.SystemScoreField = value;
                    this.RaisePropertyChanged("SystemScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeStatus {
            get {
                return this.TimeStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeStatusField, value) != true)) {
                    this.TimeStatusField = value;
                    this.RaisePropertyChanged("TimeStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalAmount {
            get {
                return this.TotalAmountField;
            }
            set {
                if ((this.TotalAmountField.Equals(value) != true)) {
                    this.TotalAmountField = value;
                    this.RaisePropertyChanged("TotalAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string linkWeb {
            get {
                return this.linkWebField;
            }
            set {
                if ((object.ReferenceEquals(this.linkWebField, value) != true)) {
                    this.linkWebField = value;
                    this.RaisePropertyChanged("linkWeb");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="usp_GetClaimHistList_Select_Result", Namespace="http://schemas.datacontract.org/2004/07/SmileSPHService.Model")]
    [System.SerializableAttribute()]
    public partial class usp_GetClaimHistList_Select_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppIDPKField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ApproveNetAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChiefComplainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClaimAdmitTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClaimCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ClaimDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> CompensateAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MoreInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextLinkWebField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string linkWebField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppIDPK {
            get {
                return this.AppIDPKField;
            }
            set {
                if ((object.ReferenceEquals(this.AppIDPKField, value) != true)) {
                    this.AppIDPKField = value;
                    this.RaisePropertyChanged("AppIDPK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ApproveNetAmount {
            get {
                return this.ApproveNetAmountField;
            }
            set {
                if ((this.ApproveNetAmountField.Equals(value) != true)) {
                    this.ApproveNetAmountField = value;
                    this.RaisePropertyChanged("ApproveNetAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChiefComplain {
            get {
                return this.ChiefComplainField;
            }
            set {
                if ((object.ReferenceEquals(this.ChiefComplainField, value) != true)) {
                    this.ChiefComplainField = value;
                    this.RaisePropertyChanged("ChiefComplain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClaimAdmitTypeName {
            get {
                return this.ClaimAdmitTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaimAdmitTypeNameField, value) != true)) {
                    this.ClaimAdmitTypeNameField = value;
                    this.RaisePropertyChanged("ClaimAdmitTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClaimCode {
            get {
                return this.ClaimCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaimCodeField, value) != true)) {
                    this.ClaimCodeField = value;
                    this.RaisePropertyChanged("ClaimCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClaimDate {
            get {
                return this.ClaimDateField;
            }
            set {
                if ((this.ClaimDateField.Equals(value) != true)) {
                    this.ClaimDateField = value;
                    this.RaisePropertyChanged("ClaimDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> CompensateAmount {
            get {
                return this.CompensateAmountField;
            }
            set {
                if ((this.CompensateAmountField.Equals(value) != true)) {
                    this.CompensateAmountField = value;
                    this.RaisePropertyChanged("CompensateAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MoreInfo {
            get {
                return this.MoreInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.MoreInfoField, value) != true)) {
                    this.MoreInfoField = value;
                    this.RaisePropertyChanged("MoreInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusName {
            get {
                return this.StatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusNameField, value) != true)) {
                    this.StatusNameField = value;
                    this.RaisePropertyChanged("StatusName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TextLinkWeb {
            get {
                return this.TextLinkWebField;
            }
            set {
                if ((object.ReferenceEquals(this.TextLinkWebField, value) != true)) {
                    this.TextLinkWebField = value;
                    this.RaisePropertyChanged("TextLinkWeb");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalAmount {
            get {
                return this.TotalAmountField;
            }
            set {
                if ((this.TotalAmountField.Equals(value) != true)) {
                    this.TotalAmountField = value;
                    this.RaisePropertyChanged("TotalAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string linkWeb {
            get {
                return this.linkWebField;
            }
            set {
                if ((object.ReferenceEquals(this.linkWebField, value) != true)) {
                    this.linkWebField = value;
                    this.RaisePropertyChanged("linkWeb");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="usp_GetClaimDetailList_Select_Result", Namespace="http://schemas.datacontract.org/2004/07/SmileSPHService.Model")]
    [System.SerializableAttribute()]
    public partial class usp_GetClaimDetailList_Select_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppIDPKField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ApproveNetAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChiefComplainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClaimAdmitTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClaimCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ClaimDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClaimNoticeColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> CompensateAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileCustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MoreInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextLinkWebField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TotalCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string linkWebField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string productNameIconField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppIDPK {
            get {
                return this.AppIDPKField;
            }
            set {
                if ((object.ReferenceEquals(this.AppIDPKField, value) != true)) {
                    this.AppIDPKField = value;
                    this.RaisePropertyChanged("AppIDPK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ApproveNetAmount {
            get {
                return this.ApproveNetAmountField;
            }
            set {
                if ((this.ApproveNetAmountField.Equals(value) != true)) {
                    this.ApproveNetAmountField = value;
                    this.RaisePropertyChanged("ApproveNetAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChiefComplain {
            get {
                return this.ChiefComplainField;
            }
            set {
                if ((object.ReferenceEquals(this.ChiefComplainField, value) != true)) {
                    this.ChiefComplainField = value;
                    this.RaisePropertyChanged("ChiefComplain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClaimAdmitTypeName {
            get {
                return this.ClaimAdmitTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaimAdmitTypeNameField, value) != true)) {
                    this.ClaimAdmitTypeNameField = value;
                    this.RaisePropertyChanged("ClaimAdmitTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClaimCode {
            get {
                return this.ClaimCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaimCodeField, value) != true)) {
                    this.ClaimCodeField = value;
                    this.RaisePropertyChanged("ClaimCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClaimDate {
            get {
                return this.ClaimDateField;
            }
            set {
                if ((this.ClaimDateField.Equals(value) != true)) {
                    this.ClaimDateField = value;
                    this.RaisePropertyChanged("ClaimDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClaimNoticeColor {
            get {
                return this.ClaimNoticeColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaimNoticeColorField, value) != true)) {
                    this.ClaimNoticeColorField = value;
                    this.RaisePropertyChanged("ClaimNoticeColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> CompensateAmount {
            get {
                return this.CompensateAmountField;
            }
            set {
                if ((this.CompensateAmountField.Equals(value) != true)) {
                    this.CompensateAmountField = value;
                    this.RaisePropertyChanged("CompensateAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobileCustomer {
            get {
                return this.MobileCustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileCustomerField, value) != true)) {
                    this.MobileCustomerField = value;
                    this.RaisePropertyChanged("MobileCustomer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MoreInfo {
            get {
                return this.MoreInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.MoreInfoField, value) != true)) {
                    this.MoreInfoField = value;
                    this.RaisePropertyChanged("MoreInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusName {
            get {
                return this.StatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusNameField, value) != true)) {
                    this.StatusNameField = value;
                    this.RaisePropertyChanged("StatusName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TextLinkWeb {
            get {
                return this.TextLinkWebField;
            }
            set {
                if ((object.ReferenceEquals(this.TextLinkWebField, value) != true)) {
                    this.TextLinkWebField = value;
                    this.RaisePropertyChanged("TextLinkWeb");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeStatus {
            get {
                return this.TimeStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeStatusField, value) != true)) {
                    this.TimeStatusField = value;
                    this.RaisePropertyChanged("TimeStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalAmount {
            get {
                return this.TotalAmountField;
            }
            set {
                if ((this.TotalAmountField.Equals(value) != true)) {
                    this.TotalAmountField = value;
                    this.RaisePropertyChanged("TotalAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string linkWeb {
            get {
                return this.linkWebField;
            }
            set {
                if ((object.ReferenceEquals(this.linkWebField, value) != true)) {
                    this.linkWebField = value;
                    this.RaisePropertyChanged("linkWeb");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string productNameIcon {
            get {
                return this.productNameIconField;
            }
            set {
                if ((object.ReferenceEquals(this.productNameIconField, value) != true)) {
                    this.productNameIconField = value;
                    this.RaisePropertyChanged("productNameIcon");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="usp_GetClaimStatus_Select_Result", Namespace="http://schemas.datacontract.org/2004/07/SmileSPHService.Model")]
    [System.SerializableAttribute()]
    public partial class usp_GetClaimStatus_Select_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StateDate {
            get {
                return this.StateDateField;
            }
            set {
                if ((this.StateDateField.Equals(value) != true)) {
                    this.StateDateField = value;
                    this.RaisePropertyChanged("StateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateValue {
            get {
                return this.StateValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StateValueField, value) != true)) {
                    this.StateValueField = value;
                    this.RaisePropertyChanged("StateValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StatusID {
            get {
                return this.StatusIDField;
            }
            set {
                if ((this.StatusIDField.Equals(value) != true)) {
                    this.StatusIDField = value;
                    this.RaisePropertyChanged("StatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusName {
            get {
                return this.StatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusNameField, value) != true)) {
                    this.StatusNameField = value;
                    this.RaisePropertyChanged("StatusName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="usp_GetClaimFeedbackTotal_Select_Result", Namespace="http://schemas.datacontract.org/2004/07/SmileSPHService.Model")]
    [System.SerializableAttribute()]
    public partial class usp_GetClaimFeedbackTotal_Select_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AVGTotalScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TotalClaimField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TotalScoreRate1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TotalScoreRate2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TotalScoreRate3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TotalScoreRate4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TotalScoreRate5Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AVGTotalScore {
            get {
                return this.AVGTotalScoreField;
            }
            set {
                if ((this.AVGTotalScoreField.Equals(value) != true)) {
                    this.AVGTotalScoreField = value;
                    this.RaisePropertyChanged("AVGTotalScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TotalClaim {
            get {
                return this.TotalClaimField;
            }
            set {
                if ((this.TotalClaimField.Equals(value) != true)) {
                    this.TotalClaimField = value;
                    this.RaisePropertyChanged("TotalClaim");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TotalScoreRate1 {
            get {
                return this.TotalScoreRate1Field;
            }
            set {
                if ((this.TotalScoreRate1Field.Equals(value) != true)) {
                    this.TotalScoreRate1Field = value;
                    this.RaisePropertyChanged("TotalScoreRate1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TotalScoreRate2 {
            get {
                return this.TotalScoreRate2Field;
            }
            set {
                if ((this.TotalScoreRate2Field.Equals(value) != true)) {
                    this.TotalScoreRate2Field = value;
                    this.RaisePropertyChanged("TotalScoreRate2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TotalScoreRate3 {
            get {
                return this.TotalScoreRate3Field;
            }
            set {
                if ((this.TotalScoreRate3Field.Equals(value) != true)) {
                    this.TotalScoreRate3Field = value;
                    this.RaisePropertyChanged("TotalScoreRate3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TotalScoreRate4 {
            get {
                return this.TotalScoreRate4Field;
            }
            set {
                if ((this.TotalScoreRate4Field.Equals(value) != true)) {
                    this.TotalScoreRate4Field = value;
                    this.RaisePropertyChanged("TotalScoreRate4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TotalScoreRate5 {
            get {
                return this.TotalScoreRate5Field;
            }
            set {
                if ((this.TotalScoreRate5Field.Equals(value) != true)) {
                    this.TotalScoreRate5Field = value;
                    this.RaisePropertyChanged("TotalScoreRate5");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="usp_GetClaimFeedbackAppDetail_Select_Result", Namespace="http://schemas.datacontract.org/2004/07/SmileSPHService.Model")]
    [System.SerializableAttribute()]
    public partial class usp_GetClaimFeedbackAppDetail_Select_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AgentScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> ApproveNetClaimField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClaimCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ClaimDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClaimRemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClaimSuggestionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> CompensateAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FeedbackDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ServiceScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SystemScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AgentScore {
            get {
                return this.AgentScoreField;
            }
            set {
                if ((this.AgentScoreField.Equals(value) != true)) {
                    this.AgentScoreField = value;
                    this.RaisePropertyChanged("AgentScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppID {
            get {
                return this.AppIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AppIDField, value) != true)) {
                    this.AppIDField = value;
                    this.RaisePropertyChanged("AppID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> ApproveNetClaim {
            get {
                return this.ApproveNetClaimField;
            }
            set {
                if ((this.ApproveNetClaimField.Equals(value) != true)) {
                    this.ApproveNetClaimField = value;
                    this.RaisePropertyChanged("ApproveNetClaim");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClaimCode {
            get {
                return this.ClaimCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaimCodeField, value) != true)) {
                    this.ClaimCodeField = value;
                    this.RaisePropertyChanged("ClaimCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClaimDate {
            get {
                return this.ClaimDateField;
            }
            set {
                if ((this.ClaimDateField.Equals(value) != true)) {
                    this.ClaimDateField = value;
                    this.RaisePropertyChanged("ClaimDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClaimRemark {
            get {
                return this.ClaimRemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaimRemarkField, value) != true)) {
                    this.ClaimRemarkField = value;
                    this.RaisePropertyChanged("ClaimRemark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClaimSuggestion {
            get {
                return this.ClaimSuggestionField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaimSuggestionField, value) != true)) {
                    this.ClaimSuggestionField = value;
                    this.RaisePropertyChanged("ClaimSuggestion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> CompensateAmount {
            get {
                return this.CompensateAmountField;
            }
            set {
                if ((this.CompensateAmountField.Equals(value) != true)) {
                    this.CompensateAmountField = value;
                    this.RaisePropertyChanged("CompensateAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FeedbackDate {
            get {
                return this.FeedbackDateField;
            }
            set {
                if ((this.FeedbackDateField.Equals(value) != true)) {
                    this.FeedbackDateField = value;
                    this.RaisePropertyChanged("FeedbackDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductGroup {
            get {
                return this.ProductGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductGroupField, value) != true)) {
                    this.ProductGroupField = value;
                    this.RaisePropertyChanged("ProductGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ServiceScore {
            get {
                return this.ServiceScoreField;
            }
            set {
                if ((this.ServiceScoreField.Equals(value) != true)) {
                    this.ServiceScoreField = value;
                    this.RaisePropertyChanged("ServiceScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SystemScore {
            get {
                return this.SystemScoreField;
            }
            set {
                if ((this.SystemScoreField.Equals(value) != true)) {
                    this.SystemScoreField = value;
                    this.RaisePropertyChanged("SystemScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="usp_SetClaimFeedback_Insert_Result", Namespace="http://schemas.datacontract.org/2004/07/SmileSPHService.Model")]
    [System.SerializableAttribute()]
    public partial class usp_SetClaimFeedback_Insert_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AgentScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClaimFeedBack_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClaimHeader_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedBy_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ServiceScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuggestionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SystemScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdateBy_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdateDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AgentScore {
            get {
                return this.AgentScoreField;
            }
            set {
                if ((this.AgentScoreField.Equals(value) != true)) {
                    this.AgentScoreField = value;
                    this.RaisePropertyChanged("AgentScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClaimFeedBack_id {
            get {
                return this.ClaimFeedBack_idField;
            }
            set {
                if ((this.ClaimFeedBack_idField.Equals(value) != true)) {
                    this.ClaimFeedBack_idField = value;
                    this.RaisePropertyChanged("ClaimFeedBack_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClaimHeader_id {
            get {
                return this.ClaimHeader_idField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaimHeader_idField, value) != true)) {
                    this.ClaimHeader_idField = value;
                    this.RaisePropertyChanged("ClaimHeader_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy_id {
            get {
                return this.CreatedBy_idField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedBy_idField, value) != true)) {
                    this.CreatedBy_idField = value;
                    this.RaisePropertyChanged("CreatedBy_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeeCode {
            get {
                return this.EmployeeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeCodeField, value) != true)) {
                    this.EmployeeCodeField = value;
                    this.RaisePropertyChanged("EmployeeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ServiceScore {
            get {
                return this.ServiceScoreField;
            }
            set {
                if ((this.ServiceScoreField.Equals(value) != true)) {
                    this.ServiceScoreField = value;
                    this.RaisePropertyChanged("ServiceScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Suggestion {
            get {
                return this.SuggestionField;
            }
            set {
                if ((object.ReferenceEquals(this.SuggestionField, value) != true)) {
                    this.SuggestionField = value;
                    this.RaisePropertyChanged("Suggestion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SystemScore {
            get {
                return this.SystemScoreField;
            }
            set {
                if ((this.SystemScoreField.Equals(value) != true)) {
                    this.SystemScoreField = value;
                    this.RaisePropertyChanged("SystemScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdateBy_id {
            get {
                return this.UpdateBy_idField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdateBy_idField, value) != true)) {
                    this.UpdateBy_idField = value;
                    this.RaisePropertyChanged("UpdateBy_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdateDate {
            get {
                return this.UpdateDateField;
            }
            set {
                if ((this.UpdateDateField.Equals(value) != true)) {
                    this.UpdateDateField = value;
                    this.RaisePropertyChanged("UpdateDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="usp_SetClaimFeedback_Update_Result", Namespace="http://schemas.datacontract.org/2004/07/SmileSPHService.Model")]
    [System.SerializableAttribute()]
    public partial class usp_SetClaimFeedback_Update_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AgentScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClaimFeedBack_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClaimHeader_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedBy_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ServiceScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuggestionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SystemScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdateBy_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdateDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AgentScore {
            get {
                return this.AgentScoreField;
            }
            set {
                if ((this.AgentScoreField.Equals(value) != true)) {
                    this.AgentScoreField = value;
                    this.RaisePropertyChanged("AgentScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClaimFeedBack_id {
            get {
                return this.ClaimFeedBack_idField;
            }
            set {
                if ((this.ClaimFeedBack_idField.Equals(value) != true)) {
                    this.ClaimFeedBack_idField = value;
                    this.RaisePropertyChanged("ClaimFeedBack_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClaimHeader_id {
            get {
                return this.ClaimHeader_idField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaimHeader_idField, value) != true)) {
                    this.ClaimHeader_idField = value;
                    this.RaisePropertyChanged("ClaimHeader_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy_id {
            get {
                return this.CreatedBy_idField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedBy_idField, value) != true)) {
                    this.CreatedBy_idField = value;
                    this.RaisePropertyChanged("CreatedBy_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeeCode {
            get {
                return this.EmployeeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeCodeField, value) != true)) {
                    this.EmployeeCodeField = value;
                    this.RaisePropertyChanged("EmployeeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ServiceScore {
            get {
                return this.ServiceScoreField;
            }
            set {
                if ((this.ServiceScoreField.Equals(value) != true)) {
                    this.ServiceScoreField = value;
                    this.RaisePropertyChanged("ServiceScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Suggestion {
            get {
                return this.SuggestionField;
            }
            set {
                if ((object.ReferenceEquals(this.SuggestionField, value) != true)) {
                    this.SuggestionField = value;
                    this.RaisePropertyChanged("Suggestion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SystemScore {
            get {
                return this.SystemScoreField;
            }
            set {
                if ((this.SystemScoreField.Equals(value) != true)) {
                    this.SystemScoreField = value;
                    this.RaisePropertyChanged("SystemScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdateBy_id {
            get {
                return this.UpdateBy_idField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdateBy_idField, value) != true)) {
                    this.UpdateBy_idField = value;
                    this.RaisePropertyChanged("UpdateBy_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdateDate {
            get {
                return this.UpdateDateField;
            }
            set {
                if ((this.UpdateDateField.Equals(value) != true)) {
                    this.UpdateDateField = value;
                    this.RaisePropertyChanged("UpdateDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="usp_GetClaimCalPaidAmount_Select_Result", Namespace="http://schemas.datacontract.org/2004/07/SmileSPHService.Model")]
    [System.SerializableAttribute()]
    public partial class usp_GetClaimCalPaidAmount_Select_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ApproveNetClaimField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> CompensateAmountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ApproveNetClaim {
            get {
                return this.ApproveNetClaimField;
            }
            set {
                if ((this.ApproveNetClaimField.Equals(value) != true)) {
                    this.ApproveNetClaimField = value;
                    this.RaisePropertyChanged("ApproveNetClaim");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> CompensateAmount {
            get {
                return this.CompensateAmountField;
            }
            set {
                if ((this.CompensateAmountField.Equals(value) != true)) {
                    this.CompensateAmountField = value;
                    this.RaisePropertyChanged("CompensateAmount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PHClaimService.IClaimService")]
    public interface IClaimService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/GetCountOPD", ReplyAction="http://tempuri.org/IClaimService/GetCountOPDResponse")]
        SmileSMobileWebUI.PHClaimService.usp_CountOPDByApp_YearFormat_select_Result GetCountOPD(string _applicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/GetCountOPD", ReplyAction="http://tempuri.org/IClaimService/GetCountOPDResponse")]
        System.Threading.Tasks.Task<SmileSMobileWebUI.PHClaimService.usp_CountOPDByApp_YearFormat_select_Result> GetCountOPDAsync(string _applicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/CreateClaimPH", ReplyAction="http://tempuri.org/IClaimService/CreateClaimPHResponse")]
        string CreateClaimPH(
                    string _applicationID, 
                    string _hospitalID, 
                    string _claimtypeID, 
                    string _claimadmittypeID, 
                    System.DateTime _datehappen, 
                    string _productID, 
                    string _insurancecompanyID, 
                    string _chiefcomplainID, 
                    string _statusID, 
                    string _createdbyID, 
                    string _continuefromclaimID, 
                    string _agentID, 
                    string _chiefcomplainanswer, 
                    string _ICD10_1, 
                    string _ICD10_2, 
                    string _ICD10_3, 
                    string _remark, 
                    string _overfromcompany, 
                    string _denycauseID, 
                    string _receiptstatusID, 
                    string _sendinsurancestatusID, 
                    string _payhospitalcashheaderID, 
                    string _claimheadergroupID, 
                    string _approvedbyID, 
                    string _claimpaybyID, 
                    string hospitalClaimInformCode, 
                    System.Nullable<bool> _iscontinue, 
                    System.Nullable<System.DateTime> _datenotice, 
                    System.Nullable<int> _ageatclaim_year, 
                    System.Nullable<int> _ageatclaim_month, 
                    System.Nullable<int> _ageatclaim_day, 
                    System.Nullable<int> _ageappatclaim_year, 
                    System.Nullable<int> _ageappatclaim_month, 
                    System.Nullable<int> _ageappatclaim_day, 
                    System.Nullable<bool> _iswalkoutclaim, 
                    System.Nullable<bool> _ischiefcomplainwarning, 
                    System.Nullable<bool> _iscontinueclaimwarning, 
                    System.Nullable<bool> _isexgratia, 
                    System.Nullable<bool> _isnoDCRwarning, 
                    System.Nullable<bool> _ispaycenter, 
                    System.Nullable<System.DateTime> _approveddate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/CreateClaimPH", ReplyAction="http://tempuri.org/IClaimService/CreateClaimPHResponse")]
        System.Threading.Tasks.Task<string> CreateClaimPHAsync(
                    string _applicationID, 
                    string _hospitalID, 
                    string _claimtypeID, 
                    string _claimadmittypeID, 
                    System.DateTime _datehappen, 
                    string _productID, 
                    string _insurancecompanyID, 
                    string _chiefcomplainID, 
                    string _statusID, 
                    string _createdbyID, 
                    string _continuefromclaimID, 
                    string _agentID, 
                    string _chiefcomplainanswer, 
                    string _ICD10_1, 
                    string _ICD10_2, 
                    string _ICD10_3, 
                    string _remark, 
                    string _overfromcompany, 
                    string _denycauseID, 
                    string _receiptstatusID, 
                    string _sendinsurancestatusID, 
                    string _payhospitalcashheaderID, 
                    string _claimheadergroupID, 
                    string _approvedbyID, 
                    string _claimpaybyID, 
                    string hospitalClaimInformCode, 
                    System.Nullable<bool> _iscontinue, 
                    System.Nullable<System.DateTime> _datenotice, 
                    System.Nullable<int> _ageatclaim_year, 
                    System.Nullable<int> _ageatclaim_month, 
                    System.Nullable<int> _ageatclaim_day, 
                    System.Nullable<int> _ageappatclaim_year, 
                    System.Nullable<int> _ageappatclaim_month, 
                    System.Nullable<int> _ageappatclaim_day, 
                    System.Nullable<bool> _iswalkoutclaim, 
                    System.Nullable<bool> _ischiefcomplainwarning, 
                    System.Nullable<bool> _iscontinueclaimwarning, 
                    System.Nullable<bool> _isexgratia, 
                    System.Nullable<bool> _isnoDCRwarning, 
                    System.Nullable<bool> _ispaycenter, 
                    System.Nullable<System.DateTime> _approveddate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/UpdateStatusClaimNotUse", ReplyAction="http://tempuri.org/IClaimService/UpdateStatusClaimNotUseResponse")]
        string UpdateStatusClaimNotUse(string ClaimID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/UpdateStatusClaimNotUse", ReplyAction="http://tempuri.org/IClaimService/UpdateStatusClaimNotUseResponse")]
        System.Threading.Tasks.Task<string> UpdateStatusClaimNotUseAsync(string ClaimID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/GetClaimDetail", ReplyAction="http://tempuri.org/IClaimService/GetClaimDetailResponse")]
        SmileSMobileWebUI.PHClaimService.usp_GetClaimDetail_Select_Result[] GetClaimDetail(string claimCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/GetClaimDetail", ReplyAction="http://tempuri.org/IClaimService/GetClaimDetailResponse")]
        System.Threading.Tasks.Task<SmileSMobileWebUI.PHClaimService.usp_GetClaimDetail_Select_Result[]> GetClaimDetailAsync(string claimCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/GetClaimHistList", ReplyAction="http://tempuri.org/IClaimService/GetClaimHistListResponse")]
        SmileSMobileWebUI.PHClaimService.usp_GetClaimHistList_Select_Result[] GetClaimHistList(string appIdpk);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/GetClaimHistList", ReplyAction="http://tempuri.org/IClaimService/GetClaimHistListResponse")]
        System.Threading.Tasks.Task<SmileSMobileWebUI.PHClaimService.usp_GetClaimHistList_Select_Result[]> GetClaimHistListAsync(string appIdpk);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/GetClaimDetailList", ReplyAction="http://tempuri.org/IClaimService/GetClaimDetailListResponse")]
        SmileSMobileWebUI.PHClaimService.usp_GetClaimDetailList_Select_Result[] GetClaimDetailList(string claimStatus, string timePeriod, string empCode, string keyword, int pageSize, int indexStart, string sortField, string orderType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/GetClaimDetailList", ReplyAction="http://tempuri.org/IClaimService/GetClaimDetailListResponse")]
        System.Threading.Tasks.Task<SmileSMobileWebUI.PHClaimService.usp_GetClaimDetailList_Select_Result[]> GetClaimDetailListAsync(string claimStatus, string timePeriod, string empCode, string keyword, int pageSize, int indexStart, string sortField, string orderType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/GetClaimStatus", ReplyAction="http://tempuri.org/IClaimService/GetClaimStatusResponse")]
        SmileSMobileWebUI.PHClaimService.usp_GetClaimStatus_Select_Result[] GetClaimStatus(string claimCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/GetClaimStatus", ReplyAction="http://tempuri.org/IClaimService/GetClaimStatusResponse")]
        System.Threading.Tasks.Task<SmileSMobileWebUI.PHClaimService.usp_GetClaimStatus_Select_Result[]> GetClaimStatusAsync(string claimCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/GetClaimFeedbackTotal", ReplyAction="http://tempuri.org/IClaimService/GetClaimFeedbackTotalResponse")]
        SmileSMobileWebUI.PHClaimService.usp_GetClaimFeedbackTotal_Select_Result[] GetClaimFeedbackTotal(string empCode, string DCR);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/GetClaimFeedbackTotal", ReplyAction="http://tempuri.org/IClaimService/GetClaimFeedbackTotalResponse")]
        System.Threading.Tasks.Task<SmileSMobileWebUI.PHClaimService.usp_GetClaimFeedbackTotal_Select_Result[]> GetClaimFeedbackTotalAsync(string empCode, string DCR);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/GetClaimFeedbackAppDetail", ReplyAction="http://tempuri.org/IClaimService/GetClaimFeedbackAppDetailResponse")]
        SmileSMobileWebUI.PHClaimService.usp_GetClaimFeedbackAppDetail_Select_Result[] GetClaimFeedbackAppDetail(string empCode, string DCR, int pageSize, int indexStart, string sortField, string orderType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/GetClaimFeedbackAppDetail", ReplyAction="http://tempuri.org/IClaimService/GetClaimFeedbackAppDetailResponse")]
        System.Threading.Tasks.Task<SmileSMobileWebUI.PHClaimService.usp_GetClaimFeedbackAppDetail_Select_Result[]> GetClaimFeedbackAppDetailAsync(string empCode, string DCR, int pageSize, int indexStart, string sortField, string orderType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/SetClaimFeedback", ReplyAction="http://tempuri.org/IClaimService/SetClaimFeedbackResponse")]
        SmileSMobileWebUI.PHClaimService.usp_SetClaimFeedback_Insert_Result[] SetClaimFeedback(string claimCode, int agentScrore, int serviceScore, int systemScore, string suggestion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/SetClaimFeedback", ReplyAction="http://tempuri.org/IClaimService/SetClaimFeedbackResponse")]
        System.Threading.Tasks.Task<SmileSMobileWebUI.PHClaimService.usp_SetClaimFeedback_Insert_Result[]> SetClaimFeedbackAsync(string claimCode, int agentScrore, int serviceScore, int systemScore, string suggestion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/UpdateClaimFeedback", ReplyAction="http://tempuri.org/IClaimService/UpdateClaimFeedbackResponse")]
        SmileSMobileWebUI.PHClaimService.usp_SetClaimFeedback_Update_Result[] UpdateClaimFeedback(string feedbackId, string claimCode, int agentScrore, int serviceScore, int systemScore, string suggestion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/UpdateClaimFeedback", ReplyAction="http://tempuri.org/IClaimService/UpdateClaimFeedbackResponse")]
        System.Threading.Tasks.Task<SmileSMobileWebUI.PHClaimService.usp_SetClaimFeedback_Update_Result[]> UpdateClaimFeedbackAsync(string feedbackId, string claimCode, int agentScrore, int serviceScore, int systemScore, string suggestion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/GetClaimCalPaidAmount", ReplyAction="http://tempuri.org/IClaimService/GetClaimCalPaidAmountResponse")]
        SmileSMobileWebUI.PHClaimService.usp_GetClaimCalPaidAmount_Select_Result[] GetClaimCalPaidAmount(string appIdpk, string claimAdmitTypeId, string dateHappen, string dateAdmitIn, int ipdDayCount, int icuDayCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/GetClaimCalPaidAmount", ReplyAction="http://tempuri.org/IClaimService/GetClaimCalPaidAmountResponse")]
        System.Threading.Tasks.Task<SmileSMobileWebUI.PHClaimService.usp_GetClaimCalPaidAmount_Select_Result[]> GetClaimCalPaidAmountAsync(string appIdpk, string claimAdmitTypeId, string dateHappen, string dateAdmitIn, int ipdDayCount, int icuDayCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/SetClaimHeader", ReplyAction="http://tempuri.org/IClaimService/SetClaimHeaderResponse")]
        string SetClaimHeader(
                    string claimCode, 
                    string claimCodeContinue, 
                    string appIdPK, 
                    System.Nullable<System.DateTime> dateHappen, 
                    string claimAdmitTypeId, 
                    string hospitalId, 
                    System.Nullable<System.DateTime> dateAdmitIn, 
                    System.Nullable<System.DateTime> dateAdmitOut, 
                    double ipdDaycouont, 
                    double icuDayCount, 
                    string branchClaimId, 
                    string remarkxx, 
                    double totalAmount, 
                    double approveNetClaim, 
                    double compensateAmount, 
                    string claimStatus, 
                    string empCode, 
                    string denyCauseId, 
                    string denyRemark, 
                    string payMethodTypeId, 
                    string bankId, 
                    string accountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/SetClaimHeader", ReplyAction="http://tempuri.org/IClaimService/SetClaimHeaderResponse")]
        System.Threading.Tasks.Task<string> SetClaimHeaderAsync(
                    string claimCode, 
                    string claimCodeContinue, 
                    string appIdPK, 
                    System.Nullable<System.DateTime> dateHappen, 
                    string claimAdmitTypeId, 
                    string hospitalId, 
                    System.Nullable<System.DateTime> dateAdmitIn, 
                    System.Nullable<System.DateTime> dateAdmitOut, 
                    double ipdDaycouont, 
                    double icuDayCount, 
                    string branchClaimId, 
                    string remarkxx, 
                    double totalAmount, 
                    double approveNetClaim, 
                    double compensateAmount, 
                    string claimStatus, 
                    string empCode, 
                    string denyCauseId, 
                    string denyRemark, 
                    string payMethodTypeId, 
                    string bankId, 
                    string accountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/UpdateClaimHeader", ReplyAction="http://tempuri.org/IClaimService/UpdateClaimHeaderResponse")]
        string UpdateClaimHeader(
                    string claimCode, 
                    string claimCodeContinue, 
                    string appIdPK, 
                    System.DateTime dateHappen, 
                    string claimAdmitTypeId, 
                    string hospitalId, 
                    System.DateTime dateAdmitIn, 
                    System.DateTime dateAdmitOut, 
                    double ipdDaycouont, 
                    double icuDayCount, 
                    string branchClaimId, 
                    string remark, 
                    double totalAmount, 
                    double approveNetClaim, 
                    double compensateAmount, 
                    string claimStatus, 
                    string empCode, 
                    string denyCauseId, 
                    string denyRemark, 
                    string payMethodTypeId, 
                    string bankId, 
                    string accountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/UpdateClaimHeader", ReplyAction="http://tempuri.org/IClaimService/UpdateClaimHeaderResponse")]
        System.Threading.Tasks.Task<string> UpdateClaimHeaderAsync(
                    string claimCode, 
                    string claimCodeContinue, 
                    string appIdPK, 
                    System.DateTime dateHappen, 
                    string claimAdmitTypeId, 
                    string hospitalId, 
                    System.DateTime dateAdmitIn, 
                    System.DateTime dateAdmitOut, 
                    double ipdDaycouont, 
                    double icuDayCount, 
                    string branchClaimId, 
                    string remark, 
                    double totalAmount, 
                    double approveNetClaim, 
                    double compensateAmount, 
                    string claimStatus, 
                    string empCode, 
                    string denyCauseId, 
                    string denyRemark, 
                    string payMethodTypeId, 
                    string bankId, 
                    string accountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/GetProductIDFromDCR", ReplyAction="http://tempuri.org/IClaimService/GetProductIDFromDCRResponse")]
        string GetProductIDFromDCR(string appID, System.DateTime dateHappen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/GetProductIDFromDCR", ReplyAction="http://tempuri.org/IClaimService/GetProductIDFromDCRResponse")]
        System.Threading.Tasks.Task<string> GetProductIDFromDCRAsync(string appID, System.DateTime dateHappen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/GetCoverageOPDAccident", ReplyAction="http://tempuri.org/IClaimService/GetCoverageOPDAccidentResponse")]
        double GetCoverageOPDAccident(string productId, string claimCodeContinue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/GetCoverageOPDAccident", ReplyAction="http://tempuri.org/IClaimService/GetCoverageOPDAccidentResponse")]
        System.Threading.Tasks.Task<double> GetCoverageOPDAccidentAsync(string productId, string claimCodeContinue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/GetCompensateIPD", ReplyAction="http://tempuri.org/IClaimService/GetCompensateIPDResponse")]
        double GetCompensateIPD(string productId, int IPDDayCount, int ICUDayCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/GetCompensateIPD", ReplyAction="http://tempuri.org/IClaimService/GetCompensateIPDResponse")]
        System.Threading.Tasks.Task<double> GetCompensateIPDAsync(string productId, int IPDDayCount, int ICUDayCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/GetOPDRemain", ReplyAction="http://tempuri.org/IClaimService/GetOPDRemainResponse")]
        double GetOPDRemain(string appId, System.DateTime dateHappen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/GetOPDRemain", ReplyAction="http://tempuri.org/IClaimService/GetOPDRemainResponse")]
        System.Threading.Tasks.Task<double> GetOPDRemainAsync(string appId, System.DateTime dateHappen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/GetOPDBenefitAll", ReplyAction="http://tempuri.org/IClaimService/GetOPDBenefitAllResponse")]
        int GetOPDBenefitAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/GetOPDBenefitAll", ReplyAction="http://tempuri.org/IClaimService/GetOPDBenefitAllResponse")]
        System.Threading.Tasks.Task<int> GetOPDBenefitAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/GetCoverageOPDByProduct", ReplyAction="http://tempuri.org/IClaimService/GetCoverageOPDByProductResponse")]
        double GetCoverageOPDByProduct(string productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/GetCoverageOPDByProduct", ReplyAction="http://tempuri.org/IClaimService/GetCoverageOPDByProductResponse")]
        System.Threading.Tasks.Task<double> GetCoverageOPDByProductAsync(string productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/GetEmployeeName", ReplyAction="http://tempuri.org/IClaimService/GetEmployeeNameResponse")]
        string GetEmployeeName(string empCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimService/GetEmployeeName", ReplyAction="http://tempuri.org/IClaimService/GetEmployeeNameResponse")]
        System.Threading.Tasks.Task<string> GetEmployeeNameAsync(string empCode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClaimServiceChannel : SmileSMobileWebUI.PHClaimService.IClaimService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClaimServiceClient : System.ServiceModel.ClientBase<SmileSMobileWebUI.PHClaimService.IClaimService>, SmileSMobileWebUI.PHClaimService.IClaimService {
        
        public ClaimServiceClient() {
        }
        
        public ClaimServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClaimServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClaimServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClaimServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SmileSMobileWebUI.PHClaimService.usp_CountOPDByApp_YearFormat_select_Result GetCountOPD(string _applicationID) {
            return base.Channel.GetCountOPD(_applicationID);
        }
        
        public System.Threading.Tasks.Task<SmileSMobileWebUI.PHClaimService.usp_CountOPDByApp_YearFormat_select_Result> GetCountOPDAsync(string _applicationID) {
            return base.Channel.GetCountOPDAsync(_applicationID);
        }
        
        public string CreateClaimPH(
                    string _applicationID, 
                    string _hospitalID, 
                    string _claimtypeID, 
                    string _claimadmittypeID, 
                    System.DateTime _datehappen, 
                    string _productID, 
                    string _insurancecompanyID, 
                    string _chiefcomplainID, 
                    string _statusID, 
                    string _createdbyID, 
                    string _continuefromclaimID, 
                    string _agentID, 
                    string _chiefcomplainanswer, 
                    string _ICD10_1, 
                    string _ICD10_2, 
                    string _ICD10_3, 
                    string _remark, 
                    string _overfromcompany, 
                    string _denycauseID, 
                    string _receiptstatusID, 
                    string _sendinsurancestatusID, 
                    string _payhospitalcashheaderID, 
                    string _claimheadergroupID, 
                    string _approvedbyID, 
                    string _claimpaybyID, 
                    string hospitalClaimInformCode, 
                    System.Nullable<bool> _iscontinue, 
                    System.Nullable<System.DateTime> _datenotice, 
                    System.Nullable<int> _ageatclaim_year, 
                    System.Nullable<int> _ageatclaim_month, 
                    System.Nullable<int> _ageatclaim_day, 
                    System.Nullable<int> _ageappatclaim_year, 
                    System.Nullable<int> _ageappatclaim_month, 
                    System.Nullable<int> _ageappatclaim_day, 
                    System.Nullable<bool> _iswalkoutclaim, 
                    System.Nullable<bool> _ischiefcomplainwarning, 
                    System.Nullable<bool> _iscontinueclaimwarning, 
                    System.Nullable<bool> _isexgratia, 
                    System.Nullable<bool> _isnoDCRwarning, 
                    System.Nullable<bool> _ispaycenter, 
                    System.Nullable<System.DateTime> _approveddate) {
            return base.Channel.CreateClaimPH(_applicationID, _hospitalID, _claimtypeID, _claimadmittypeID, _datehappen, _productID, _insurancecompanyID, _chiefcomplainID, _statusID, _createdbyID, _continuefromclaimID, _agentID, _chiefcomplainanswer, _ICD10_1, _ICD10_2, _ICD10_3, _remark, _overfromcompany, _denycauseID, _receiptstatusID, _sendinsurancestatusID, _payhospitalcashheaderID, _claimheadergroupID, _approvedbyID, _claimpaybyID, hospitalClaimInformCode, _iscontinue, _datenotice, _ageatclaim_year, _ageatclaim_month, _ageatclaim_day, _ageappatclaim_year, _ageappatclaim_month, _ageappatclaim_day, _iswalkoutclaim, _ischiefcomplainwarning, _iscontinueclaimwarning, _isexgratia, _isnoDCRwarning, _ispaycenter, _approveddate);
        }
        
        public System.Threading.Tasks.Task<string> CreateClaimPHAsync(
                    string _applicationID, 
                    string _hospitalID, 
                    string _claimtypeID, 
                    string _claimadmittypeID, 
                    System.DateTime _datehappen, 
                    string _productID, 
                    string _insurancecompanyID, 
                    string _chiefcomplainID, 
                    string _statusID, 
                    string _createdbyID, 
                    string _continuefromclaimID, 
                    string _agentID, 
                    string _chiefcomplainanswer, 
                    string _ICD10_1, 
                    string _ICD10_2, 
                    string _ICD10_3, 
                    string _remark, 
                    string _overfromcompany, 
                    string _denycauseID, 
                    string _receiptstatusID, 
                    string _sendinsurancestatusID, 
                    string _payhospitalcashheaderID, 
                    string _claimheadergroupID, 
                    string _approvedbyID, 
                    string _claimpaybyID, 
                    string hospitalClaimInformCode, 
                    System.Nullable<bool> _iscontinue, 
                    System.Nullable<System.DateTime> _datenotice, 
                    System.Nullable<int> _ageatclaim_year, 
                    System.Nullable<int> _ageatclaim_month, 
                    System.Nullable<int> _ageatclaim_day, 
                    System.Nullable<int> _ageappatclaim_year, 
                    System.Nullable<int> _ageappatclaim_month, 
                    System.Nullable<int> _ageappatclaim_day, 
                    System.Nullable<bool> _iswalkoutclaim, 
                    System.Nullable<bool> _ischiefcomplainwarning, 
                    System.Nullable<bool> _iscontinueclaimwarning, 
                    System.Nullable<bool> _isexgratia, 
                    System.Nullable<bool> _isnoDCRwarning, 
                    System.Nullable<bool> _ispaycenter, 
                    System.Nullable<System.DateTime> _approveddate) {
            return base.Channel.CreateClaimPHAsync(_applicationID, _hospitalID, _claimtypeID, _claimadmittypeID, _datehappen, _productID, _insurancecompanyID, _chiefcomplainID, _statusID, _createdbyID, _continuefromclaimID, _agentID, _chiefcomplainanswer, _ICD10_1, _ICD10_2, _ICD10_3, _remark, _overfromcompany, _denycauseID, _receiptstatusID, _sendinsurancestatusID, _payhospitalcashheaderID, _claimheadergroupID, _approvedbyID, _claimpaybyID, hospitalClaimInformCode, _iscontinue, _datenotice, _ageatclaim_year, _ageatclaim_month, _ageatclaim_day, _ageappatclaim_year, _ageappatclaim_month, _ageappatclaim_day, _iswalkoutclaim, _ischiefcomplainwarning, _iscontinueclaimwarning, _isexgratia, _isnoDCRwarning, _ispaycenter, _approveddate);
        }
        
        public string UpdateStatusClaimNotUse(string ClaimID) {
            return base.Channel.UpdateStatusClaimNotUse(ClaimID);
        }
        
        public System.Threading.Tasks.Task<string> UpdateStatusClaimNotUseAsync(string ClaimID) {
            return base.Channel.UpdateStatusClaimNotUseAsync(ClaimID);
        }
        
        public SmileSMobileWebUI.PHClaimService.usp_GetClaimDetail_Select_Result[] GetClaimDetail(string claimCode) {
            return base.Channel.GetClaimDetail(claimCode);
        }
        
        public System.Threading.Tasks.Task<SmileSMobileWebUI.PHClaimService.usp_GetClaimDetail_Select_Result[]> GetClaimDetailAsync(string claimCode) {
            return base.Channel.GetClaimDetailAsync(claimCode);
        }
        
        public SmileSMobileWebUI.PHClaimService.usp_GetClaimHistList_Select_Result[] GetClaimHistList(string appIdpk) {
            return base.Channel.GetClaimHistList(appIdpk);
        }
        
        public System.Threading.Tasks.Task<SmileSMobileWebUI.PHClaimService.usp_GetClaimHistList_Select_Result[]> GetClaimHistListAsync(string appIdpk) {
            return base.Channel.GetClaimHistListAsync(appIdpk);
        }
        
        public SmileSMobileWebUI.PHClaimService.usp_GetClaimDetailList_Select_Result[] GetClaimDetailList(string claimStatus, string timePeriod, string empCode, string keyword, int pageSize, int indexStart, string sortField, string orderType) {
            return base.Channel.GetClaimDetailList(claimStatus, timePeriod, empCode, keyword, pageSize, indexStart, sortField, orderType);
        }
        
        public System.Threading.Tasks.Task<SmileSMobileWebUI.PHClaimService.usp_GetClaimDetailList_Select_Result[]> GetClaimDetailListAsync(string claimStatus, string timePeriod, string empCode, string keyword, int pageSize, int indexStart, string sortField, string orderType) {
            return base.Channel.GetClaimDetailListAsync(claimStatus, timePeriod, empCode, keyword, pageSize, indexStart, sortField, orderType);
        }
        
        public SmileSMobileWebUI.PHClaimService.usp_GetClaimStatus_Select_Result[] GetClaimStatus(string claimCode) {
            return base.Channel.GetClaimStatus(claimCode);
        }
        
        public System.Threading.Tasks.Task<SmileSMobileWebUI.PHClaimService.usp_GetClaimStatus_Select_Result[]> GetClaimStatusAsync(string claimCode) {
            return base.Channel.GetClaimStatusAsync(claimCode);
        }
        
        public SmileSMobileWebUI.PHClaimService.usp_GetClaimFeedbackTotal_Select_Result[] GetClaimFeedbackTotal(string empCode, string DCR) {
            return base.Channel.GetClaimFeedbackTotal(empCode, DCR);
        }
        
        public System.Threading.Tasks.Task<SmileSMobileWebUI.PHClaimService.usp_GetClaimFeedbackTotal_Select_Result[]> GetClaimFeedbackTotalAsync(string empCode, string DCR) {
            return base.Channel.GetClaimFeedbackTotalAsync(empCode, DCR);
        }
        
        public SmileSMobileWebUI.PHClaimService.usp_GetClaimFeedbackAppDetail_Select_Result[] GetClaimFeedbackAppDetail(string empCode, string DCR, int pageSize, int indexStart, string sortField, string orderType) {
            return base.Channel.GetClaimFeedbackAppDetail(empCode, DCR, pageSize, indexStart, sortField, orderType);
        }
        
        public System.Threading.Tasks.Task<SmileSMobileWebUI.PHClaimService.usp_GetClaimFeedbackAppDetail_Select_Result[]> GetClaimFeedbackAppDetailAsync(string empCode, string DCR, int pageSize, int indexStart, string sortField, string orderType) {
            return base.Channel.GetClaimFeedbackAppDetailAsync(empCode, DCR, pageSize, indexStart, sortField, orderType);
        }
        
        public SmileSMobileWebUI.PHClaimService.usp_SetClaimFeedback_Insert_Result[] SetClaimFeedback(string claimCode, int agentScrore, int serviceScore, int systemScore, string suggestion) {
            return base.Channel.SetClaimFeedback(claimCode, agentScrore, serviceScore, systemScore, suggestion);
        }
        
        public System.Threading.Tasks.Task<SmileSMobileWebUI.PHClaimService.usp_SetClaimFeedback_Insert_Result[]> SetClaimFeedbackAsync(string claimCode, int agentScrore, int serviceScore, int systemScore, string suggestion) {
            return base.Channel.SetClaimFeedbackAsync(claimCode, agentScrore, serviceScore, systemScore, suggestion);
        }
        
        public SmileSMobileWebUI.PHClaimService.usp_SetClaimFeedback_Update_Result[] UpdateClaimFeedback(string feedbackId, string claimCode, int agentScrore, int serviceScore, int systemScore, string suggestion) {
            return base.Channel.UpdateClaimFeedback(feedbackId, claimCode, agentScrore, serviceScore, systemScore, suggestion);
        }
        
        public System.Threading.Tasks.Task<SmileSMobileWebUI.PHClaimService.usp_SetClaimFeedback_Update_Result[]> UpdateClaimFeedbackAsync(string feedbackId, string claimCode, int agentScrore, int serviceScore, int systemScore, string suggestion) {
            return base.Channel.UpdateClaimFeedbackAsync(feedbackId, claimCode, agentScrore, serviceScore, systemScore, suggestion);
        }
        
        public SmileSMobileWebUI.PHClaimService.usp_GetClaimCalPaidAmount_Select_Result[] GetClaimCalPaidAmount(string appIdpk, string claimAdmitTypeId, string dateHappen, string dateAdmitIn, int ipdDayCount, int icuDayCount) {
            return base.Channel.GetClaimCalPaidAmount(appIdpk, claimAdmitTypeId, dateHappen, dateAdmitIn, ipdDayCount, icuDayCount);
        }
        
        public System.Threading.Tasks.Task<SmileSMobileWebUI.PHClaimService.usp_GetClaimCalPaidAmount_Select_Result[]> GetClaimCalPaidAmountAsync(string appIdpk, string claimAdmitTypeId, string dateHappen, string dateAdmitIn, int ipdDayCount, int icuDayCount) {
            return base.Channel.GetClaimCalPaidAmountAsync(appIdpk, claimAdmitTypeId, dateHappen, dateAdmitIn, ipdDayCount, icuDayCount);
        }
        
        public string SetClaimHeader(
                    string claimCode, 
                    string claimCodeContinue, 
                    string appIdPK, 
                    System.Nullable<System.DateTime> dateHappen, 
                    string claimAdmitTypeId, 
                    string hospitalId, 
                    System.Nullable<System.DateTime> dateAdmitIn, 
                    System.Nullable<System.DateTime> dateAdmitOut, 
                    double ipdDaycouont, 
                    double icuDayCount, 
                    string branchClaimId, 
                    string remarkxx, 
                    double totalAmount, 
                    double approveNetClaim, 
                    double compensateAmount, 
                    string claimStatus, 
                    string empCode, 
                    string denyCauseId, 
                    string denyRemark, 
                    string payMethodTypeId, 
                    string bankId, 
                    string accountNo) {
            return base.Channel.SetClaimHeader(claimCode, claimCodeContinue, appIdPK, dateHappen, claimAdmitTypeId, hospitalId, dateAdmitIn, dateAdmitOut, ipdDaycouont, icuDayCount, branchClaimId, remarkxx, totalAmount, approveNetClaim, compensateAmount, claimStatus, empCode, denyCauseId, denyRemark, payMethodTypeId, bankId, accountNo);
        }
        
        public System.Threading.Tasks.Task<string> SetClaimHeaderAsync(
                    string claimCode, 
                    string claimCodeContinue, 
                    string appIdPK, 
                    System.Nullable<System.DateTime> dateHappen, 
                    string claimAdmitTypeId, 
                    string hospitalId, 
                    System.Nullable<System.DateTime> dateAdmitIn, 
                    System.Nullable<System.DateTime> dateAdmitOut, 
                    double ipdDaycouont, 
                    double icuDayCount, 
                    string branchClaimId, 
                    string remarkxx, 
                    double totalAmount, 
                    double approveNetClaim, 
                    double compensateAmount, 
                    string claimStatus, 
                    string empCode, 
                    string denyCauseId, 
                    string denyRemark, 
                    string payMethodTypeId, 
                    string bankId, 
                    string accountNo) {
            return base.Channel.SetClaimHeaderAsync(claimCode, claimCodeContinue, appIdPK, dateHappen, claimAdmitTypeId, hospitalId, dateAdmitIn, dateAdmitOut, ipdDaycouont, icuDayCount, branchClaimId, remarkxx, totalAmount, approveNetClaim, compensateAmount, claimStatus, empCode, denyCauseId, denyRemark, payMethodTypeId, bankId, accountNo);
        }
        
        public string UpdateClaimHeader(
                    string claimCode, 
                    string claimCodeContinue, 
                    string appIdPK, 
                    System.DateTime dateHappen, 
                    string claimAdmitTypeId, 
                    string hospitalId, 
                    System.DateTime dateAdmitIn, 
                    System.DateTime dateAdmitOut, 
                    double ipdDaycouont, 
                    double icuDayCount, 
                    string branchClaimId, 
                    string remark, 
                    double totalAmount, 
                    double approveNetClaim, 
                    double compensateAmount, 
                    string claimStatus, 
                    string empCode, 
                    string denyCauseId, 
                    string denyRemark, 
                    string payMethodTypeId, 
                    string bankId, 
                    string accountNo) {
            return base.Channel.UpdateClaimHeader(claimCode, claimCodeContinue, appIdPK, dateHappen, claimAdmitTypeId, hospitalId, dateAdmitIn, dateAdmitOut, ipdDaycouont, icuDayCount, branchClaimId, remark, totalAmount, approveNetClaim, compensateAmount, claimStatus, empCode, denyCauseId, denyRemark, payMethodTypeId, bankId, accountNo);
        }
        
        public System.Threading.Tasks.Task<string> UpdateClaimHeaderAsync(
                    string claimCode, 
                    string claimCodeContinue, 
                    string appIdPK, 
                    System.DateTime dateHappen, 
                    string claimAdmitTypeId, 
                    string hospitalId, 
                    System.DateTime dateAdmitIn, 
                    System.DateTime dateAdmitOut, 
                    double ipdDaycouont, 
                    double icuDayCount, 
                    string branchClaimId, 
                    string remark, 
                    double totalAmount, 
                    double approveNetClaim, 
                    double compensateAmount, 
                    string claimStatus, 
                    string empCode, 
                    string denyCauseId, 
                    string denyRemark, 
                    string payMethodTypeId, 
                    string bankId, 
                    string accountNo) {
            return base.Channel.UpdateClaimHeaderAsync(claimCode, claimCodeContinue, appIdPK, dateHappen, claimAdmitTypeId, hospitalId, dateAdmitIn, dateAdmitOut, ipdDaycouont, icuDayCount, branchClaimId, remark, totalAmount, approveNetClaim, compensateAmount, claimStatus, empCode, denyCauseId, denyRemark, payMethodTypeId, bankId, accountNo);
        }
        
        public string GetProductIDFromDCR(string appID, System.DateTime dateHappen) {
            return base.Channel.GetProductIDFromDCR(appID, dateHappen);
        }
        
        public System.Threading.Tasks.Task<string> GetProductIDFromDCRAsync(string appID, System.DateTime dateHappen) {
            return base.Channel.GetProductIDFromDCRAsync(appID, dateHappen);
        }
        
        public double GetCoverageOPDAccident(string productId, string claimCodeContinue) {
            return base.Channel.GetCoverageOPDAccident(productId, claimCodeContinue);
        }
        
        public System.Threading.Tasks.Task<double> GetCoverageOPDAccidentAsync(string productId, string claimCodeContinue) {
            return base.Channel.GetCoverageOPDAccidentAsync(productId, claimCodeContinue);
        }
        
        public double GetCompensateIPD(string productId, int IPDDayCount, int ICUDayCount) {
            return base.Channel.GetCompensateIPD(productId, IPDDayCount, ICUDayCount);
        }
        
        public System.Threading.Tasks.Task<double> GetCompensateIPDAsync(string productId, int IPDDayCount, int ICUDayCount) {
            return base.Channel.GetCompensateIPDAsync(productId, IPDDayCount, ICUDayCount);
        }
        
        public double GetOPDRemain(string appId, System.DateTime dateHappen) {
            return base.Channel.GetOPDRemain(appId, dateHappen);
        }
        
        public System.Threading.Tasks.Task<double> GetOPDRemainAsync(string appId, System.DateTime dateHappen) {
            return base.Channel.GetOPDRemainAsync(appId, dateHappen);
        }
        
        public int GetOPDBenefitAll() {
            return base.Channel.GetOPDBenefitAll();
        }
        
        public System.Threading.Tasks.Task<int> GetOPDBenefitAllAsync() {
            return base.Channel.GetOPDBenefitAllAsync();
        }
        
        public double GetCoverageOPDByProduct(string productId) {
            return base.Channel.GetCoverageOPDByProduct(productId);
        }
        
        public System.Threading.Tasks.Task<double> GetCoverageOPDByProductAsync(string productId) {
            return base.Channel.GetCoverageOPDByProductAsync(productId);
        }
        
        public string GetEmployeeName(string empCode) {
            return base.Channel.GetEmployeeName(empCode);
        }
        
        public System.Threading.Tasks.Task<string> GetEmployeeNameAsync(string empCode) {
            return base.Channel.GetEmployeeNameAsync(empCode);
        }
    }
}
