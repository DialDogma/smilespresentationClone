//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmileSCommissionDataImport.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CommissionCalculateEntities : DbContext
    {
        public CommissionCalculateEntities()
            : base("name=CommissionCalculateEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<D_Area> D_Area { get; set; }
        public virtual DbSet<D_Area_Calculation_LastMonth> D_Area_Calculation_LastMonth { get; set; }
        public virtual DbSet<D_Branch> D_Branch { get; set; }
        public virtual DbSet<D_Branch_Calculation_LastMonth> D_Branch_Calculation_LastMonth { get; set; }
        public virtual DbSet<D_ClaimHouse> D_ClaimHouse { get; set; }
        public virtual DbSet<D_ClaimLRG_PH_Area_Current> D_ClaimLRG_PH_Area_Current { get; set; }
        public virtual DbSet<D_ClaimLRG_PH_Branch_Current> D_ClaimLRG_PH_Branch_Current { get; set; }
        public virtual DbSet<D_ClaimLRG_PH_Personal_Current> D_ClaimLRG_PH_Personal_Current { get; set; }
        public virtual DbSet<D_ClaimMotor> D_ClaimMotor { get; set; }
        public virtual DbSet<D_ClaimNonMotor_OnLine> D_ClaimNonMotor_OnLine { get; set; }
        public virtual DbSet<D_Data_MP_Area> D_Data_MP_Area { get; set; }
        public virtual DbSet<D_Data_MP_Branch> D_Data_MP_Branch { get; set; }
        public virtual DbSet<D_Data_MP_Personal> D_Data_MP_Personal { get; set; }
        public virtual DbSet<D_Data_PH_Area_0499> D_Data_PH_Area_0499 { get; set; }
        public virtual DbSet<D_Data_PH_Area_No0499> D_Data_PH_Area_No0499 { get; set; }
        public virtual DbSet<D_Data_PH_Branch_0499> D_Data_PH_Branch_0499 { get; set; }
        public virtual DbSet<D_Data_PH_Branch_No0499> D_Data_PH_Branch_No0499 { get; set; }
        public virtual DbSet<D_Data_PH_Personal> D_Data_PH_Personal { get; set; }
        public virtual DbSet<D_Employee> D_Employee { get; set; }
        public virtual DbSet<D_Employee_CB_PB> D_Employee_CB_PB { get; set; }
        public virtual DbSet<D_Employee_DA> D_Employee_DA { get; set; }
        public virtual DbSet<D_Employee_DB> D_Employee_DB { get; set; }
        public virtual DbSet<D_Employee_DM> D_Employee_DM { get; set; }
        public virtual DbSet<D_Employee_DS> D_Employee_DS { get; set; }
        public virtual DbSet<D_Employee_HCM> D_Employee_HCM { get; set; }
        public virtual DbSet<D_Employee_HO_AHO> D_Employee_HO_AHO { get; set; }
        public virtual DbSet<D_Employee_MM> D_Employee_MM { get; set; }
        public virtual DbSet<D_Employee_MMR> D_Employee_MMR { get; set; }
        public virtual DbSet<D_Employee_MS> D_Employee_MS { get; set; }
        public virtual DbSet<D_Employee_MSR> D_Employee_MSR { get; set; }
        public virtual DbSet<D_Employee_Zebra> D_Employee_Zebra { get; set; }
        public virtual DbSet<D_Lapse> D_Lapse { get; set; }
        public virtual DbSet<D_LapseV1> D_LapseV1 { get; set; }
        public virtual DbSet<D_LapseV2> D_LapseV2 { get; set; }
        public virtual DbSet<D_LapseV3> D_LapseV3 { get; set; }
        public virtual DbSet<D_NewApp_Goft> D_NewApp_Goft { get; set; }
        public virtual DbSet<D_NewApp_PA200> D_NewApp_PA200 { get; set; }
        public virtual DbSet<D_NewApp_PAGroup> D_NewApp_PAGroup { get; set; }
        public virtual DbSet<D_NewApp_SmilePA> D_NewApp_SmilePA { get; set; }
        public virtual DbSet<D_NewApp_TA_Domestic> D_NewApp_TA_Domestic { get; set; }
        public virtual DbSet<D_NewApp_TA_Inter> D_NewApp_TA_Inter { get; set; }
        public virtual DbSet<D_NewAppCompulsory> D_NewAppCompulsory { get; set; }
        public virtual DbSet<D_NewAppHP> D_NewAppHP { get; set; }
        public virtual DbSet<D_NewAppHQ> D_NewAppHQ { get; set; }
        public virtual DbSet<D_NewAppMQ> D_NewAppMQ { get; set; }
        public virtual DbSet<D_NewAppPA30> D_NewAppPA30 { get; set; }
        public virtual DbSet<D_NewAppPACommunity> D_NewAppPACommunity { get; set; }
        public virtual DbSet<D_NewAppPH> D_NewAppPH { get; set; }
        public virtual DbSet<D_NewAppPL> D_NewAppPL { get; set; }
        public virtual DbSet<D_OperatingCapital> D_OperatingCapital { get; set; }
        public virtual DbSet<D_PA_Premium> D_PA_Premium { get; set; }
        public virtual DbSet<D_Personal_Calculation_LastMonth> D_Personal_Calculation_LastMonth { get; set; }
        public virtual DbSet<D_Recover> D_Recover { get; set; }
        public virtual DbSet<D_ReportBeforeCover> D_ReportBeforeCover { get; set; }
        public virtual DbSet<D_Team> D_Team { get; set; }
        public virtual DbSet<D_UnApprovedUnderwrite> D_UnApprovedUnderwrite { get; set; }
        public virtual DbSet<D_UnApprovedUnderwrite_PriorMonth> D_UnApprovedUnderwrite_PriorMonth { get; set; }
        public virtual DbSet<D_UnderwriteCondition> D_UnderwriteCondition { get; set; }
        public virtual DbSet<D_UnderwriteOverDue> D_UnderwriteOverDue { get; set; }
        public virtual DbSet<D_WeeklySaleTarget> D_WeeklySaleTarget { get; set; }
        public virtual DbSet<D_WeeklySaleTargetBranchPB_CB> D_WeeklySaleTargetBranchPB_CB { get; set; }
        public virtual DbSet<D_Zebra> D_Zebra { get; set; }
        public virtual DbSet<D_Zebra_Calculation_LastMonth> D_Zebra_Calculation_LastMonth { get; set; }
        public virtual DbSet<ValidApp_Id> ValidApp_Id { get; set; }
        public virtual DbSet<ValidArea> ValidArea { get; set; }
        public virtual DbSet<ValidBranch> ValidBranch { get; set; }
        public virtual DbSet<ValidClaim_Id> ValidClaim_Id { get; set; }
        public virtual DbSet<ValidDistrict> ValidDistrict { get; set; }
        public virtual DbSet<ValidEmployeeSS> ValidEmployeeSS { get; set; }
        public virtual DbSet<ValidHC> ValidHC { get; set; }
        public virtual DbSet<ValidProvince> ValidProvince { get; set; }
        public virtual DbSet<ValidTeam> ValidTeam { get; set; }
        public virtual DbSet<ValidZebra> ValidZebra { get; set; }
        public virtual DbSet<D_Premium_System_MP_Area> D_Premium_System_MP_Area { get; set; }
        public virtual DbSet<D_Premium_System_MP_Branch> D_Premium_System_MP_Branch { get; set; }
        public virtual DbSet<D_Premium_System_MP_Personal> D_Premium_System_MP_Personal { get; set; }
        public virtual DbSet<D_Premium_System_PH_Area> D_Premium_System_PH_Area { get; set; }
        public virtual DbSet<D_Premium_System_PH_Branch> D_Premium_System_PH_Branch { get; set; }
        public virtual DbSet<D_Premium_System_PH_Personal> D_Premium_System_PH_Personal { get; set; }
        public virtual DbSet<D_NewAppMP> D_NewAppMP { get; set; }
        public virtual DbSet<D_LapseMP> D_LapseMP { get; set; }
        public virtual DbSet<D_LapseMPV1> D_LapseMPV1 { get; set; }
        public virtual DbSet<D_LapseMPV2> D_LapseMPV2 { get; set; }
    
        public virtual ObjectResult<usp_DatasourceImportedLogManual_Update_Result> usp_DatasourceImportedLogManual_Update(Nullable<int> periodId, string datasourceName, string updatedBy)
        {
            var periodIdParameter = periodId.HasValue ?
                new ObjectParameter("PeriodId", periodId) :
                new ObjectParameter("PeriodId", typeof(int));
    
            var datasourceNameParameter = datasourceName != null ?
                new ObjectParameter("DatasourceName", datasourceName) :
                new ObjectParameter("DatasourceName", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DatasourceImportedLogManual_Update_Result>("usp_DatasourceImportedLogManual_Update", periodIdParameter, datasourceNameParameter, updatedByParameter);
        }
    
        public virtual ObjectResult<usp_DatasourceImportedLogNoData_Update_Result> usp_DatasourceImportedLogNoData_Update(Nullable<int> periodId, string datasourceName, string updatedBy)
        {
            var periodIdParameter = periodId.HasValue ?
                new ObjectParameter("PeriodId", periodId) :
                new ObjectParameter("PeriodId", typeof(int));
    
            var datasourceNameParameter = datasourceName != null ?
                new ObjectParameter("DatasourceName", datasourceName) :
                new ObjectParameter("DatasourceName", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DatasourceImportedLogNoData_Update_Result>("usp_DatasourceImportedLogNoData_Update", periodIdParameter, datasourceNameParameter, updatedByParameter);
        }
    
        public virtual ObjectResult<usp_CommissionPeriod_GetLastedPeriod_Select_Result2> usp_CommissionPeriod_GetLastedPeriod_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CommissionPeriod_GetLastedPeriod_Select_Result2>("usp_CommissionPeriod_GetLastedPeriod_Select");
        }
    }
}
