//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmileSCommission.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CommissionCalculateEntities : DbContext
    {
        public CommissionCalculateEntities()
            : base("name=CommissionCalculateEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C_Area> C_Area { get; set; }
        public virtual DbSet<C_AREA_BEST> C_AREA_BEST { get; set; }
        public virtual DbSet<C_BRANCH> C_BRANCH { get; set; }
        public virtual DbSet<C_Branch_v_1> C_Branch_v_1 { get; set; }
        public virtual DbSet<C_HO_AHO> C_HO_AHO { get; set; }
        public virtual DbSet<C_Keh_Test_Level1_1> C_Keh_Test_Level1_1 { get; set; }
        public virtual DbSet<C_Keh_Test_Level1_2> C_Keh_Test_Level1_2 { get; set; }
        public virtual DbSet<C_Keh_Test_Level1_3> C_Keh_Test_Level1_3 { get; set; }
        public virtual DbSet<C_Keh_Test_Level2_1> C_Keh_Test_Level2_1 { get; set; }
        public virtual DbSet<C_MS> C_MS { get; set; }
        public virtual DbSet<C_MSN> C_MSN { get; set; }
        public virtual DbSet<C_PERSONAL> C_PERSONAL { get; set; }
        public virtual DbSet<C_POINT_BRANCH> C_POINT_BRANCH { get; set; }
        public virtual DbSet<C_TEAM_MS> C_TEAM_MS { get; set; }
        public virtual DbSet<CommissionPeriod> CommissionPeriod { get; set; }
        public virtual DbSet<CommissionPeriodStatus> CommissionPeriodStatus { get; set; }
        public virtual DbSet<D_Area> D_Area { get; set; }
        public virtual DbSet<D_Branch> D_Branch { get; set; }
        public virtual DbSet<D_CalimLRG_Area> D_CalimLRG_Area { get; set; }
        public virtual DbSet<D_CalimLRG_Branch> D_CalimLRG_Branch { get; set; }
        public virtual DbSet<D_ClaimLRG_Agent> D_ClaimLRG_Agent { get; set; }
        public virtual DbSet<D_ClaimNonMoter> D_ClaimNonMoter { get; set; }
        public virtual DbSet<D_ClaimOnline> D_ClaimOnline { get; set; }
        public virtual DbSet<D_ClaimPAStudent> D_ClaimPAStudent { get; set; }
        public virtual DbSet<D_Collect_Agent> D_Collect_Agent { get; set; }
        public virtual DbSet<D_Collect_AppBranch> D_Collect_AppBranch { get; set; }
        public virtual DbSet<D_Collect_AppTeam> D_Collect_AppTeam { get; set; }
        public virtual DbSet<D_Collect_Area> D_Collect_Area { get; set; }
        public virtual DbSet<D_Collect_Branch> D_Collect_Branch { get; set; }
        public virtual DbSet<D_Employee> D_Employee { get; set; }
        public virtual DbSet<D_Lapse> D_Lapse { get; set; }
        public virtual DbSet<D_LapseMP> D_LapseMP { get; set; }
        public virtual DbSet<D_NewAppHP> D_NewAppHP { get; set; }
        public virtual DbSet<D_NewAppMP> D_NewAppMP { get; set; }
        public virtual DbSet<D_NewAppPA30> D_NewAppPA30 { get; set; }
        public virtual DbSet<D_NewAppPAcommunity> D_NewAppPAcommunity { get; set; }
        public virtual DbSet<D_NewAppPH> D_NewAppPH { get; set; }
        public virtual DbSet<D_NewAppPL> D_NewAppPL { get; set; }
        public virtual DbSet<D_Persistency_Area_499> D_Persistency_Area_499 { get; set; }
        public virtual DbSet<D_Persistency_Area_No499> D_Persistency_Area_No499 { get; set; }
        public virtual DbSet<D_Persistency_Branch_499> D_Persistency_Branch_499 { get; set; }
        public virtual DbSet<D_Persistency_Branch_No499> D_Persistency_Branch_No499 { get; set; }
        public virtual DbSet<D_Persistency_Personal> D_Persistency_Personal { get; set; }
        public virtual DbSet<D_Recover> D_Recover { get; set; }
        public virtual DbSet<D_Team> D_Team { get; set; }
        public virtual DbSet<D_UnApprovedUnderwrite> D_UnApprovedUnderwrite { get; set; }
        public virtual DbSet<DatasourceImportedEditCause> DatasourceImportedEditCause { get; set; }
        public virtual DbSet<DatasourceImportedLog> DatasourceImportedLog { get; set; }
        public virtual DbSet<DatasourceImportedStatus> DatasourceImportedStatus { get; set; }
        public virtual DbSet<DatasourceImportedType> DatasourceImportedType { get; set; }
        public virtual DbSet<DataSourceMaster> DataSourceMaster { get; set; }
        public virtual DbSet<DesignerModel> DesignerModel { get; set; }
        public virtual DbSet<DesignerModelConfig> DesignerModelConfig { get; set; }
        public virtual DbSet<DesignerModelDatasource> DesignerModelDatasource { get; set; }
        public virtual DbSet<DesignerParameter> DesignerParameter { get; set; }
        public virtual DbSet<Model> Model { get; set; }
        public virtual DbSet<ModelCalculationIndex> ModelCalculationIndex { get; set; }
        public virtual DbSet<ModelConfig> ModelConfig { get; set; }
        public virtual DbSet<ModelDatasouce> ModelDatasouce { get; set; }
        public virtual DbSet<ModelParameter> ModelParameter { get; set; }
        public virtual DbSet<ModelParameterDescription> ModelParameterDescription { get; set; }
        public virtual DbSet<ParamValue> ParamValue { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
    
        public virtual ObjectResult<usp_CommissionPeriod_Datatable_Result> usp_CommissionPeriod_Datatable(string criteria, Nullable<int> pageStart, Nullable<int> pageSize, string sortField, string orderType)
        {
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            var pageStartParameter = pageStart.HasValue ?
                new ObjectParameter("PageStart", pageStart) :
                new ObjectParameter("PageStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CommissionPeriod_Datatable_Result>("usp_CommissionPeriod_Datatable", criteriaParameter, pageStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter);
        }
    
        public virtual ObjectResult<usp_CommissionPeriod_Insert_Result> usp_CommissionPeriod_Insert(Nullable<System.DateTime> payPeriod, string description, string createdBy)
        {
            var payPeriodParameter = payPeriod.HasValue ?
                new ObjectParameter("PayPeriod", payPeriod) :
                new ObjectParameter("PayPeriod", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CommissionPeriod_Insert_Result>("usp_CommissionPeriod_Insert", payPeriodParameter, descriptionParameter, createdByParameter);
        }
    
        public virtual ObjectResult<usp_CommissionPeriod_Select_Result> usp_CommissionPeriod_Select(Nullable<int> payPeriodId, Nullable<int> commissionPeriodStatusId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var payPeriodIdParameter = payPeriodId.HasValue ?
                new ObjectParameter("PayPeriodId", payPeriodId) :
                new ObjectParameter("PayPeriodId", typeof(int));
    
            var commissionPeriodStatusIdParameter = commissionPeriodStatusId.HasValue ?
                new ObjectParameter("CommissionPeriodStatusId", commissionPeriodStatusId) :
                new ObjectParameter("CommissionPeriodStatusId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CommissionPeriod_Select_Result>("usp_CommissionPeriod_Select", payPeriodIdParameter, commissionPeriodStatusIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_CommissionPeriod_Update_Result> usp_CommissionPeriod_Update(Nullable<int> payPeriodId, string description, string createdBy)
        {
            var payPeriodIdParameter = payPeriodId.HasValue ?
                new ObjectParameter("PayPeriodId", payPeriodId) :
                new ObjectParameter("PayPeriodId", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CommissionPeriod_Update_Result>("usp_CommissionPeriod_Update", payPeriodIdParameter, descriptionParameter, createdByParameter);
        }
    
        public virtual ObjectResult<usp_CloneDataSource_Result> usp_CloneDataSource(Nullable<int> fromPeriodId, Nullable<int> toPeriodId, string createdBy)
        {
            var fromPeriodIdParameter = fromPeriodId.HasValue ?
                new ObjectParameter("FromPeriodId", fromPeriodId) :
                new ObjectParameter("FromPeriodId", typeof(int));
    
            var toPeriodIdParameter = toPeriodId.HasValue ?
                new ObjectParameter("ToPeriodId", toPeriodId) :
                new ObjectParameter("ToPeriodId", typeof(int));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CloneDataSource_Result>("usp_CloneDataSource", fromPeriodIdParameter, toPeriodIdParameter, createdByParameter);
        }
    
        public virtual ObjectResult<usp_CommissionPeriodSearch_Select_Result> usp_CommissionPeriodSearch_Select(Nullable<System.DateTime> payPeriod, Nullable<bool> isWaitProcess, Nullable<bool> isSentPayroll, Nullable<bool> isSucess, Nullable<bool> isCancel, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var payPeriodParameter = payPeriod.HasValue ?
                new ObjectParameter("PayPeriod", payPeriod) :
                new ObjectParameter("PayPeriod", typeof(System.DateTime));
    
            var isWaitProcessParameter = isWaitProcess.HasValue ?
                new ObjectParameter("IsWaitProcess", isWaitProcess) :
                new ObjectParameter("IsWaitProcess", typeof(bool));
    
            var isSentPayrollParameter = isSentPayroll.HasValue ?
                new ObjectParameter("IsSentPayroll", isSentPayroll) :
                new ObjectParameter("IsSentPayroll", typeof(bool));
    
            var isSucessParameter = isSucess.HasValue ?
                new ObjectParameter("IsSucess", isSucess) :
                new ObjectParameter("IsSucess", typeof(bool));
    
            var isCancelParameter = isCancel.HasValue ?
                new ObjectParameter("IsCancel", isCancel) :
                new ObjectParameter("IsCancel", typeof(bool));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CommissionPeriodSearch_Select_Result>("usp_CommissionPeriodSearch_Select", payPeriodParameter, isWaitProcessParameter, isSentPayrollParameter, isSucessParameter, isCancelParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ClonePeriod_Select_Result> usp_ClonePeriod_Select(Nullable<System.DateTime> payPeriod)
        {
            var payPeriodParameter = payPeriod.HasValue ?
                new ObjectParameter("PayPeriod", payPeriod) :
                new ObjectParameter("PayPeriod", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ClonePeriod_Select_Result>("usp_ClonePeriod_Select", payPeriodParameter);
        }
    
        public virtual ObjectResult<usp_DataSourceMaster_Generate_Result> usp_DataSourceMaster_Generate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DataSourceMaster_Generate_Result>("usp_DataSourceMaster_Generate");
        }
    
        public virtual ObjectResult<usp_DataSourceMaster_Select_Result> usp_DataSourceMaster_Select(Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DataSourceMaster_Select_Result>("usp_DataSourceMaster_Select", indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_DataSourceMaster_Allowlist_Update_Result> usp_DataSourceMaster_Allowlist_Update(Nullable<int> dataSourceMasterId, string allowlist, string updatedBy)
        {
            var dataSourceMasterIdParameter = dataSourceMasterId.HasValue ?
                new ObjectParameter("DataSourceMasterId", dataSourceMasterId) :
                new ObjectParameter("DataSourceMasterId", typeof(int));
    
            var allowlistParameter = allowlist != null ?
                new ObjectParameter("Allowlist", allowlist) :
                new ObjectParameter("Allowlist", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DataSourceMaster_Allowlist_Update_Result>("usp_DataSourceMaster_Allowlist_Update", dataSourceMasterIdParameter, allowlistParameter, updatedByParameter);
        }
    
        public virtual ObjectResult<usp_Model_Description_Update_Result> usp_Model_Description_Update(Nullable<int> modelId, string description, string updatedBy)
        {
            var modelIdParameter = modelId.HasValue ?
                new ObjectParameter("ModelId", modelId) :
                new ObjectParameter("ModelId", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Model_Description_Update_Result>("usp_Model_Description_Update", modelIdParameter, descriptionParameter, updatedByParameter);
        }
    
        public virtual ObjectResult<usp_Model_Select_Result> usp_Model_Select(Nullable<int> modelId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var modelIdParameter = modelId.HasValue ?
                new ObjectParameter("ModelId", modelId) :
                new ObjectParameter("ModelId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Model_Select_Result>("usp_Model_Select", modelIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ModelParameterDescription_Generate_Result> usp_ModelParameterDescription_Generate(Nullable<int> modelId)
        {
            var modelIdParameter = modelId.HasValue ?
                new ObjectParameter("ModelId", modelId) :
                new ObjectParameter("ModelId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ModelParameterDescription_Generate_Result>("usp_ModelParameterDescription_Generate", modelIdParameter);
        }
    
        public virtual ObjectResult<usp_ModelParameterDescription_Select_Result> usp_ModelParameterDescription_Select(Nullable<int> modelId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var modelIdParameter = modelId.HasValue ?
                new ObjectParameter("ModelId", modelId) :
                new ObjectParameter("ModelId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ModelParameterDescription_Select_Result>("usp_ModelParameterDescription_Select", modelIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ModelParameterDescription_Update_Result> usp_ModelParameterDescription_Update(Nullable<int> modelParameterDescriptionId, string description, string updateBy)
        {
            var modelParameterDescriptionIdParameter = modelParameterDescriptionId.HasValue ?
                new ObjectParameter("ModelParameterDescriptionId", modelParameterDescriptionId) :
                new ObjectParameter("ModelParameterDescriptionId", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var updateByParameter = updateBy != null ?
                new ObjectParameter("UpdateBy", updateBy) :
                new ObjectParameter("UpdateBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ModelParameterDescription_Update_Result>("usp_ModelParameterDescription_Update", modelParameterDescriptionIdParameter, descriptionParameter, updateByParameter);
        }
    
        public virtual ObjectResult<usp_CommissionPeriod_GetLastedPeriod_Select_Result> usp_CommissionPeriod_GetLastedPeriod_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CommissionPeriod_GetLastedPeriod_Select_Result>("usp_CommissionPeriod_GetLastedPeriod_Select");
        }
    
        public virtual ObjectResult<usp_ModelDatasouce_Select_Result> usp_ModelDatasouce_Select(Nullable<int> periodId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var periodIdParameter = periodId.HasValue ?
                new ObjectParameter("PeriodId", periodId) :
                new ObjectParameter("PeriodId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ModelDatasouce_Select_Result>("usp_ModelDatasouce_Select", periodIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<string> usp_GetTableName()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_GetTableName");
        }
    
        public virtual ObjectResult<usp_ModelCalculationIndex_ReOrder_Update_Result> usp_ModelCalculationIndex_ReOrder_Update(Nullable<int> modelCalculationIndexId, Nullable<int> no, string updatedBy)
        {
            var modelCalculationIndexIdParameter = modelCalculationIndexId.HasValue ?
                new ObjectParameter("ModelCalculationIndexId", modelCalculationIndexId) :
                new ObjectParameter("ModelCalculationIndexId", typeof(int));
    
            var noParameter = no.HasValue ?
                new ObjectParameter("No", no) :
                new ObjectParameter("No", typeof(int));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ModelCalculationIndex_ReOrder_Update_Result>("usp_ModelCalculationIndex_ReOrder_Update", modelCalculationIndexIdParameter, noParameter, updatedByParameter);
        }
    
        public virtual ObjectResult<usp_ModelCalculationIndex_Select_Result> usp_ModelCalculationIndex_Select(Nullable<int> periodId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var periodIdParameter = periodId.HasValue ?
                new ObjectParameter("PeriodId", periodId) :
                new ObjectParameter("PeriodId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ModelCalculationIndex_Select_Result>("usp_ModelCalculationIndex_Select", periodIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ModelCalculationIndex_Delete_Result> usp_ModelCalculationIndex_Delete(Nullable<int> modelCalculationIndexId, string deletedBy)
        {
            var modelCalculationIndexIdParameter = modelCalculationIndexId.HasValue ?
                new ObjectParameter("ModelCalculationIndexId", modelCalculationIndexId) :
                new ObjectParameter("ModelCalculationIndexId", typeof(int));
    
            var deletedByParameter = deletedBy != null ?
                new ObjectParameter("DeletedBy", deletedBy) :
                new ObjectParameter("DeletedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ModelCalculationIndex_Delete_Result>("usp_ModelCalculationIndex_Delete", modelCalculationIndexIdParameter, deletedByParameter);
        }
    
        public virtual ObjectResult<usp_ParamValue_Select_Result> usp_ParamValue_Select(Nullable<int> periodId, string mainKey, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var periodIdParameter = periodId.HasValue ?
                new ObjectParameter("PeriodId", periodId) :
                new ObjectParameter("PeriodId", typeof(int));
    
            var mainKeyParameter = mainKey != null ?
                new ObjectParameter("MainKey", mainKey) :
                new ObjectParameter("MainKey", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ParamValue_Select_Result>("usp_ParamValue_Select", periodIdParameter, mainKeyParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_AppDetailPH_Select_Result> usp_AppDetailPH_Select(Nullable<int> periodId, string sale_Id1, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var periodIdParameter = periodId.HasValue ?
                new ObjectParameter("PeriodId", periodId) :
                new ObjectParameter("PeriodId", typeof(int));
    
            var sale_Id1Parameter = sale_Id1 != null ?
                new ObjectParameter("Sale_Id1", sale_Id1) :
                new ObjectParameter("Sale_Id1", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AppDetailPH_Select_Result>("usp_AppDetailPH_Select", periodIdParameter, sale_Id1Parameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_AppDetailHP_Select_Result> usp_AppDetailHP_Select(Nullable<int> periodId, string sale_Id1, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var periodIdParameter = periodId.HasValue ?
                new ObjectParameter("PeriodId", periodId) :
                new ObjectParameter("PeriodId", typeof(int));
    
            var sale_Id1Parameter = sale_Id1 != null ?
                new ObjectParameter("Sale_Id1", sale_Id1) :
                new ObjectParameter("Sale_Id1", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AppDetailHP_Select_Result>("usp_AppDetailHP_Select", periodIdParameter, sale_Id1Parameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_AppDetailPA30_Select_Result> usp_AppDetailPA30_Select(Nullable<int> periodId, string sale_Id1, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var periodIdParameter = periodId.HasValue ?
                new ObjectParameter("PeriodId", periodId) :
                new ObjectParameter("PeriodId", typeof(int));
    
            var sale_Id1Parameter = sale_Id1 != null ?
                new ObjectParameter("Sale_Id1", sale_Id1) :
                new ObjectParameter("Sale_Id1", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AppDetailPA30_Select_Result>("usp_AppDetailPA30_Select", periodIdParameter, sale_Id1Parameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_AppDetailPAcommunity_Select_Result> usp_AppDetailPAcommunity_Select(Nullable<int> periodId, string sale_Id1, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var periodIdParameter = periodId.HasValue ?
                new ObjectParameter("PeriodId", periodId) :
                new ObjectParameter("PeriodId", typeof(int));
    
            var sale_Id1Parameter = sale_Id1 != null ?
                new ObjectParameter("Sale_Id1", sale_Id1) :
                new ObjectParameter("Sale_Id1", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AppDetailPAcommunity_Select_Result>("usp_AppDetailPAcommunity_Select", periodIdParameter, sale_Id1Parameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_AppDetailPL_Select_Result> usp_AppDetailPL_Select(Nullable<int> periodId, string sale_Id1, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var periodIdParameter = periodId.HasValue ?
                new ObjectParameter("PeriodId", periodId) :
                new ObjectParameter("PeriodId", typeof(int));
    
            var sale_Id1Parameter = sale_Id1 != null ?
                new ObjectParameter("Sale_Id1", sale_Id1) :
                new ObjectParameter("Sale_Id1", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AppDetailPL_Select_Result>("usp_AppDetailPL_Select", periodIdParameter, sale_Id1Parameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_Lapse_Select_Result> usp_Lapse_Select(Nullable<int> periodId, string sale_Id1, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var periodIdParameter = periodId.HasValue ?
                new ObjectParameter("PeriodId", periodId) :
                new ObjectParameter("PeriodId", typeof(int));
    
            var sale_Id1Parameter = sale_Id1 != null ?
                new ObjectParameter("Sale_Id1", sale_Id1) :
                new ObjectParameter("Sale_Id1", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Lapse_Select_Result>("usp_Lapse_Select", periodIdParameter, sale_Id1Parameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_AppDetailMP_Select_Result> usp_AppDetailMP_Select(Nullable<int> periodId, string sale_Id1, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var periodIdParameter = periodId.HasValue ?
                new ObjectParameter("PeriodId", periodId) :
                new ObjectParameter("PeriodId", typeof(int));
    
            var sale_Id1Parameter = sale_Id1 != null ?
                new ObjectParameter("Sale_Id1", sale_Id1) :
                new ObjectParameter("Sale_Id1", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AppDetailMP_Select_Result>("usp_AppDetailMP_Select", periodIdParameter, sale_Id1Parameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_DatasourceImportedLog_Select_Result> usp_DatasourceImportedLog_Select(Nullable<int> periodId, string importBy, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var periodIdParameter = periodId.HasValue ?
                new ObjectParameter("PeriodId", periodId) :
                new ObjectParameter("PeriodId", typeof(int));
    
            var importByParameter = importBy != null ?
                new ObjectParameter("ImportBy", importBy) :
                new ObjectParameter("ImportBy", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DatasourceImportedLog_Select_Result>("usp_DatasourceImportedLog_Select", periodIdParameter, importByParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual int usp_GetDatasourceByTableNameAndPeriodId(string tableName, string period_Id)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            var period_IdParameter = period_Id != null ?
                new ObjectParameter("Period_Id", period_Id) :
                new ObjectParameter("Period_Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GetDatasourceByTableNameAndPeriodId", tableNameParameter, period_IdParameter);
        }
    
        public virtual ObjectResult<usp_DatasourceImportedEditCause_Select_Result> usp_DatasourceImportedEditCause_Select(Nullable<int> id, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DatasourceImportedEditCause_Select_Result>("usp_DatasourceImportedEditCause_Select", idParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_DatasourceImportedLog_Notify_Select_Result> usp_DatasourceImportedLog_Notify_Select(Nullable<int> periodId, string importBy, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var periodIdParameter = periodId.HasValue ?
                new ObjectParameter("PeriodId", periodId) :
                new ObjectParameter("PeriodId", typeof(int));
    
            var importByParameter = importBy != null ?
                new ObjectParameter("ImportBy", importBy) :
                new ObjectParameter("ImportBy", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DatasourceImportedLog_Notify_Select_Result>("usp_DatasourceImportedLog_Notify_Select", periodIdParameter, importByParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_DatasourceImportedLog_Notify_Update_Result> usp_DatasourceImportedLog_Notify_Update(Nullable<int> datasourceImportedLogId, Nullable<int> editCase_Id, string editRemark, string editBy)
        {
            var datasourceImportedLogIdParameter = datasourceImportedLogId.HasValue ?
                new ObjectParameter("DatasourceImportedLogId", datasourceImportedLogId) :
                new ObjectParameter("DatasourceImportedLogId", typeof(int));
    
            var editCase_IdParameter = editCase_Id.HasValue ?
                new ObjectParameter("EditCase_Id", editCase_Id) :
                new ObjectParameter("EditCase_Id", typeof(int));
    
            var editRemarkParameter = editRemark != null ?
                new ObjectParameter("EditRemark", editRemark) :
                new ObjectParameter("EditRemark", typeof(string));
    
            var editByParameter = editBy != null ?
                new ObjectParameter("EditBy", editBy) :
                new ObjectParameter("EditBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DatasourceImportedLog_Notify_Update_Result>("usp_DatasourceImportedLog_Notify_Update", datasourceImportedLogIdParameter, editCase_IdParameter, editRemarkParameter, editByParameter);
        }
    
        public virtual ObjectResult<usp_ApplyDesignerToCalculationIndex_Result> usp_ApplyDesignerToCalculationIndex(Nullable<int> designerModelId, Nullable<int> periodId, string createdBy)
        {
            var designerModelIdParameter = designerModelId.HasValue ?
                new ObjectParameter("DesignerModelId", designerModelId) :
                new ObjectParameter("DesignerModelId", typeof(int));
    
            var periodIdParameter = periodId.HasValue ?
                new ObjectParameter("PeriodId", periodId) :
                new ObjectParameter("PeriodId", typeof(int));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplyDesignerToCalculationIndex_Result>("usp_ApplyDesignerToCalculationIndex", designerModelIdParameter, periodIdParameter, createdByParameter);
        }
    
        public virtual ObjectResult<usp_ApplyDesignerToCalculationIndex_Select_Result> usp_ApplyDesignerToCalculationIndex_Select(Nullable<int> periodId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var periodIdParameter = periodId.HasValue ?
                new ObjectParameter("PeriodId", periodId) :
                new ObjectParameter("PeriodId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplyDesignerToCalculationIndex_Select_Result>("usp_ApplyDesignerToCalculationIndex_Select", periodIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_DesignModel_GetConfigForCreateSheet_Result> usp_DesignModel_GetConfigForCreateSheet(Nullable<int> designModelNameId)
        {
            var designModelNameIdParameter = designModelNameId.HasValue ?
                new ObjectParameter("DesignModelNameId", designModelNameId) :
                new ObjectParameter("DesignModelNameId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DesignModel_GetConfigForCreateSheet_Result>("usp_DesignModel_GetConfigForCreateSheet", designModelNameIdParameter);
        }
    
        public virtual int usp_ApplyDesignerToCalculationIndex_AlterColumn(Nullable<int> designerModel_Id)
        {
            var designerModel_IdParameter = designerModel_Id.HasValue ?
                new ObjectParameter("DesignerModel_Id", designerModel_Id) :
                new ObjectParameter("DesignerModel_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ApplyDesignerToCalculationIndex_AlterColumn", designerModel_IdParameter);
        }
    
        public virtual int usp_ApplyDesignerToCalculationIndex_CreateTable(Nullable<int> designerModel_Id)
        {
            var designerModel_IdParameter = designerModel_Id.HasValue ?
                new ObjectParameter("DesignerModel_Id", designerModel_Id) :
                new ObjectParameter("DesignerModel_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ApplyDesignerToCalculationIndex_CreateTable", designerModel_IdParameter);
        }
    
        public virtual int usp_CreateUpdateDesignerTable(Nullable<int> designerModelId)
        {
            var designerModelIdParameter = designerModelId.HasValue ?
                new ObjectParameter("DesignerModelId", designerModelId) :
                new ObjectParameter("DesignerModelId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CreateUpdateDesignerTable", designerModelIdParameter);
        }
    
        public virtual ObjectResult<usp_DatasourceImportedLogManual_Update_Result> usp_DatasourceImportedLogManual_Update(Nullable<int> periodId, Nullable<int> datasourceId, string updatedBy)
        {
            var periodIdParameter = periodId.HasValue ?
                new ObjectParameter("PeriodId", periodId) :
                new ObjectParameter("PeriodId", typeof(int));
    
            var datasourceIdParameter = datasourceId.HasValue ?
                new ObjectParameter("DatasourceId", datasourceId) :
                new ObjectParameter("DatasourceId", typeof(int));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DatasourceImportedLogManual_Update_Result>("usp_DatasourceImportedLogManual_Update", periodIdParameter, datasourceIdParameter, updatedByParameter);
        }
    
        public virtual int usp_DesignerModel_Delete(Nullable<int> designerModel_Id)
        {
            var designerModel_IdParameter = designerModel_Id.HasValue ?
                new ObjectParameter("DesignerModel_Id", designerModel_Id) :
                new ObjectParameter("DesignerModel_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DesignerModel_Delete", designerModel_IdParameter);
        }
    
        public virtual int usp_DesignModel_ClearDatasource(Nullable<int> designerModel_Id)
        {
            var designerModel_IdParameter = designerModel_Id.HasValue ?
                new ObjectParameter("DesignerModel_Id", designerModel_Id) :
                new ObjectParameter("DesignerModel_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DesignModel_ClearDatasource", designerModel_IdParameter);
        }
    
        public virtual ObjectResult<usp_DesignModel_Configuration_Datatable_Result> usp_DesignModel_Configuration_Datatable(string criteria, Nullable<int> pageStart, Nullable<int> pageSize, string sortField, string orderType, Nullable<int> designModel_Id)
        {
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            var pageStartParameter = pageStart.HasValue ?
                new ObjectParameter("PageStart", pageStart) :
                new ObjectParameter("PageStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var designModel_IdParameter = designModel_Id.HasValue ?
                new ObjectParameter("DesignModel_Id", designModel_Id) :
                new ObjectParameter("DesignModel_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DesignModel_Configuration_Datatable_Result>("usp_DesignModel_Configuration_Datatable", criteriaParameter, pageStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, designModel_IdParameter);
        }
    
        public virtual ObjectResult<usp_DesignModel_Datasource_Get_Result> usp_DesignModel_Datasource_Get(Nullable<int> desingerModel_Id)
        {
            var desingerModel_IdParameter = desingerModel_Id.HasValue ?
                new ObjectParameter("DesingerModel_Id", desingerModel_Id) :
                new ObjectParameter("DesingerModel_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DesignModel_Datasource_Get_Result>("usp_DesignModel_Datasource_Get", desingerModel_IdParameter);
        }
    
        public virtual ObjectResult<string> usp_DesignModel_GetMainKey(string mainkeyDatasourceName)
        {
            var mainkeyDatasourceNameParameter = mainkeyDatasourceName != null ?
                new ObjectParameter("MainkeyDatasourceName", mainkeyDatasourceName) :
                new ObjectParameter("MainkeyDatasourceName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_DesignModel_GetMainKey", mainkeyDatasourceNameParameter);
        }
    
        public virtual ObjectResult<usp_DesignModel_Parameter_Datatable_Result> usp_DesignModel_Parameter_Datatable(string criteria, Nullable<int> pageStart, Nullable<int> pageSize, string sortField, string orderType, Nullable<int> designModel_Id)
        {
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            var pageStartParameter = pageStart.HasValue ?
                new ObjectParameter("PageStart", pageStart) :
                new ObjectParameter("PageStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var designModel_IdParameter = designModel_Id.HasValue ?
                new ObjectParameter("DesignModel_Id", designModel_Id) :
                new ObjectParameter("DesignModel_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DesignModel_Parameter_Datatable_Result>("usp_DesignModel_Parameter_Datatable", criteriaParameter, pageStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, designModel_IdParameter);
        }
    
        public virtual int usp_DesignModel_ReCalculate(Nullable<int> designerModel_Id)
        {
            var designerModel_IdParameter = designerModel_Id.HasValue ?
                new ObjectParameter("DesignerModel_Id", designerModel_Id) :
                new ObjectParameter("DesignerModel_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DesignModel_ReCalculate", designerModel_IdParameter);
        }
    
        public virtual ObjectResult<usp_GetCommissionPeriod_Result> usp_GetCommissionPeriod(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCommissionPeriod_Result>("usp_GetCommissionPeriod", idParameter);
        }
    
        public virtual ObjectResult<usp_GetConfigForCreateSheet_Result> usp_GetConfigForCreateSheet(Nullable<int> period_id, string modelName)
        {
            var period_idParameter = period_id.HasValue ?
                new ObjectParameter("period_id", period_id) :
                new ObjectParameter("period_id", typeof(int));
    
            var modelNameParameter = modelName != null ?
                new ObjectParameter("ModelName", modelName) :
                new ObjectParameter("ModelName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetConfigForCreateSheet_Result>("usp_GetConfigForCreateSheet", period_idParameter, modelNameParameter);
        }
    
        public virtual ObjectResult<string> usp_GetDatasourceTableName()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_GetDatasourceTableName");
        }
    
        public virtual int usp_SaveCalculatedParams(Nullable<int> period_Id)
        {
            var period_IdParameter = period_Id.HasValue ?
                new ObjectParameter("Period_Id", period_Id) :
                new ObjectParameter("Period_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SaveCalculatedParams", period_IdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_GetAvailablePeriodForDesigner(string tableName)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_GetAvailablePeriodForDesigner", tableNameParameter);
        }
    
        public virtual ObjectResult<usp_DesignModel_Datatable_Result1> usp_DesignModel_Datatable(string criteria, Nullable<int> pageStart, Nullable<int> pageSize, string sortField, string orderType)
        {
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            var pageStartParameter = pageStart.HasValue ?
                new ObjectParameter("PageStart", pageStart) :
                new ObjectParameter("PageStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DesignModel_Datatable_Result1>("usp_DesignModel_Datatable", criteriaParameter, pageStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter);
        }
    }
}
