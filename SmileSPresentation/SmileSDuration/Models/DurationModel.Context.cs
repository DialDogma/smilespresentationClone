//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmileSDuration.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DurationV1Entities : DbContext
    {
        public DurationV1Entities()
            : base("name=DurationV1Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Comunicate> Comunicate { get; set; }
        public virtual DbSet<ComunicateAnalytic> ComunicateAnalytic { get; set; }
        public virtual DbSet<ComunicateType> ComunicateType { get; set; }
        public virtual DbSet<TempImportDetail> TempImportDetail { get; set; }
        public virtual DbSet<TempImportHeader> TempImportHeader { get; set; }
    
        public virtual ObjectResult<usp_TempImportDetail_Select_Result> usp_TempImportDetail_Select(Nullable<int> tempImportHeaderID, Nullable<int> pageStart, Nullable<int> pageSize, string sortField, string orderType, string search)
        {
            var tempImportHeaderIDParameter = tempImportHeaderID.HasValue ?
                new ObjectParameter("TempImportHeaderID", tempImportHeaderID) :
                new ObjectParameter("TempImportHeaderID", typeof(int));
    
            var pageStartParameter = pageStart.HasValue ?
                new ObjectParameter("PageStart", pageStart) :
                new ObjectParameter("PageStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TempImportDetail_Select_Result>("usp_TempImportDetail_Select", tempImportHeaderIDParameter, pageStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchParameter);
        }
    
        public virtual int usp_TempImportHeader_Insert(Nullable<int> tempImportHeaderID)
        {
            var tempImportHeaderIDParameter = tempImportHeaderID.HasValue ?
                new ObjectParameter("TempImportHeaderID", tempImportHeaderID) :
                new ObjectParameter("TempImportHeaderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_TempImportHeader_Insert", tempImportHeaderIDParameter);
        }
    
        public virtual ObjectResult<usp_Comunicate_Select_Result> usp_Comunicate_Select(Nullable<int> pageStart, Nullable<int> pageSize, string sortField, string orderType, string search, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> sMSTypeID, Nullable<int> transactionStatusID, Nullable<int> transactionDetailStatusID)
        {
            var pageStartParameter = pageStart.HasValue ?
                new ObjectParameter("PageStart", pageStart) :
                new ObjectParameter("PageStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var sMSTypeIDParameter = sMSTypeID.HasValue ?
                new ObjectParameter("SMSTypeID", sMSTypeID) :
                new ObjectParameter("SMSTypeID", typeof(int));
    
            var transactionStatusIDParameter = transactionStatusID.HasValue ?
                new ObjectParameter("TransactionStatusID", transactionStatusID) :
                new ObjectParameter("TransactionStatusID", typeof(int));
    
            var transactionDetailStatusIDParameter = transactionDetailStatusID.HasValue ?
                new ObjectParameter("TransactionDetailStatusID", transactionDetailStatusID) :
                new ObjectParameter("TransactionDetailStatusID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Comunicate_Select_Result>("usp_Comunicate_Select", pageStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchParameter, startDateParameter, endDateParameter, sMSTypeIDParameter, transactionStatusIDParameter, transactionDetailStatusIDParameter);
        }
    
        public virtual int usp_ComunicateAnalytic_Insert(Nullable<int> comnuicateID, string iP)
        {
            var comnuicateIDParameter = comnuicateID.HasValue ?
                new ObjectParameter("ComnuicateID", comnuicateID) :
                new ObjectParameter("ComnuicateID", typeof(int));
    
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ComunicateAnalytic_Insert", comnuicateIDParameter, iPParameter);
        }
    
        public virtual ObjectResult<usp_Preview_Select_Result> usp_Preview_Select(Nullable<int> tempImportHeaderID, Nullable<int> pageStart, Nullable<int> pageSize, string sortField, string orderType)
        {
            var tempImportHeaderIDParameter = tempImportHeaderID.HasValue ?
                new ObjectParameter("TempImportHeaderID", tempImportHeaderID) :
                new ObjectParameter("TempImportHeaderID", typeof(int));
    
            var pageStartParameter = pageStart.HasValue ?
                new ObjectParameter("PageStart", pageStart) :
                new ObjectParameter("PageStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Preview_Select_Result>("usp_Preview_Select", tempImportHeaderIDParameter, pageStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter);
        }
    
        public virtual int usp_ComunicateURL_Update(Nullable<int> comunicateID, string uRL)
        {
            var comunicateIDParameter = comunicateID.HasValue ?
                new ObjectParameter("ComunicateID", comunicateID) :
                new ObjectParameter("ComunicateID", typeof(int));
    
            var uRLParameter = uRL != null ?
                new ObjectParameter("URL", uRL) :
                new ObjectParameter("URL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ComunicateURL_Update", comunicateIDParameter, uRLParameter);
        }
    
        public virtual int usp_TempImportDetail_Insert(Nullable<int> tempImportHeaderID, string comunicateCode, Nullable<int> comunicateTypeID, string appID, string customerName, string payerName, Nullable<decimal> amount, Nullable<decimal> amountTotal, string mobilePhoneNo, string message, string letterDate, string periodOwe, string dateRange, string dueDate, string endCoverDate, string dateOwe, string uRL, string refNo)
        {
            var tempImportHeaderIDParameter = tempImportHeaderID.HasValue ?
                new ObjectParameter("TempImportHeaderID", tempImportHeaderID) :
                new ObjectParameter("TempImportHeaderID", typeof(int));
    
            var comunicateCodeParameter = comunicateCode != null ?
                new ObjectParameter("ComunicateCode", comunicateCode) :
                new ObjectParameter("ComunicateCode", typeof(string));
    
            var comunicateTypeIDParameter = comunicateTypeID.HasValue ?
                new ObjectParameter("ComunicateTypeID", comunicateTypeID) :
                new ObjectParameter("ComunicateTypeID", typeof(int));
    
            var appIDParameter = appID != null ?
                new ObjectParameter("AppID", appID) :
                new ObjectParameter("AppID", typeof(string));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var payerNameParameter = payerName != null ?
                new ObjectParameter("PayerName", payerName) :
                new ObjectParameter("PayerName", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var amountTotalParameter = amountTotal.HasValue ?
                new ObjectParameter("AmountTotal", amountTotal) :
                new ObjectParameter("AmountTotal", typeof(decimal));
    
            var mobilePhoneNoParameter = mobilePhoneNo != null ?
                new ObjectParameter("MobilePhoneNo", mobilePhoneNo) :
                new ObjectParameter("MobilePhoneNo", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var letterDateParameter = letterDate != null ?
                new ObjectParameter("LetterDate", letterDate) :
                new ObjectParameter("LetterDate", typeof(string));
    
            var periodOweParameter = periodOwe != null ?
                new ObjectParameter("PeriodOwe", periodOwe) :
                new ObjectParameter("PeriodOwe", typeof(string));
    
            var dateRangeParameter = dateRange != null ?
                new ObjectParameter("DateRange", dateRange) :
                new ObjectParameter("DateRange", typeof(string));
    
            var dueDateParameter = dueDate != null ?
                new ObjectParameter("DueDate", dueDate) :
                new ObjectParameter("DueDate", typeof(string));
    
            var endCoverDateParameter = endCoverDate != null ?
                new ObjectParameter("EndCoverDate", endCoverDate) :
                new ObjectParameter("EndCoverDate", typeof(string));
    
            var dateOweParameter = dateOwe != null ?
                new ObjectParameter("DateOwe", dateOwe) :
                new ObjectParameter("DateOwe", typeof(string));
    
            var uRLParameter = uRL != null ?
                new ObjectParameter("URL", uRL) :
                new ObjectParameter("URL", typeof(string));
    
            var refNoParameter = refNo != null ?
                new ObjectParameter("RefNo", refNo) :
                new ObjectParameter("RefNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_TempImportDetail_Insert", tempImportHeaderIDParameter, comunicateCodeParameter, comunicateTypeIDParameter, appIDParameter, customerNameParameter, payerNameParameter, amountParameter, amountTotalParameter, mobilePhoneNoParameter, messageParameter, letterDateParameter, periodOweParameter, dateRangeParameter, dueDateParameter, endCoverDateParameter, dateOweParameter, uRLParameter, refNoParameter);
        }
    
        public virtual ObjectResult<usp_TempImportDetailV2_Select_Result> usp_TempImportDetailV2_Select(Nullable<int> tempImportHeaderID)
        {
            var tempImportHeaderIDParameter = tempImportHeaderID.HasValue ?
                new ObjectParameter("TempImportHeaderID", tempImportHeaderID) :
                new ObjectParameter("TempImportHeaderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TempImportDetailV2_Select_Result>("usp_TempImportDetailV2_Select", tempImportHeaderIDParameter);
        }
    
        public virtual ObjectResult<usp_TempImportHeaderV2_Insert_Result> usp_TempImportHeaderV2_Insert()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TempImportHeaderV2_Insert_Result>("usp_TempImportHeaderV2_Insert");
        }
    
        public virtual ObjectResult<usp_PreviewV2_Select_Result> usp_PreviewV2_Select(Nullable<int> tempImportHeaderID)
        {
            var tempImportHeaderIDParameter = tempImportHeaderID.HasValue ?
                new ObjectParameter("TempImportHeaderID", tempImportHeaderID) :
                new ObjectParameter("TempImportHeaderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PreviewV2_Select_Result>("usp_PreviewV2_Select", tempImportHeaderIDParameter);
        }
    
        public virtual ObjectResult<usp_ComunicateByComunicateID_Select_Result> usp_ComunicateByComunicateID_Select(Nullable<int> comunicateID)
        {
            var comunicateIDParameter = comunicateID.HasValue ?
                new ObjectParameter("ComunicateID", comunicateID) :
                new ObjectParameter("ComunicateID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ComunicateByComunicateID_Select_Result>("usp_ComunicateByComunicateID_Select", comunicateIDParameter);
        }
    
        public virtual ObjectResult<usp_ComunicateByTempImportHeaderID_Select_Result> usp_ComunicateByTempImportHeaderID_Select(Nullable<int> tempImportHeaderID)
        {
            var tempImportHeaderIDParameter = tempImportHeaderID.HasValue ?
                new ObjectParameter("TempImportHeaderID", tempImportHeaderID) :
                new ObjectParameter("TempImportHeaderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ComunicateByTempImportHeaderID_Select_Result>("usp_ComunicateByTempImportHeaderID_Select", tempImportHeaderIDParameter);
        }
    
        public virtual int usp_ComunicateTransactionByComunicateID_Update(Nullable<int> comunicateID, Nullable<int> transactionID)
        {
            var comunicateIDParameter = comunicateID.HasValue ?
                new ObjectParameter("ComunicateID", comunicateID) :
                new ObjectParameter("ComunicateID", typeof(int));
    
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ComunicateTransactionByComunicateID_Update", comunicateIDParameter, transactionIDParameter);
        }
    
        public virtual ObjectResult<usp_ComunicateByTempImportHeaderID_ForDisclosureSMS_Select_Result> usp_ComunicateByTempImportHeaderID_ForDisclosureSMS_Select(Nullable<int> tempImportHeaderID)
        {
            var tempImportHeaderIDParameter = tempImportHeaderID.HasValue ?
                new ObjectParameter("TempImportHeaderID", tempImportHeaderID) :
                new ObjectParameter("TempImportHeaderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ComunicateByTempImportHeaderID_ForDisclosureSMS_Select_Result>("usp_ComunicateByTempImportHeaderID_ForDisclosureSMS_Select", tempImportHeaderIDParameter);
        }
    
        public virtual ObjectResult<usp_ComunicateSearchSMS_Select_Result> usp_ComunicateSearchSMS_Select(Nullable<int> sMSTypeId, string mobilePhoneNo, Nullable<System.DateTime> createdDateFrom, Nullable<System.DateTime> createdDateTo, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var sMSTypeIdParameter = sMSTypeId.HasValue ?
                new ObjectParameter("SMSTypeId", sMSTypeId) :
                new ObjectParameter("SMSTypeId", typeof(int));
    
            var mobilePhoneNoParameter = mobilePhoneNo != null ?
                new ObjectParameter("MobilePhoneNo", mobilePhoneNo) :
                new ObjectParameter("MobilePhoneNo", typeof(string));
    
            var createdDateFromParameter = createdDateFrom.HasValue ?
                new ObjectParameter("CreatedDateFrom", createdDateFrom) :
                new ObjectParameter("CreatedDateFrom", typeof(System.DateTime));
    
            var createdDateToParameter = createdDateTo.HasValue ?
                new ObjectParameter("CreatedDateTo", createdDateTo) :
                new ObjectParameter("CreatedDateTo", typeof(System.DateTime));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ComunicateSearchSMS_Select_Result>("usp_ComunicateSearchSMS_Select", sMSTypeIdParameter, mobilePhoneNoParameter, createdDateFromParameter, createdDateToParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_TempPAPayment_Select_Result> usp_TempPAPayment_Select(string applicattionCode)
        {
            var applicattionCodeParameter = applicattionCode != null ?
                new ObjectParameter("ApplicattionCode", applicattionCode) :
                new ObjectParameter("ApplicattionCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TempPAPayment_Select_Result>("usp_TempPAPayment_Select", applicattionCodeParameter);
        }
    
        public virtual ObjectResult<usp_TempPA_SelectV2_Result> usp_TempPA_SelectV2(Nullable<int> sMSDetailId, string iPAddress)
        {
            var sMSDetailIdParameter = sMSDetailId.HasValue ?
                new ObjectParameter("SMSDetailId", sMSDetailId) :
                new ObjectParameter("SMSDetailId", typeof(int));
    
            var iPAddressParameter = iPAddress != null ?
                new ObjectParameter("IPAddress", iPAddress) :
                new ObjectParameter("IPAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TempPA_SelectV2_Result>("usp_TempPA_SelectV2", sMSDetailIdParameter, iPAddressParameter);
        }
    
        public virtual ObjectResult<usp_Comunicate_Select_V3_Result> usp_Comunicate_Select_V3(Nullable<int> pageStart, Nullable<int> pageSize, string sortField, string orderType, string search, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> comunicateType_ID)
        {
            var pageStartParameter = pageStart.HasValue ?
                new ObjectParameter("PageStart", pageStart) :
                new ObjectParameter("PageStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var comunicateType_IDParameter = comunicateType_ID.HasValue ?
                new ObjectParameter("ComunicateType_ID", comunicateType_ID) :
                new ObjectParameter("ComunicateType_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Comunicate_Select_V3_Result>("usp_Comunicate_Select_V3", pageStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchParameter, startDateParameter, endDateParameter, comunicateType_IDParameter);
        }
    
        public virtual ObjectResult<usp_ComunicateType_Select_Result> usp_ComunicateType_Select(Nullable<int> comunicateType_ID)
        {
            var comunicateType_IDParameter = comunicateType_ID.HasValue ?
                new ObjectParameter("ComunicateType_ID", comunicateType_ID) :
                new ObjectParameter("ComunicateType_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ComunicateType_Select_Result>("usp_ComunicateType_Select", comunicateType_IDParameter);
        }
    
        public virtual ObjectResult<usp_PaySlipDetail_Select_Result> usp_PaySlipDetail_Select(string durationMessageCode)
        {
            var durationMessageCodeParameter = durationMessageCode != null ?
                new ObjectParameter("DurationMessageCode", durationMessageCode) :
                new ObjectParameter("DurationMessageCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PaySlipDetail_Select_Result>("usp_PaySlipDetail_Select", durationMessageCodeParameter);
        }
    
        public virtual ObjectResult<usp_PaySlipHeader_Select_Result> usp_PaySlipHeader_Select(string durationMessageCode)
        {
            var durationMessageCodeParameter = durationMessageCode != null ?
                new ObjectParameter("DurationMessageCode", durationMessageCode) :
                new ObjectParameter("DurationMessageCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PaySlipHeader_Select_Result>("usp_PaySlipHeader_Select", durationMessageCodeParameter);
        }
    }
}
