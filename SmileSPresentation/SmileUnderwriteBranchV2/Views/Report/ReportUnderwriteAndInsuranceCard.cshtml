@{
    ViewBag.Title = "รายงานคัดกรองและมอบบัตรประกัน";
    Layout = "~/Views/Shared/_LayoutForTopIndexPH.cshtml";
}
<style>
    #chart {
        max-width: 760px;
        margin: 35px auto;
        opacity: 0.9;
    }
</style>
<div class="row" style="margin-top: 25px">
    <div class="col-sm-12 col-md-12">
        <div class="box box-success">
            <div class="box-header">
                <h4 class=" text-center">รายงานการมอบบัตร</h4>
            </div>
            <div class="box-body">
                <div class="form-group row">
                    <div class="col-sm-12 col-md-offset-1 col-md-3">
                        <label class="control-label">งวดความคุ้มครอง:</label>
                        <select class="form-control" id="select_period">
                            <option value="-1">----กรุณาเลือก----</option>
                            @foreach (var itm in ViewBag.PeriodList)
                            {
                                <option value="@itm.Value.ToString("yyyy-MM-dd")"> @itm.Display</option>
                            }
                        </select>
                    </div>
                    <div class="col-sm-12 col-md-3 pull-right">
                        <label class="control-label">Download Excel:</label>
                        <button type="button" class="btn btn-block btn-success" id="btnDownloadExcel"
                                onclick="getDownloadLink()" disabled="disabled">
                            Download
                        </button>
                    </div>
                </div>
              @*  <div class="form-group row" id="chartform">
                    <div class="col-sm-12 col-md-12">
                        <div id="chart"></div>
                    </div>
                </div>
                <div class="form-group row" id="noData">
                    <div class="col-sm-12 col-md-12">
                        <h4 class="text-red text-center">---ไม่พบข้อมูล---</h4>
                    </div>
                </div>*@
            </div>
        </div>
    </div>
</div>
@section ViewSpecificJavascript
{
    <script type="text/javascript">
        let resultArray;

        $(function () {
            $('#noData').hide();
            $('#chartform').hide();

            //GetResultJsonForChart();

            //setTimeout(() => {
            //    RenderChart();
            //}, 1000);

            $('#select_period').change((e) => {
                if ($('#select_period').val() != -1) {
                    e.preventDefault();
                    $('#btnDownloadExcel').prop('disabled', false);
                    resultArray = null;

                 @*   GetResultJsonForChart();
                    setTimeout(() => {
                        RenderChart();
                    }, 1000);*@

                } else {
                    $('#btnDownloadExcel').prop('disabled', true);
                }

            });

        });


  @*    const GetResultJsonForChart = () => {

            $.get('@Url.Action("GetReportForChart","Report")', { period: $('#select_period').val() }, (data) => {
                if (data != null) {
                    var result = data.QueueStatusChart;
                    var resultString = result.split(',');
                    for (var i = 0; i < resultString.length; i++) {
                        resultString[i] = +resultString[i];
                    }
                    resultArray = resultString;
                    $('#chartform').show();
                    $('#noData').hide();
                } else {
                    resultArray = null;
                }
            }).fail(function() {
                $('#noData').show();
                $('#chartform').hide();
                $('#btnDownloadExcel').prop('disabled', true);
            });
        }*@
@*
        const RenderChart = () => {
            $('#chart').empty();
            var options = {
                chart: {
                    type: 'donut',
                    width: "100%",
                    height: 380
                },
                dataLabels: {
                    enabled: true,
                    formatter: function (val,opts) {
                        return opts.w.config.series[opts.seriesIndex]
                    }
                },
                labels: ['ยังไม่ได้คัดกรอง',
                    'โทรคัดกรองและมอบบัตรภายหลัง',
                    'โทรคัดกรองและมอบบัตรแล้ว',
                    'เข้าพบคัดกรองและมอบบัตร',
                    'ไม่ผ่านคัดกรอง',
                    'ยกเลิกก่อน Dcr',
                'ยังไม่ได้ดำเนินการ'],
                colors: ['#4169E1', '#00FA9A', '#FFD700', '#FA8072', '#BA55D3', '#F44336', '#A8ABAB'],
                series: resultArray,
                plotOptions: {
                    pie: {
                        donut: {
                            labels: {
                                show: true,
                                name: {
                                    show: true,

                                },
                                value: {
                                    show: true,
                                },
                                total: {
                                    show: true,
                                }
                            }
                        }
                    }
                },
                responsive: [
                    {
                        breakpoint: 1000,
                        options: {
                            legend: {
                                position: "bottom"
                            }
                        }
                    }
                ]
            }
            var chart = new ApexCharts(document.querySelector("#chart"), options);
            chart.render();
        }*@

        const getDownloadLink = () => {
            window.location.href = `@Url.Action("ExportReportQueueDirector","Report")?period=` + $('#select_period').val();
        }

        @*function getDownloadLink(data) {
                loadingSpinner('fadeIn', 999999);
                $.ajax({
                    url: "@Url.Action("ExportReportQueueDirector", "Report")",
                    type: "POST",
                    data: {
                        period: $('#select_period').val()
                    },
                    success: function (data) {
                          if (data.IsResult == false) {
                            loadingSpinner('fadeOut');
                            swal("ผลการค้นหา", data.Msg, "warning", function (e) {
                                swal.close();
                                return false;
                            });
                          } else {
                              let reportName = "รายงานการคัดกรองและมอบบัตรประกัน";
                            window.location = `@Url.Action("Download")?reportName=${reportName}`;
                            loadingSpinner('fadeOut');
                        }
                    },
                     error: function (jqXHR, exception) {
                         checkXHRStatus(jqXHR.status);
                         loadingSpinner('fadeOut');
                     }
                });
        }
        function checkXHRStatus(xhrStatus) {
           var msg = '';
              if (xhrStatus === 0) {
                  msg = 'Not connect.\n Verify Network.';
              } else if (jqXHR.status == 404) {
                  msg = 'Requested page not found. [404]';
              } else if (jqXHR.status == 500) {
                  msg = 'Internal Server Error [500].';
              } else if (exception === 'parsererror') {
                  msg = 'Requested JSON parse failed.';
              } else if (exception === 'timeout') {
                  msg = 'Time out error.';
              } else if (exception === 'abort') {
                  msg = 'Ajax request aborted.';
              } else {
                  msg = 'Uncaught Error.\n' + jqXHR.responseText;
            }
            swal("ไม่สำเร็จ", msg, "error");
        }*@
    </script>
}