//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmileSCriticalIllness.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CriticalIllnessEntities : DbContext
    {
        public CriticalIllnessEntities()
            : base("name=CriticalIllnessEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Address> Address { get; set; }
        public virtual DbSet<Application> Application { get; set; }
        public virtual DbSet<ApplicationMemo> ApplicationMemo { get; set; }
        public virtual DbSet<ApplicationOwner> ApplicationOwner { get; set; }
        public virtual DbSet<ApplicationOwnerType> ApplicationOwnerType { get; set; }
        public virtual DbSet<ApplicationPolicy> ApplicationPolicy { get; set; }
        public virtual DbSet<ApplicationStatus> ApplicationStatus { get; set; }
        public virtual DbSet<ApplicationUnderwriteStatus> ApplicationUnderwriteStatus { get; set; }
        public virtual DbSet<ApproveCause> ApproveCause { get; set; }
        public virtual DbSet<ApproveStatus> ApproveStatus { get; set; }
        public virtual DbSet<CancelCause> CancelCause { get; set; }
        public virtual DbSet<CovidApplication> CovidApplication { get; set; }
        public virtual DbSet<CovidApplicationStatus> CovidApplicationStatus { get; set; }
        public virtual DbSet<Questionaire> Questionaire { get; set; }
        public virtual DbSet<RequestCancel> RequestCancel { get; set; }
        public virtual DbSet<UDWCovidApplicationDetail> UDWCovidApplicationDetail { get; set; }
        public virtual DbSet<UDWCovidApplicationHeader> UDWCovidApplicationHeader { get; set; }
        public virtual DbSet<CovidApplicationView> CovidApplicationView { get; set; }
        public virtual DbSet<Disclosure> Disclosure { get; set; }
        public virtual DbSet<DisclosureLog> DisclosureLog { get; set; }
        public virtual DbSet<DisclosureStatus> DisclosureStatus { get; set; }
        public virtual DbSet<Document> Document { get; set; }
        public virtual DbSet<DocumentFileControlApplication> DocumentFileControlApplication { get; set; }
        public virtual DbSet<DocumentFileControlBatchLogDetail> DocumentFileControlBatchLogDetail { get; set; }
        public virtual DbSet<DocumentFileControlBatchLogHeader> DocumentFileControlBatchLogHeader { get; set; }
        public virtual DbSet<DocumentFileControlDetail> DocumentFileControlDetail { get; set; }
        public virtual DbSet<DocumentFileControlHeader> DocumentFileControlHeader { get; set; }
        public virtual DbSet<ProgramConfig> ProgramConfig { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<TransactionCodeControl> TransactionCodeControl { get; set; }
        public virtual DbSet<TransactionCodeControlType> TransactionCodeControlType { get; set; }
        public virtual DbSet<WebService> WebService { get; set; }
        public virtual DbSet<WebServiceLog> WebServiceLog { get; set; }
        public virtual DbSet<CovidDebt> CovidDebt { get; set; }
        public virtual DbSet<CovidDebtReceive> CovidDebtReceive { get; set; }
        public virtual DbSet<Dept> Dept { get; set; }
        public virtual DbSet<DeptReceive> DeptReceive { get; set; }
        public virtual DbSet<PersonRelateApplication> PersonRelateApplication { get; set; }
        public virtual DbSet<TrAppDetail> TrAppDetail { get; set; }
        public virtual DbSet<TrAppHeader> TrAppHeader { get; set; }
        public virtual DbSet<ApplicationTransaction> ApplicationTransaction { get; set; }
        public virtual DbSet<ApplicationTransactionDetail> ApplicationTransactionDetail { get; set; }
        public virtual DbSet<CovidApplicationTransactionDetail> CovidApplicationTransactionDetail { get; set; }
        public virtual DbSet<CovidApplicationTransactionHeader> CovidApplicationTransactionHeader { get; set; }
        public virtual DbSet<TransactionUdw> TransactionUdw { get; set; }
        public virtual DbSet<UdwUnApproveCause> UdwUnApproveCause { get; set; }
        public virtual DbSet<UdwUnApproveCauseType> UdwUnApproveCauseType { get; set; }
        public virtual DbSet<vw_Covid_Short> vw_Covid_Short { get; set; }
        public virtual DbSet<vwcsh_Lookup_CancerNewApp> vwcsh_Lookup_CancerNewApp { get; set; }
        public virtual DbSet<vwcsh_Lookup_CancerReNew> vwcsh_Lookup_CancerReNew { get; set; }
        public virtual DbSet<vwcsh_Lookup_Covid> vwcsh_Lookup_Covid { get; set; }
    
        public virtual ObjectResult<usp_ApplicationMemo_Delete_Result> usp_ApplicationMemo_Delete(Nullable<int> applicationMemoId, Nullable<int> updatedByUserId)
        {
            var applicationMemoIdParameter = applicationMemoId.HasValue ?
                new ObjectParameter("ApplicationMemoId", applicationMemoId) :
                new ObjectParameter("ApplicationMemoId", typeof(int));
    
            var updatedByUserIdParameter = updatedByUserId.HasValue ?
                new ObjectParameter("UpdatedByUserId", updatedByUserId) :
                new ObjectParameter("UpdatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationMemo_Delete_Result>("usp_ApplicationMemo_Delete", applicationMemoIdParameter, updatedByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationMemo_Insert_Result> usp_ApplicationMemo_Insert(Nullable<int> applicationId, Nullable<int> memoTypeId, string memoText, Nullable<int> createdByUserId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var memoTypeIdParameter = memoTypeId.HasValue ?
                new ObjectParameter("MemoTypeId", memoTypeId) :
                new ObjectParameter("MemoTypeId", typeof(int));
    
            var memoTextParameter = memoText != null ?
                new ObjectParameter("MemoText", memoText) :
                new ObjectParameter("MemoText", typeof(string));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationMemo_Insert_Result>("usp_ApplicationMemo_Insert", applicationIdParameter, memoTypeIdParameter, memoTextParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationMemo_Select_Result> usp_ApplicationMemo_Select(Nullable<int> applicatonId, Nullable<int> memoTypeId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicatonIdParameter = applicatonId.HasValue ?
                new ObjectParameter("ApplicatonId", applicatonId) :
                new ObjectParameter("ApplicatonId", typeof(int));
    
            var memoTypeIdParameter = memoTypeId.HasValue ?
                new ObjectParameter("MemoTypeId", memoTypeId) :
                new ObjectParameter("MemoTypeId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationMemo_Select_Result>("usp_ApplicationMemo_Select", applicatonIdParameter, memoTypeIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationMemo_Update_Result> usp_ApplicationMemo_Update(Nullable<int> applicationMemoId, string memoText, Nullable<int> memoTypeId, Nullable<int> createdByUserId)
        {
            var applicationMemoIdParameter = applicationMemoId.HasValue ?
                new ObjectParameter("ApplicationMemoId", applicationMemoId) :
                new ObjectParameter("ApplicationMemoId", typeof(int));
    
            var memoTextParameter = memoText != null ?
                new ObjectParameter("MemoText", memoText) :
                new ObjectParameter("MemoText", typeof(string));
    
            var memoTypeIdParameter = memoTypeId.HasValue ?
                new ObjectParameter("MemoTypeId", memoTypeId) :
                new ObjectParameter("MemoTypeId", typeof(int));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationMemo_Update_Result>("usp_ApplicationMemo_Update", applicationMemoIdParameter, memoTextParameter, memoTypeIdParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationStatus_Select_Result> usp_ApplicationStatus_Select(Nullable<int> applicationStatusId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationStatusIdParameter = applicationStatusId.HasValue ?
                new ObjectParameter("ApplicationStatusId", applicationStatusId) :
                new ObjectParameter("ApplicationStatusId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationStatus_Select_Result>("usp_ApplicationStatus_Select", applicationStatusIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationUnderwriteStatus_Select_Result> usp_ApplicationUnderwriteStatus_Select(Nullable<int> applicationUnderwriteStatusId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationUnderwriteStatusIdParameter = applicationUnderwriteStatusId.HasValue ?
                new ObjectParameter("ApplicationUnderwriteStatusId", applicationUnderwriteStatusId) :
                new ObjectParameter("ApplicationUnderwriteStatusId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationUnderwriteStatus_Select_Result>("usp_ApplicationUnderwriteStatus_Select", applicationUnderwriteStatusIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_NewApp_Customer_Insert_Result> usp_NewApp_Customer_Insert(Nullable<int> titleId, string firstName, string lastName, Nullable<System.DateTime> birthDate, string identityCardNo, string passportNo, Nullable<int> sexId, Nullable<int> maritalStatusId, Nullable<int> bloodTypeId, Nullable<int> occupationLevelId, string position, string jobDetail, Nullable<double> salary1, Nullable<double> salary2, Nullable<double> weight, Nullable<double> height, string mobilePhoneNumber, string officePhoneNumber, string email, string h_BuildingName, string h_VillageName, string h_No, string h_Moo, string h_Floor, string h_Soi, string h_Road, string h_SubDistrictId, string w_BuildingName, string w_VillageName, string w_No, string w_Moo, string w_Floor, string w_Soi, string w_Road, string w_SubDistrictId, string c_BuildingName, string c_VillageName, string c_No, string c_Moo, string c_Floor, string c_Soi, string c_Road, string c_SubDistrictId, Nullable<int> branchId, Nullable<int> createdByUserId)
        {
            var titleIdParameter = titleId.HasValue ?
                new ObjectParameter("TitleId", titleId) :
                new ObjectParameter("TitleId", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var birthDateParameter = birthDate.HasValue ?
                new ObjectParameter("BirthDate", birthDate) :
                new ObjectParameter("BirthDate", typeof(System.DateTime));
    
            var identityCardNoParameter = identityCardNo != null ?
                new ObjectParameter("IdentityCardNo", identityCardNo) :
                new ObjectParameter("IdentityCardNo", typeof(string));
    
            var passportNoParameter = passportNo != null ?
                new ObjectParameter("PassportNo", passportNo) :
                new ObjectParameter("PassportNo", typeof(string));
    
            var sexIdParameter = sexId.HasValue ?
                new ObjectParameter("SexId", sexId) :
                new ObjectParameter("SexId", typeof(int));
    
            var maritalStatusIdParameter = maritalStatusId.HasValue ?
                new ObjectParameter("MaritalStatusId", maritalStatusId) :
                new ObjectParameter("MaritalStatusId", typeof(int));
    
            var bloodTypeIdParameter = bloodTypeId.HasValue ?
                new ObjectParameter("BloodTypeId", bloodTypeId) :
                new ObjectParameter("BloodTypeId", typeof(int));
    
            var occupationLevelIdParameter = occupationLevelId.HasValue ?
                new ObjectParameter("OccupationLevelId", occupationLevelId) :
                new ObjectParameter("OccupationLevelId", typeof(int));
    
            var positionParameter = position != null ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(string));
    
            var jobDetailParameter = jobDetail != null ?
                new ObjectParameter("JobDetail", jobDetail) :
                new ObjectParameter("JobDetail", typeof(string));
    
            var salary1Parameter = salary1.HasValue ?
                new ObjectParameter("Salary1", salary1) :
                new ObjectParameter("Salary1", typeof(double));
    
            var salary2Parameter = salary2.HasValue ?
                new ObjectParameter("Salary2", salary2) :
                new ObjectParameter("Salary2", typeof(double));
    
            var weightParameter = weight.HasValue ?
                new ObjectParameter("Weight", weight) :
                new ObjectParameter("Weight", typeof(double));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(double));
    
            var mobilePhoneNumberParameter = mobilePhoneNumber != null ?
                new ObjectParameter("MobilePhoneNumber", mobilePhoneNumber) :
                new ObjectParameter("MobilePhoneNumber", typeof(string));
    
            var officePhoneNumberParameter = officePhoneNumber != null ?
                new ObjectParameter("OfficePhoneNumber", officePhoneNumber) :
                new ObjectParameter("OfficePhoneNumber", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var h_BuildingNameParameter = h_BuildingName != null ?
                new ObjectParameter("H_BuildingName", h_BuildingName) :
                new ObjectParameter("H_BuildingName", typeof(string));
    
            var h_VillageNameParameter = h_VillageName != null ?
                new ObjectParameter("H_VillageName", h_VillageName) :
                new ObjectParameter("H_VillageName", typeof(string));
    
            var h_NoParameter = h_No != null ?
                new ObjectParameter("H_No", h_No) :
                new ObjectParameter("H_No", typeof(string));
    
            var h_MooParameter = h_Moo != null ?
                new ObjectParameter("H_Moo", h_Moo) :
                new ObjectParameter("H_Moo", typeof(string));
    
            var h_FloorParameter = h_Floor != null ?
                new ObjectParameter("H_Floor", h_Floor) :
                new ObjectParameter("H_Floor", typeof(string));
    
            var h_SoiParameter = h_Soi != null ?
                new ObjectParameter("H_Soi", h_Soi) :
                new ObjectParameter("H_Soi", typeof(string));
    
            var h_RoadParameter = h_Road != null ?
                new ObjectParameter("H_Road", h_Road) :
                new ObjectParameter("H_Road", typeof(string));
    
            var h_SubDistrictIdParameter = h_SubDistrictId != null ?
                new ObjectParameter("H_SubDistrictId", h_SubDistrictId) :
                new ObjectParameter("H_SubDistrictId", typeof(string));
    
            var w_BuildingNameParameter = w_BuildingName != null ?
                new ObjectParameter("W_BuildingName", w_BuildingName) :
                new ObjectParameter("W_BuildingName", typeof(string));
    
            var w_VillageNameParameter = w_VillageName != null ?
                new ObjectParameter("W_VillageName", w_VillageName) :
                new ObjectParameter("W_VillageName", typeof(string));
    
            var w_NoParameter = w_No != null ?
                new ObjectParameter("W_No", w_No) :
                new ObjectParameter("W_No", typeof(string));
    
            var w_MooParameter = w_Moo != null ?
                new ObjectParameter("W_Moo", w_Moo) :
                new ObjectParameter("W_Moo", typeof(string));
    
            var w_FloorParameter = w_Floor != null ?
                new ObjectParameter("W_Floor", w_Floor) :
                new ObjectParameter("W_Floor", typeof(string));
    
            var w_SoiParameter = w_Soi != null ?
                new ObjectParameter("W_Soi", w_Soi) :
                new ObjectParameter("W_Soi", typeof(string));
    
            var w_RoadParameter = w_Road != null ?
                new ObjectParameter("W_Road", w_Road) :
                new ObjectParameter("W_Road", typeof(string));
    
            var w_SubDistrictIdParameter = w_SubDistrictId != null ?
                new ObjectParameter("W_SubDistrictId", w_SubDistrictId) :
                new ObjectParameter("W_SubDistrictId", typeof(string));
    
            var c_BuildingNameParameter = c_BuildingName != null ?
                new ObjectParameter("C_BuildingName", c_BuildingName) :
                new ObjectParameter("C_BuildingName", typeof(string));
    
            var c_VillageNameParameter = c_VillageName != null ?
                new ObjectParameter("C_VillageName", c_VillageName) :
                new ObjectParameter("C_VillageName", typeof(string));
    
            var c_NoParameter = c_No != null ?
                new ObjectParameter("C_No", c_No) :
                new ObjectParameter("C_No", typeof(string));
    
            var c_MooParameter = c_Moo != null ?
                new ObjectParameter("C_Moo", c_Moo) :
                new ObjectParameter("C_Moo", typeof(string));
    
            var c_FloorParameter = c_Floor != null ?
                new ObjectParameter("C_Floor", c_Floor) :
                new ObjectParameter("C_Floor", typeof(string));
    
            var c_SoiParameter = c_Soi != null ?
                new ObjectParameter("C_Soi", c_Soi) :
                new ObjectParameter("C_Soi", typeof(string));
    
            var c_RoadParameter = c_Road != null ?
                new ObjectParameter("C_Road", c_Road) :
                new ObjectParameter("C_Road", typeof(string));
    
            var c_SubDistrictIdParameter = c_SubDistrictId != null ?
                new ObjectParameter("C_SubDistrictId", c_SubDistrictId) :
                new ObjectParameter("C_SubDistrictId", typeof(string));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NewApp_Customer_Insert_Result>("usp_NewApp_Customer_Insert", titleIdParameter, firstNameParameter, lastNameParameter, birthDateParameter, identityCardNoParameter, passportNoParameter, sexIdParameter, maritalStatusIdParameter, bloodTypeIdParameter, occupationLevelIdParameter, positionParameter, jobDetailParameter, salary1Parameter, salary2Parameter, weightParameter, heightParameter, mobilePhoneNumberParameter, officePhoneNumberParameter, emailParameter, h_BuildingNameParameter, h_VillageNameParameter, h_NoParameter, h_MooParameter, h_FloorParameter, h_SoiParameter, h_RoadParameter, h_SubDistrictIdParameter, w_BuildingNameParameter, w_VillageNameParameter, w_NoParameter, w_MooParameter, w_FloorParameter, w_SoiParameter, w_RoadParameter, w_SubDistrictIdParameter, c_BuildingNameParameter, c_VillageNameParameter, c_NoParameter, c_MooParameter, c_FloorParameter, c_SoiParameter, c_RoadParameter, c_SubDistrictIdParameter, branchIdParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_NewApp_Customer_Update_Result> usp_NewApp_Customer_Update(Nullable<int> applicationId, Nullable<int> titleId, string firstName, string lastName, Nullable<System.DateTime> birthDate, string identityCardNo, string passportNo, Nullable<int> sexId, Nullable<int> maritalStatusId, Nullable<int> bloodTypeId, Nullable<int> occupationLevelId, string position, string jobDetail, Nullable<double> salary1, Nullable<double> salary2, Nullable<double> weight, Nullable<double> height, string mobilePhoneNumber, string officePhoneNumber, string email, string h_BuildingName, string h_VillageName, string h_No, string h_Moo, string h_Floor, string h_Soi, string h_Road, string h_SubDistrictId, string w_BuildingName, string w_VillageName, string w_No, string w_Moo, string w_Floor, string w_Soi, string w_Road, string w_SubDistrictId, string c_BuildingName, string c_VillageName, string c_No, string c_Moo, string c_Floor, string c_Soi, string c_Road, string c_SubDistrictId, Nullable<int> updatedByUserId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var titleIdParameter = titleId.HasValue ?
                new ObjectParameter("TitleId", titleId) :
                new ObjectParameter("TitleId", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var birthDateParameter = birthDate.HasValue ?
                new ObjectParameter("BirthDate", birthDate) :
                new ObjectParameter("BirthDate", typeof(System.DateTime));
    
            var identityCardNoParameter = identityCardNo != null ?
                new ObjectParameter("IdentityCardNo", identityCardNo) :
                new ObjectParameter("IdentityCardNo", typeof(string));
    
            var passportNoParameter = passportNo != null ?
                new ObjectParameter("PassportNo", passportNo) :
                new ObjectParameter("PassportNo", typeof(string));
    
            var sexIdParameter = sexId.HasValue ?
                new ObjectParameter("SexId", sexId) :
                new ObjectParameter("SexId", typeof(int));
    
            var maritalStatusIdParameter = maritalStatusId.HasValue ?
                new ObjectParameter("MaritalStatusId", maritalStatusId) :
                new ObjectParameter("MaritalStatusId", typeof(int));
    
            var bloodTypeIdParameter = bloodTypeId.HasValue ?
                new ObjectParameter("BloodTypeId", bloodTypeId) :
                new ObjectParameter("BloodTypeId", typeof(int));
    
            var occupationLevelIdParameter = occupationLevelId.HasValue ?
                new ObjectParameter("OccupationLevelId", occupationLevelId) :
                new ObjectParameter("OccupationLevelId", typeof(int));
    
            var positionParameter = position != null ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(string));
    
            var jobDetailParameter = jobDetail != null ?
                new ObjectParameter("JobDetail", jobDetail) :
                new ObjectParameter("JobDetail", typeof(string));
    
            var salary1Parameter = salary1.HasValue ?
                new ObjectParameter("Salary1", salary1) :
                new ObjectParameter("Salary1", typeof(double));
    
            var salary2Parameter = salary2.HasValue ?
                new ObjectParameter("Salary2", salary2) :
                new ObjectParameter("Salary2", typeof(double));
    
            var weightParameter = weight.HasValue ?
                new ObjectParameter("Weight", weight) :
                new ObjectParameter("Weight", typeof(double));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(double));
    
            var mobilePhoneNumberParameter = mobilePhoneNumber != null ?
                new ObjectParameter("MobilePhoneNumber", mobilePhoneNumber) :
                new ObjectParameter("MobilePhoneNumber", typeof(string));
    
            var officePhoneNumberParameter = officePhoneNumber != null ?
                new ObjectParameter("OfficePhoneNumber", officePhoneNumber) :
                new ObjectParameter("OfficePhoneNumber", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var h_BuildingNameParameter = h_BuildingName != null ?
                new ObjectParameter("H_BuildingName", h_BuildingName) :
                new ObjectParameter("H_BuildingName", typeof(string));
    
            var h_VillageNameParameter = h_VillageName != null ?
                new ObjectParameter("H_VillageName", h_VillageName) :
                new ObjectParameter("H_VillageName", typeof(string));
    
            var h_NoParameter = h_No != null ?
                new ObjectParameter("H_No", h_No) :
                new ObjectParameter("H_No", typeof(string));
    
            var h_MooParameter = h_Moo != null ?
                new ObjectParameter("H_Moo", h_Moo) :
                new ObjectParameter("H_Moo", typeof(string));
    
            var h_FloorParameter = h_Floor != null ?
                new ObjectParameter("H_Floor", h_Floor) :
                new ObjectParameter("H_Floor", typeof(string));
    
            var h_SoiParameter = h_Soi != null ?
                new ObjectParameter("H_Soi", h_Soi) :
                new ObjectParameter("H_Soi", typeof(string));
    
            var h_RoadParameter = h_Road != null ?
                new ObjectParameter("H_Road", h_Road) :
                new ObjectParameter("H_Road", typeof(string));
    
            var h_SubDistrictIdParameter = h_SubDistrictId != null ?
                new ObjectParameter("H_SubDistrictId", h_SubDistrictId) :
                new ObjectParameter("H_SubDistrictId", typeof(string));
    
            var w_BuildingNameParameter = w_BuildingName != null ?
                new ObjectParameter("W_BuildingName", w_BuildingName) :
                new ObjectParameter("W_BuildingName", typeof(string));
    
            var w_VillageNameParameter = w_VillageName != null ?
                new ObjectParameter("W_VillageName", w_VillageName) :
                new ObjectParameter("W_VillageName", typeof(string));
    
            var w_NoParameter = w_No != null ?
                new ObjectParameter("W_No", w_No) :
                new ObjectParameter("W_No", typeof(string));
    
            var w_MooParameter = w_Moo != null ?
                new ObjectParameter("W_Moo", w_Moo) :
                new ObjectParameter("W_Moo", typeof(string));
    
            var w_FloorParameter = w_Floor != null ?
                new ObjectParameter("W_Floor", w_Floor) :
                new ObjectParameter("W_Floor", typeof(string));
    
            var w_SoiParameter = w_Soi != null ?
                new ObjectParameter("W_Soi", w_Soi) :
                new ObjectParameter("W_Soi", typeof(string));
    
            var w_RoadParameter = w_Road != null ?
                new ObjectParameter("W_Road", w_Road) :
                new ObjectParameter("W_Road", typeof(string));
    
            var w_SubDistrictIdParameter = w_SubDistrictId != null ?
                new ObjectParameter("W_SubDistrictId", w_SubDistrictId) :
                new ObjectParameter("W_SubDistrictId", typeof(string));
    
            var c_BuildingNameParameter = c_BuildingName != null ?
                new ObjectParameter("C_BuildingName", c_BuildingName) :
                new ObjectParameter("C_BuildingName", typeof(string));
    
            var c_VillageNameParameter = c_VillageName != null ?
                new ObjectParameter("C_VillageName", c_VillageName) :
                new ObjectParameter("C_VillageName", typeof(string));
    
            var c_NoParameter = c_No != null ?
                new ObjectParameter("C_No", c_No) :
                new ObjectParameter("C_No", typeof(string));
    
            var c_MooParameter = c_Moo != null ?
                new ObjectParameter("C_Moo", c_Moo) :
                new ObjectParameter("C_Moo", typeof(string));
    
            var c_FloorParameter = c_Floor != null ?
                new ObjectParameter("C_Floor", c_Floor) :
                new ObjectParameter("C_Floor", typeof(string));
    
            var c_SoiParameter = c_Soi != null ?
                new ObjectParameter("C_Soi", c_Soi) :
                new ObjectParameter("C_Soi", typeof(string));
    
            var c_RoadParameter = c_Road != null ?
                new ObjectParameter("C_Road", c_Road) :
                new ObjectParameter("C_Road", typeof(string));
    
            var c_SubDistrictIdParameter = c_SubDistrictId != null ?
                new ObjectParameter("C_SubDistrictId", c_SubDistrictId) :
                new ObjectParameter("C_SubDistrictId", typeof(string));
    
            var updatedByUserIdParameter = updatedByUserId.HasValue ?
                new ObjectParameter("UpdatedByUserId", updatedByUserId) :
                new ObjectParameter("UpdatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NewApp_Customer_Update_Result>("usp_NewApp_Customer_Update", applicationIdParameter, titleIdParameter, firstNameParameter, lastNameParameter, birthDateParameter, identityCardNoParameter, passportNoParameter, sexIdParameter, maritalStatusIdParameter, bloodTypeIdParameter, occupationLevelIdParameter, positionParameter, jobDetailParameter, salary1Parameter, salary2Parameter, weightParameter, heightParameter, mobilePhoneNumberParameter, officePhoneNumberParameter, emailParameter, h_BuildingNameParameter, h_VillageNameParameter, h_NoParameter, h_MooParameter, h_FloorParameter, h_SoiParameter, h_RoadParameter, h_SubDistrictIdParameter, w_BuildingNameParameter, w_VillageNameParameter, w_NoParameter, w_MooParameter, w_FloorParameter, w_SoiParameter, w_RoadParameter, w_SubDistrictIdParameter, c_BuildingNameParameter, c_VillageNameParameter, c_NoParameter, c_MooParameter, c_FloorParameter, c_SoiParameter, c_RoadParameter, c_SubDistrictIdParameter, updatedByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_NewApp_CustomerByAppId_Select_Result> usp_NewApp_CustomerByAppId_Select(Nullable<int> applicationId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NewApp_CustomerByAppId_Select_Result>("usp_NewApp_CustomerByAppId_Select", applicationIdParameter);
        }
    
        public virtual ObjectResult<usp_NewApp_Payer_Update_Result> usp_NewApp_Payer_Update(Nullable<int> applicationId, Nullable<int> relationTypeId, Nullable<int> titleId, string firstName, string lastName, string identityCardNo, string passportNo, Nullable<int> occupationLevelId, string mobilePhoneNumber, string email, string h_BuildingName, string h_VillageName, string h_No, string h_Moo, string h_Floor, string h_Soi, string h_Road, string h_SubDistrictId, string w_BuildingName, string w_VillageName, string w_No, string w_Moo, string w_Floor, string w_Soi, string w_Road, string w_SubDistrictId, Nullable<int> updatedByUserId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var relationTypeIdParameter = relationTypeId.HasValue ?
                new ObjectParameter("RelationTypeId", relationTypeId) :
                new ObjectParameter("RelationTypeId", typeof(int));
    
            var titleIdParameter = titleId.HasValue ?
                new ObjectParameter("TitleId", titleId) :
                new ObjectParameter("TitleId", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var identityCardNoParameter = identityCardNo != null ?
                new ObjectParameter("IdentityCardNo", identityCardNo) :
                new ObjectParameter("IdentityCardNo", typeof(string));
    
            var passportNoParameter = passportNo != null ?
                new ObjectParameter("PassportNo", passportNo) :
                new ObjectParameter("PassportNo", typeof(string));
    
            var occupationLevelIdParameter = occupationLevelId.HasValue ?
                new ObjectParameter("OccupationLevelId", occupationLevelId) :
                new ObjectParameter("OccupationLevelId", typeof(int));
    
            var mobilePhoneNumberParameter = mobilePhoneNumber != null ?
                new ObjectParameter("MobilePhoneNumber", mobilePhoneNumber) :
                new ObjectParameter("MobilePhoneNumber", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var h_BuildingNameParameter = h_BuildingName != null ?
                new ObjectParameter("H_BuildingName", h_BuildingName) :
                new ObjectParameter("H_BuildingName", typeof(string));
    
            var h_VillageNameParameter = h_VillageName != null ?
                new ObjectParameter("H_VillageName", h_VillageName) :
                new ObjectParameter("H_VillageName", typeof(string));
    
            var h_NoParameter = h_No != null ?
                new ObjectParameter("H_No", h_No) :
                new ObjectParameter("H_No", typeof(string));
    
            var h_MooParameter = h_Moo != null ?
                new ObjectParameter("H_Moo", h_Moo) :
                new ObjectParameter("H_Moo", typeof(string));
    
            var h_FloorParameter = h_Floor != null ?
                new ObjectParameter("H_Floor", h_Floor) :
                new ObjectParameter("H_Floor", typeof(string));
    
            var h_SoiParameter = h_Soi != null ?
                new ObjectParameter("H_Soi", h_Soi) :
                new ObjectParameter("H_Soi", typeof(string));
    
            var h_RoadParameter = h_Road != null ?
                new ObjectParameter("H_Road", h_Road) :
                new ObjectParameter("H_Road", typeof(string));
    
            var h_SubDistrictIdParameter = h_SubDistrictId != null ?
                new ObjectParameter("H_SubDistrictId", h_SubDistrictId) :
                new ObjectParameter("H_SubDistrictId", typeof(string));
    
            var w_BuildingNameParameter = w_BuildingName != null ?
                new ObjectParameter("W_BuildingName", w_BuildingName) :
                new ObjectParameter("W_BuildingName", typeof(string));
    
            var w_VillageNameParameter = w_VillageName != null ?
                new ObjectParameter("W_VillageName", w_VillageName) :
                new ObjectParameter("W_VillageName", typeof(string));
    
            var w_NoParameter = w_No != null ?
                new ObjectParameter("W_No", w_No) :
                new ObjectParameter("W_No", typeof(string));
    
            var w_MooParameter = w_Moo != null ?
                new ObjectParameter("W_Moo", w_Moo) :
                new ObjectParameter("W_Moo", typeof(string));
    
            var w_FloorParameter = w_Floor != null ?
                new ObjectParameter("W_Floor", w_Floor) :
                new ObjectParameter("W_Floor", typeof(string));
    
            var w_SoiParameter = w_Soi != null ?
                new ObjectParameter("W_Soi", w_Soi) :
                new ObjectParameter("W_Soi", typeof(string));
    
            var w_RoadParameter = w_Road != null ?
                new ObjectParameter("W_Road", w_Road) :
                new ObjectParameter("W_Road", typeof(string));
    
            var w_SubDistrictIdParameter = w_SubDistrictId != null ?
                new ObjectParameter("W_SubDistrictId", w_SubDistrictId) :
                new ObjectParameter("W_SubDistrictId", typeof(string));
    
            var updatedByUserIdParameter = updatedByUserId.HasValue ?
                new ObjectParameter("UpdatedByUserId", updatedByUserId) :
                new ObjectParameter("UpdatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NewApp_Payer_Update_Result>("usp_NewApp_Payer_Update", applicationIdParameter, relationTypeIdParameter, titleIdParameter, firstNameParameter, lastNameParameter, identityCardNoParameter, passportNoParameter, occupationLevelIdParameter, mobilePhoneNumberParameter, emailParameter, h_BuildingNameParameter, h_VillageNameParameter, h_NoParameter, h_MooParameter, h_FloorParameter, h_SoiParameter, h_RoadParameter, h_SubDistrictIdParameter, w_BuildingNameParameter, w_VillageNameParameter, w_NoParameter, w_MooParameter, w_FloorParameter, w_SoiParameter, w_RoadParameter, w_SubDistrictIdParameter, updatedByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_NewApp_PayerByAppId_Select_Result> usp_NewApp_PayerByAppId_Select(Nullable<int> applicationId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NewApp_PayerByAppId_Select_Result>("usp_NewApp_PayerByAppId_Select", applicationIdParameter);
        }
    
        public virtual ObjectResult<usp_NewApp_Policy_Update_Result> usp_NewApp_Policy_Update(Nullable<int> applicationId, Nullable<int> productId, Nullable<System.DateTime> startCoverDate, Nullable<System.DateTime> endCoverDate, string billBook, string billNo, Nullable<System.DateTime> billDate, Nullable<int> disclosureStatusId, Nullable<int> saleEmpId, Nullable<int> zebraId, Nullable<int> zebraOwnerEmpId, Nullable<int> updatedByUserId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var startCoverDateParameter = startCoverDate.HasValue ?
                new ObjectParameter("StartCoverDate", startCoverDate) :
                new ObjectParameter("StartCoverDate", typeof(System.DateTime));
    
            var endCoverDateParameter = endCoverDate.HasValue ?
                new ObjectParameter("EndCoverDate", endCoverDate) :
                new ObjectParameter("EndCoverDate", typeof(System.DateTime));
    
            var billBookParameter = billBook != null ?
                new ObjectParameter("BillBook", billBook) :
                new ObjectParameter("BillBook", typeof(string));
    
            var billNoParameter = billNo != null ?
                new ObjectParameter("BillNo", billNo) :
                new ObjectParameter("BillNo", typeof(string));
    
            var billDateParameter = billDate.HasValue ?
                new ObjectParameter("BillDate", billDate) :
                new ObjectParameter("BillDate", typeof(System.DateTime));
    
            var disclosureStatusIdParameter = disclosureStatusId.HasValue ?
                new ObjectParameter("DisclosureStatusId", disclosureStatusId) :
                new ObjectParameter("DisclosureStatusId", typeof(int));
    
            var saleEmpIdParameter = saleEmpId.HasValue ?
                new ObjectParameter("SaleEmpId", saleEmpId) :
                new ObjectParameter("SaleEmpId", typeof(int));
    
            var zebraIdParameter = zebraId.HasValue ?
                new ObjectParameter("ZebraId", zebraId) :
                new ObjectParameter("ZebraId", typeof(int));
    
            var zebraOwnerEmpIdParameter = zebraOwnerEmpId.HasValue ?
                new ObjectParameter("ZebraOwnerEmpId", zebraOwnerEmpId) :
                new ObjectParameter("ZebraOwnerEmpId", typeof(int));
    
            var updatedByUserIdParameter = updatedByUserId.HasValue ?
                new ObjectParameter("UpdatedByUserId", updatedByUserId) :
                new ObjectParameter("UpdatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NewApp_Policy_Update_Result>("usp_NewApp_Policy_Update", applicationIdParameter, productIdParameter, startCoverDateParameter, endCoverDateParameter, billBookParameter, billNoParameter, billDateParameter, disclosureStatusIdParameter, saleEmpIdParameter, zebraIdParameter, zebraOwnerEmpIdParameter, updatedByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_NewApp_PolicyByAppId_Select_Result> usp_NewApp_PolicyByAppId_Select(Nullable<int> applicationId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NewApp_PolicyByAppId_Select_Result>("usp_NewApp_PolicyByAppId_Select", applicationIdParameter);
        }
    
        public virtual ObjectResult<usp_BloodType_Select_Result> usp_BloodType_Select(Nullable<int> bloodTypeId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var bloodTypeIdParameter = bloodTypeId.HasValue ?
                new ObjectParameter("BloodTypeId", bloodTypeId) :
                new ObjectParameter("BloodTypeId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BloodType_Select_Result>("usp_BloodType_Select", bloodTypeIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_Branch_Select_Result> usp_Branch_Select(Nullable<int> brachID, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var brachIDParameter = brachID.HasValue ?
                new ObjectParameter("BrachID", brachID) :
                new ObjectParameter("BrachID", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Branch_Select_Result>("usp_Branch_Select", brachIDParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_CardTypeId_Select_Result> usp_CardTypeId_Select(Nullable<int> cardTypeId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var cardTypeIdParameter = cardTypeId.HasValue ?
                new ObjectParameter("CardTypeId", cardTypeId) :
                new ObjectParameter("CardTypeId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CardTypeId_Select_Result>("usp_CardTypeId_Select", cardTypeIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> usp_CheckIdentityIDCard(string identityIDCard)
        {
            var identityIDCardParameter = identityIDCard != null ?
                new ObjectParameter("IdentityIDCard", identityIDCard) :
                new ObjectParameter("IdentityIDCard", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("usp_CheckIdentityIDCard", identityIDCardParameter);
        }
    
        public virtual ObjectResult<usp_District_Select_Result> usp_District_Select(Nullable<int> districtId, Nullable<int> provinceId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(int));
    
            var provinceIdParameter = provinceId.HasValue ?
                new ObjectParameter("ProvinceId", provinceId) :
                new ObjectParameter("ProvinceId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_District_Select_Result>("usp_District_Select", districtIdParameter, provinceIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_Employee_Select_Result> usp_Employee_Select(Nullable<int> employeeId, Nullable<int> branchId, Nullable<int> teamId, Nullable<int> departmentId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var teamIdParameter = teamId.HasValue ?
                new ObjectParameter("TeamId", teamId) :
                new ObjectParameter("TeamId", typeof(int));
    
            var departmentIdParameter = departmentId.HasValue ?
                new ObjectParameter("DepartmentId", departmentId) :
                new ObjectParameter("DepartmentId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Employee_Select_Result>("usp_Employee_Select", employeeIdParameter, branchIdParameter, teamIdParameter, departmentIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_MaritalStatus_Select_Result> usp_MaritalStatus_Select(Nullable<int> maritalStatusId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var maritalStatusIdParameter = maritalStatusId.HasValue ?
                new ObjectParameter("MaritalStatusId", maritalStatusId) :
                new ObjectParameter("MaritalStatusId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MaritalStatus_Select_Result>("usp_MaritalStatus_Select", maritalStatusIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_MemoType_Select_Result> usp_MemoType_Select(Nullable<int> memoTypeId, Nullable<int> memoGroupTypeId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var memoTypeIdParameter = memoTypeId.HasValue ?
                new ObjectParameter("MemoTypeId", memoTypeId) :
                new ObjectParameter("MemoTypeId", typeof(int));
    
            var memoGroupTypeIdParameter = memoGroupTypeId.HasValue ?
                new ObjectParameter("MemoGroupTypeId", memoGroupTypeId) :
                new ObjectParameter("MemoGroupTypeId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MemoType_Select_Result>("usp_MemoType_Select", memoTypeIdParameter, memoGroupTypeIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_Occupation_Select_Result> usp_Occupation_Select(Nullable<int> occupationId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var occupationIdParameter = occupationId.HasValue ?
                new ObjectParameter("OccupationId", occupationId) :
                new ObjectParameter("OccupationId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Occupation_Select_Result>("usp_Occupation_Select", occupationIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_OccupationLevel_Select_Result> usp_OccupationLevel_Select(Nullable<int> occupationLevelId, Nullable<int> occupationId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var occupationLevelIdParameter = occupationLevelId.HasValue ?
                new ObjectParameter("OccupationLevelId", occupationLevelId) :
                new ObjectParameter("OccupationLevelId", typeof(int));
    
            var occupationIdParameter = occupationId.HasValue ?
                new ObjectParameter("OccupationId", occupationId) :
                new ObjectParameter("OccupationId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_OccupationLevel_Select_Result>("usp_OccupationLevel_Select", occupationLevelIdParameter, occupationIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_PersonSearch_Select_Result> usp_PersonSearch_Select(Nullable<int> cardTypeId, string cardDetail)
        {
            var cardTypeIdParameter = cardTypeId.HasValue ?
                new ObjectParameter("CardTypeId", cardTypeId) :
                new ObjectParameter("CardTypeId", typeof(int));
    
            var cardDetailParameter = cardDetail != null ?
                new ObjectParameter("CardDetail", cardDetail) :
                new ObjectParameter("CardDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonSearch_Select_Result>("usp_PersonSearch_Select", cardTypeIdParameter, cardDetailParameter);
        }
    
        public virtual ObjectResult<usp_Province_Select_Result> usp_Province_Select(Nullable<int> provinceId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var provinceIdParameter = provinceId.HasValue ?
                new ObjectParameter("ProvinceId", provinceId) :
                new ObjectParameter("ProvinceId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Province_Select_Result>("usp_Province_Select", provinceIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_RelationType_Select_Result> usp_RelationType_Select(Nullable<int> relationTypeId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var relationTypeIdParameter = relationTypeId.HasValue ?
                new ObjectParameter("RelationTypeId", relationTypeId) :
                new ObjectParameter("RelationTypeId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RelationType_Select_Result>("usp_RelationType_Select", relationTypeIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_Sex_Select_Result> usp_Sex_Select(Nullable<int> sexId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var sexIdParameter = sexId.HasValue ?
                new ObjectParameter("SexId", sexId) :
                new ObjectParameter("SexId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Sex_Select_Result>("usp_Sex_Select", sexIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_SubDistrict_Select_Result> usp_SubDistrict_Select(Nullable<int> subDistrictId, Nullable<int> districtId, Nullable<int> provinceId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var subDistrictIdParameter = subDistrictId.HasValue ?
                new ObjectParameter("SubDistrictId", subDistrictId) :
                new ObjectParameter("SubDistrictId", typeof(int));
    
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(int));
    
            var provinceIdParameter = provinceId.HasValue ?
                new ObjectParameter("ProvinceId", provinceId) :
                new ObjectParameter("ProvinceId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SubDistrict_Select_Result>("usp_SubDistrict_Select", subDistrictIdParameter, districtIdParameter, provinceIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_Title_Select_Result> usp_Title_Select(Nullable<int> titleId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var titleIdParameter = titleId.HasValue ?
                new ObjectParameter("TitleId", titleId) :
                new ObjectParameter("TitleId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Title_Select_Result>("usp_Title_Select", titleIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_Zebra_Select_Result> usp_Zebra_Select(Nullable<int> ownerEmployeeId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var ownerEmployeeIdParameter = ownerEmployeeId.HasValue ?
                new ObjectParameter("OwnerEmployeeId", ownerEmployeeId) :
                new ObjectParameter("OwnerEmployeeId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Zebra_Select_Result>("usp_Zebra_Select", ownerEmployeeIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_CalculateAge_Select_Result> usp_CalculateAge_Select(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CalculateAge_Select_Result>("usp_CalculateAge_Select", dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<usp_Document_Select_Result> usp_Document_Select(Nullable<int> applicationId, string documentTypeIdList, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var documentTypeIdListParameter = documentTypeIdList != null ?
                new ObjectParameter("DocumentTypeIdList", documentTypeIdList) :
                new ObjectParameter("DocumentTypeIdList", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Document_Select_Result>("usp_Document_Select", applicationIdParameter, documentTypeIdListParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual int usp_GenerateCode(string transactionCodeControlTypeDetail, Nullable<int> runningLenght, ObjectParameter result)
        {
            var transactionCodeControlTypeDetailParameter = transactionCodeControlTypeDetail != null ?
                new ObjectParameter("TransactionCodeControlTypeDetail", transactionCodeControlTypeDetail) :
                new ObjectParameter("TransactionCodeControlTypeDetail", typeof(string));
    
            var runningLenghtParameter = runningLenght.HasValue ?
                new ObjectParameter("RunningLenght", runningLenght) :
                new ObjectParameter("RunningLenght", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GenerateCode", transactionCodeControlTypeDetailParameter, runningLenghtParameter, result);
        }
    
        public virtual ObjectResult<usp_Questionaire_InsertOrUpdate_Result> usp_Questionaire_InsertOrUpdate(Nullable<int> applicationId, Nullable<int> createdByUserId, Nullable<bool> a1, Nullable<bool> a1_01, Nullable<bool> a1_02, Nullable<bool> a1_03, Nullable<bool> a1_04, Nullable<bool> a1_05, Nullable<bool> a1_06, string a1_07, Nullable<bool> a2, Nullable<bool> a2_01, Nullable<bool> a2_02, Nullable<bool> a3, Nullable<bool> a3_01, Nullable<bool> a3_02, Nullable<bool> a3_03, Nullable<bool> a3_04, Nullable<bool> a3_05, Nullable<bool> a3_06, Nullable<bool> a3_07, Nullable<bool> a3_08, string a3_08_01, string a3_08_02, Nullable<bool> a3_08_03, Nullable<bool> a3_08_04, Nullable<bool> a3_08_05, string a3_08_06, string a3_08_07, Nullable<bool> a3_08_08, Nullable<bool> a3_08_09, Nullable<bool> a3_08_10, Nullable<bool> a3_08_11, Nullable<bool> a3_08_12, Nullable<bool> a3_08_13, Nullable<bool> a3_09, string a3_09_01, string a3_09_02, Nullable<bool> a3_09_03, Nullable<bool> a3_09_04, Nullable<bool> a3_09_05, string a3_09_06, string a3_09_07, Nullable<bool> a3_09_08, Nullable<bool> a3_09_09, Nullable<bool> a3_09_10, Nullable<bool> a3_09_11, Nullable<bool> a3_09_12, Nullable<bool> a3_09_13, Nullable<bool> a4, string a4_01, string a4_02)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            var a1Parameter = a1.HasValue ?
                new ObjectParameter("A1", a1) :
                new ObjectParameter("A1", typeof(bool));
    
            var a1_01Parameter = a1_01.HasValue ?
                new ObjectParameter("A1_01", a1_01) :
                new ObjectParameter("A1_01", typeof(bool));
    
            var a1_02Parameter = a1_02.HasValue ?
                new ObjectParameter("A1_02", a1_02) :
                new ObjectParameter("A1_02", typeof(bool));
    
            var a1_03Parameter = a1_03.HasValue ?
                new ObjectParameter("A1_03", a1_03) :
                new ObjectParameter("A1_03", typeof(bool));
    
            var a1_04Parameter = a1_04.HasValue ?
                new ObjectParameter("A1_04", a1_04) :
                new ObjectParameter("A1_04", typeof(bool));
    
            var a1_05Parameter = a1_05.HasValue ?
                new ObjectParameter("A1_05", a1_05) :
                new ObjectParameter("A1_05", typeof(bool));
    
            var a1_06Parameter = a1_06.HasValue ?
                new ObjectParameter("A1_06", a1_06) :
                new ObjectParameter("A1_06", typeof(bool));
    
            var a1_07Parameter = a1_07 != null ?
                new ObjectParameter("A1_07", a1_07) :
                new ObjectParameter("A1_07", typeof(string));
    
            var a2Parameter = a2.HasValue ?
                new ObjectParameter("A2", a2) :
                new ObjectParameter("A2", typeof(bool));
    
            var a2_01Parameter = a2_01.HasValue ?
                new ObjectParameter("A2_01", a2_01) :
                new ObjectParameter("A2_01", typeof(bool));
    
            var a2_02Parameter = a2_02.HasValue ?
                new ObjectParameter("A2_02", a2_02) :
                new ObjectParameter("A2_02", typeof(bool));
    
            var a3Parameter = a3.HasValue ?
                new ObjectParameter("A3", a3) :
                new ObjectParameter("A3", typeof(bool));
    
            var a3_01Parameter = a3_01.HasValue ?
                new ObjectParameter("A3_01", a3_01) :
                new ObjectParameter("A3_01", typeof(bool));
    
            var a3_02Parameter = a3_02.HasValue ?
                new ObjectParameter("A3_02", a3_02) :
                new ObjectParameter("A3_02", typeof(bool));
    
            var a3_03Parameter = a3_03.HasValue ?
                new ObjectParameter("A3_03", a3_03) :
                new ObjectParameter("A3_03", typeof(bool));
    
            var a3_04Parameter = a3_04.HasValue ?
                new ObjectParameter("A3_04", a3_04) :
                new ObjectParameter("A3_04", typeof(bool));
    
            var a3_05Parameter = a3_05.HasValue ?
                new ObjectParameter("A3_05", a3_05) :
                new ObjectParameter("A3_05", typeof(bool));
    
            var a3_06Parameter = a3_06.HasValue ?
                new ObjectParameter("A3_06", a3_06) :
                new ObjectParameter("A3_06", typeof(bool));
    
            var a3_07Parameter = a3_07.HasValue ?
                new ObjectParameter("A3_07", a3_07) :
                new ObjectParameter("A3_07", typeof(bool));
    
            var a3_08Parameter = a3_08.HasValue ?
                new ObjectParameter("A3_08", a3_08) :
                new ObjectParameter("A3_08", typeof(bool));
    
            var a3_08_01Parameter = a3_08_01 != null ?
                new ObjectParameter("A3_08_01", a3_08_01) :
                new ObjectParameter("A3_08_01", typeof(string));
    
            var a3_08_02Parameter = a3_08_02 != null ?
                new ObjectParameter("A3_08_02", a3_08_02) :
                new ObjectParameter("A3_08_02", typeof(string));
    
            var a3_08_03Parameter = a3_08_03.HasValue ?
                new ObjectParameter("A3_08_03", a3_08_03) :
                new ObjectParameter("A3_08_03", typeof(bool));
    
            var a3_08_04Parameter = a3_08_04.HasValue ?
                new ObjectParameter("A3_08_04", a3_08_04) :
                new ObjectParameter("A3_08_04", typeof(bool));
    
            var a3_08_05Parameter = a3_08_05.HasValue ?
                new ObjectParameter("A3_08_05", a3_08_05) :
                new ObjectParameter("A3_08_05", typeof(bool));
    
            var a3_08_06Parameter = a3_08_06 != null ?
                new ObjectParameter("A3_08_06", a3_08_06) :
                new ObjectParameter("A3_08_06", typeof(string));
    
            var a3_08_07Parameter = a3_08_07 != null ?
                new ObjectParameter("A3_08_07", a3_08_07) :
                new ObjectParameter("A3_08_07", typeof(string));
    
            var a3_08_08Parameter = a3_08_08.HasValue ?
                new ObjectParameter("A3_08_08", a3_08_08) :
                new ObjectParameter("A3_08_08", typeof(bool));
    
            var a3_08_09Parameter = a3_08_09.HasValue ?
                new ObjectParameter("A3_08_09", a3_08_09) :
                new ObjectParameter("A3_08_09", typeof(bool));
    
            var a3_08_10Parameter = a3_08_10.HasValue ?
                new ObjectParameter("A3_08_10", a3_08_10) :
                new ObjectParameter("A3_08_10", typeof(bool));
    
            var a3_08_11Parameter = a3_08_11.HasValue ?
                new ObjectParameter("A3_08_11", a3_08_11) :
                new ObjectParameter("A3_08_11", typeof(bool));
    
            var a3_08_12Parameter = a3_08_12.HasValue ?
                new ObjectParameter("A3_08_12", a3_08_12) :
                new ObjectParameter("A3_08_12", typeof(bool));
    
            var a3_08_13Parameter = a3_08_13.HasValue ?
                new ObjectParameter("A3_08_13", a3_08_13) :
                new ObjectParameter("A3_08_13", typeof(bool));
    
            var a3_09Parameter = a3_09.HasValue ?
                new ObjectParameter("A3_09", a3_09) :
                new ObjectParameter("A3_09", typeof(bool));
    
            var a3_09_01Parameter = a3_09_01 != null ?
                new ObjectParameter("A3_09_01", a3_09_01) :
                new ObjectParameter("A3_09_01", typeof(string));
    
            var a3_09_02Parameter = a3_09_02 != null ?
                new ObjectParameter("A3_09_02", a3_09_02) :
                new ObjectParameter("A3_09_02", typeof(string));
    
            var a3_09_03Parameter = a3_09_03.HasValue ?
                new ObjectParameter("A3_09_03", a3_09_03) :
                new ObjectParameter("A3_09_03", typeof(bool));
    
            var a3_09_04Parameter = a3_09_04.HasValue ?
                new ObjectParameter("A3_09_04", a3_09_04) :
                new ObjectParameter("A3_09_04", typeof(bool));
    
            var a3_09_05Parameter = a3_09_05.HasValue ?
                new ObjectParameter("A3_09_05", a3_09_05) :
                new ObjectParameter("A3_09_05", typeof(bool));
    
            var a3_09_06Parameter = a3_09_06 != null ?
                new ObjectParameter("A3_09_06", a3_09_06) :
                new ObjectParameter("A3_09_06", typeof(string));
    
            var a3_09_07Parameter = a3_09_07 != null ?
                new ObjectParameter("A3_09_07", a3_09_07) :
                new ObjectParameter("A3_09_07", typeof(string));
    
            var a3_09_08Parameter = a3_09_08.HasValue ?
                new ObjectParameter("A3_09_08", a3_09_08) :
                new ObjectParameter("A3_09_08", typeof(bool));
    
            var a3_09_09Parameter = a3_09_09.HasValue ?
                new ObjectParameter("A3_09_09", a3_09_09) :
                new ObjectParameter("A3_09_09", typeof(bool));
    
            var a3_09_10Parameter = a3_09_10.HasValue ?
                new ObjectParameter("A3_09_10", a3_09_10) :
                new ObjectParameter("A3_09_10", typeof(bool));
    
            var a3_09_11Parameter = a3_09_11.HasValue ?
                new ObjectParameter("A3_09_11", a3_09_11) :
                new ObjectParameter("A3_09_11", typeof(bool));
    
            var a3_09_12Parameter = a3_09_12.HasValue ?
                new ObjectParameter("A3_09_12", a3_09_12) :
                new ObjectParameter("A3_09_12", typeof(bool));
    
            var a3_09_13Parameter = a3_09_13.HasValue ?
                new ObjectParameter("A3_09_13", a3_09_13) :
                new ObjectParameter("A3_09_13", typeof(bool));
    
            var a4Parameter = a4.HasValue ?
                new ObjectParameter("A4", a4) :
                new ObjectParameter("A4", typeof(bool));
    
            var a4_01Parameter = a4_01 != null ?
                new ObjectParameter("A4_01", a4_01) :
                new ObjectParameter("A4_01", typeof(string));
    
            var a4_02Parameter = a4_02 != null ?
                new ObjectParameter("A4_02", a4_02) :
                new ObjectParameter("A4_02", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Questionaire_InsertOrUpdate_Result>("usp_Questionaire_InsertOrUpdate", applicationIdParameter, createdByUserIdParameter, a1Parameter, a1_01Parameter, a1_02Parameter, a1_03Parameter, a1_04Parameter, a1_05Parameter, a1_06Parameter, a1_07Parameter, a2Parameter, a2_01Parameter, a2_02Parameter, a3Parameter, a3_01Parameter, a3_02Parameter, a3_03Parameter, a3_04Parameter, a3_05Parameter, a3_06Parameter, a3_07Parameter, a3_08Parameter, a3_08_01Parameter, a3_08_02Parameter, a3_08_03Parameter, a3_08_04Parameter, a3_08_05Parameter, a3_08_06Parameter, a3_08_07Parameter, a3_08_08Parameter, a3_08_09Parameter, a3_08_10Parameter, a3_08_11Parameter, a3_08_12Parameter, a3_08_13Parameter, a3_09Parameter, a3_09_01Parameter, a3_09_02Parameter, a3_09_03Parameter, a3_09_04Parameter, a3_09_05Parameter, a3_09_06Parameter, a3_09_07Parameter, a3_09_08Parameter, a3_09_09Parameter, a3_09_10Parameter, a3_09_11Parameter, a3_09_12Parameter, a3_09_13Parameter, a4Parameter, a4_01Parameter, a4_02Parameter);
        }
    
        public virtual ObjectResult<usp_NewApp_ReScanDoc_Update_Result> usp_NewApp_ReScanDoc_Update(Nullable<int> applicationId, Nullable<int> updatedByUserId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var updatedByUserIdParameter = updatedByUserId.HasValue ?
                new ObjectParameter("UpdatedByUserId", updatedByUserId) :
                new ObjectParameter("UpdatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NewApp_ReScanDoc_Update_Result>("usp_NewApp_ReScanDoc_Update", applicationIdParameter, updatedByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_NewApp_SentToUdw_Update_Result> usp_NewApp_SentToUdw_Update(Nullable<int> applicationId, Nullable<int> updatedByUserId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var updatedByUserIdParameter = updatedByUserId.HasValue ?
                new ObjectParameter("UpdatedByUserId", updatedByUserId) :
                new ObjectParameter("UpdatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NewApp_SentToUdw_Update_Result>("usp_NewApp_SentToUdw_Update", applicationIdParameter, updatedByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_NewApp_UdwApprove_Update_Result> usp_NewApp_UdwApprove_Update(Nullable<int> applicationId, Nullable<int> applicationUnderwriteStatusId, Nullable<int> udwUnApproveCauseId, string udwRemark, Nullable<int> updatedByUserId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var applicationUnderwriteStatusIdParameter = applicationUnderwriteStatusId.HasValue ?
                new ObjectParameter("ApplicationUnderwriteStatusId", applicationUnderwriteStatusId) :
                new ObjectParameter("ApplicationUnderwriteStatusId", typeof(int));
    
            var udwUnApproveCauseIdParameter = udwUnApproveCauseId.HasValue ?
                new ObjectParameter("UdwUnApproveCauseId", udwUnApproveCauseId) :
                new ObjectParameter("UdwUnApproveCauseId", typeof(int));
    
            var udwRemarkParameter = udwRemark != null ?
                new ObjectParameter("UdwRemark", udwRemark) :
                new ObjectParameter("UdwRemark", typeof(string));
    
            var updatedByUserIdParameter = updatedByUserId.HasValue ?
                new ObjectParameter("UpdatedByUserId", updatedByUserId) :
                new ObjectParameter("UpdatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NewApp_UdwApprove_Update_Result>("usp_NewApp_UdwApprove_Update", applicationIdParameter, applicationUnderwriteStatusIdParameter, udwUnApproveCauseIdParameter, udwRemarkParameter, updatedByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_RequestCancel_Insert_Result> usp_RequestCancel_Insert(Nullable<int> applicationId, Nullable<int> createdByUserId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RequestCancel_Insert_Result>("usp_RequestCancel_Insert", applicationIdParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_TransactionUdwLatestByAppId_Select_Result> usp_TransactionUdwLatestByAppId_Select(Nullable<int> applicationId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TransactionUdwLatestByAppId_Select_Result>("usp_TransactionUdwLatestByAppId_Select", applicationIdParameter);
        }
    
        public virtual ObjectResult<usp_AddressDetail_Select_Result> usp_AddressDetail_Select(Nullable<int> addressId, Nullable<int> personRelateApplicationId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var addressIdParameter = addressId.HasValue ?
                new ObjectParameter("AddressId", addressId) :
                new ObjectParameter("AddressId", typeof(int));
    
            var personRelateApplicationIdParameter = personRelateApplicationId.HasValue ?
                new ObjectParameter("PersonRelateApplicationId", personRelateApplicationId) :
                new ObjectParameter("PersonRelateApplicationId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AddressDetail_Select_Result>("usp_AddressDetail_Select", addressIdParameter, personRelateApplicationIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_Heir_SelectById_Result> usp_Heir_SelectById(Nullable<int> personRelateApplicationId)
        {
            var personRelateApplicationIdParameter = personRelateApplicationId.HasValue ?
                new ObjectParameter("PersonRelateApplicationId", personRelateApplicationId) :
                new ObjectParameter("PersonRelateApplicationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Heir_SelectById_Result>("usp_Heir_SelectById", personRelateApplicationIdParameter);
        }
    
        public virtual ObjectResult<usp_PersonRelatedApplication_Select_Result> usp_PersonRelatedApplication_Select(Nullable<int> personRelateApplicationId, Nullable<int> personRelateApplicationTypeId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var personRelateApplicationIdParameter = personRelateApplicationId.HasValue ?
                new ObjectParameter("PersonRelateApplicationId", personRelateApplicationId) :
                new ObjectParameter("PersonRelateApplicationId", typeof(int));
    
            var personRelateApplicationTypeIdParameter = personRelateApplicationTypeId.HasValue ?
                new ObjectParameter("PersonRelateApplicationTypeId", personRelateApplicationTypeId) :
                new ObjectParameter("PersonRelateApplicationTypeId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PersonRelatedApplication_Select_Result>("usp_PersonRelatedApplication_Select", personRelateApplicationIdParameter, personRelateApplicationTypeIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationTransaction_Select_Result> usp_ApplicationTransaction_Select(Nullable<int> applicationId, Nullable<int> transactionTypeId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var transactionTypeIdParameter = transactionTypeId.HasValue ?
                new ObjectParameter("TransactionTypeId", transactionTypeId) :
                new ObjectParameter("TransactionTypeId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationTransaction_Select_Result>("usp_ApplicationTransaction_Select", applicationIdParameter, transactionTypeIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationTransactionDetail_Select_Result> usp_ApplicationTransactionDetail_Select(Nullable<int> applicationTransactionId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationTransactionIdParameter = applicationTransactionId.HasValue ?
                new ObjectParameter("ApplicationTransactionId", applicationTransactionId) :
                new ObjectParameter("ApplicationTransactionId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationTransactionDetail_Select_Result>("usp_ApplicationTransactionDetail_Select", applicationTransactionIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_Heir_Select_Result> usp_Heir_Select(Nullable<int> applicationId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Heir_Select_Result>("usp_Heir_Select", applicationIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_DebtReceive_Select_Result> usp_DebtReceive_Select(Nullable<int> applicationId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DebtReceive_Select_Result>("usp_DebtReceive_Select", applicationIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_UdwUnApproveCause_Select_Result> usp_UdwUnApproveCause_Select(Nullable<int> udwUnApproveCauseId, Nullable<int> udwUnApproveCauseTypeId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var udwUnApproveCauseIdParameter = udwUnApproveCauseId.HasValue ?
                new ObjectParameter("UdwUnApproveCauseId", udwUnApproveCauseId) :
                new ObjectParameter("UdwUnApproveCauseId", typeof(int));
    
            var udwUnApproveCauseTypeIdParameter = udwUnApproveCauseTypeId.HasValue ?
                new ObjectParameter("UdwUnApproveCauseTypeId", udwUnApproveCauseTypeId) :
                new ObjectParameter("UdwUnApproveCauseTypeId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UdwUnApproveCause_Select_Result>("usp_UdwUnApproveCause_Select", udwUnApproveCauseIdParameter, udwUnApproveCauseTypeIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_Questionaire_Select_Result> usp_Questionaire_Select(Nullable<int> questionaireId, Nullable<int> applicationId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var questionaireIdParameter = questionaireId.HasValue ?
                new ObjectParameter("QuestionaireId", questionaireId) :
                new ObjectParameter("QuestionaireId", typeof(int));
    
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Questionaire_Select_Result>("usp_Questionaire_Select", questionaireIdParameter, applicationIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_RequestCancel_Select_Result> usp_RequestCancel_Select(Nullable<int> requestCancelId, Nullable<System.DateTime> cancelDate, string approveStatusIdList, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var requestCancelIdParameter = requestCancelId.HasValue ?
                new ObjectParameter("RequestCancelId", requestCancelId) :
                new ObjectParameter("RequestCancelId", typeof(int));
    
            var cancelDateParameter = cancelDate.HasValue ?
                new ObjectParameter("CancelDate", cancelDate) :
                new ObjectParameter("CancelDate", typeof(System.DateTime));
    
            var approveStatusIdListParameter = approveStatusIdList != null ?
                new ObjectParameter("ApproveStatusIdList", approveStatusIdList) :
                new ObjectParameter("ApproveStatusIdList", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RequestCancel_Select_Result>("usp_RequestCancel_Select", requestCancelIdParameter, cancelDateParameter, approveStatusIdListParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationDetail_Select_Result> usp_ApplicationDetail_Select(Nullable<int> branchId, Nullable<System.DateTime> startCoverDate, Nullable<System.DateTime> cancelDate, Nullable<System.DateTime> endCoverDate, string appStatusIdList, string appUdwStatusIdList, Nullable<int> applicationId, string applicationCode, Nullable<int> employeeId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var startCoverDateParameter = startCoverDate.HasValue ?
                new ObjectParameter("StartCoverDate", startCoverDate) :
                new ObjectParameter("StartCoverDate", typeof(System.DateTime));
    
            var cancelDateParameter = cancelDate.HasValue ?
                new ObjectParameter("CancelDate", cancelDate) :
                new ObjectParameter("CancelDate", typeof(System.DateTime));
    
            var endCoverDateParameter = endCoverDate.HasValue ?
                new ObjectParameter("EndCoverDate", endCoverDate) :
                new ObjectParameter("EndCoverDate", typeof(System.DateTime));
    
            var appStatusIdListParameter = appStatusIdList != null ?
                new ObjectParameter("AppStatusIdList", appStatusIdList) :
                new ObjectParameter("AppStatusIdList", typeof(string));
    
            var appUdwStatusIdListParameter = appUdwStatusIdList != null ?
                new ObjectParameter("AppUdwStatusIdList", appUdwStatusIdList) :
                new ObjectParameter("AppUdwStatusIdList", typeof(string));
    
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var applicationCodeParameter = applicationCode != null ?
                new ObjectParameter("ApplicationCode", applicationCode) :
                new ObjectParameter("ApplicationCode", typeof(string));
    
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationDetail_Select_Result>("usp_ApplicationDetail_Select", branchIdParameter, startCoverDateParameter, cancelDateParameter, endCoverDateParameter, appStatusIdListParameter, appUdwStatusIdListParameter, applicationIdParameter, applicationCodeParameter, employeeIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_Product_Select_Result> usp_Product_Select(Nullable<int> productId, Nullable<int> insuranceCompanyId, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var insuranceCompanyIdParameter = insuranceCompanyId.HasValue ?
                new ObjectParameter("InsuranceCompanyId", insuranceCompanyId) :
                new ObjectParameter("InsuranceCompanyId", typeof(int));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Product_Select_Result>("usp_Product_Select", productIdParameter, insuranceCompanyIdParameter, dateFromParameter, dateToParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_AppproveStatus_Select_Result> usp_AppproveStatus_Select(Nullable<int> approveStatusId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var approveStatusIdParameter = approveStatusId.HasValue ?
                new ObjectParameter("ApproveStatusId", approveStatusId) :
                new ObjectParameter("ApproveStatusId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AppproveStatus_Select_Result>("usp_AppproveStatus_Select", approveStatusIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_ApproveCause_Select_Result> usp_ApproveCause_Select(Nullable<int> approveCauseId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var approveCauseIdParameter = approveCauseId.HasValue ?
                new ObjectParameter("ApproveCauseId", approveCauseId) :
                new ObjectParameter("ApproveCauseId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApproveCause_Select_Result>("usp_ApproveCause_Select", approveCauseIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_RequestCancel_Approve_Update_Result> usp_RequestCancel_Approve_Update(Nullable<int> requestCancelId, Nullable<int> approveStatusId, Nullable<int> approveCauseId, string approveRemark, Nullable<int> updatedByUserId)
        {
            var requestCancelIdParameter = requestCancelId.HasValue ?
                new ObjectParameter("RequestCancelId", requestCancelId) :
                new ObjectParameter("RequestCancelId", typeof(int));
    
            var approveStatusIdParameter = approveStatusId.HasValue ?
                new ObjectParameter("ApproveStatusId", approveStatusId) :
                new ObjectParameter("ApproveStatusId", typeof(int));
    
            var approveCauseIdParameter = approveCauseId.HasValue ?
                new ObjectParameter("ApproveCauseId", approveCauseId) :
                new ObjectParameter("ApproveCauseId", typeof(int));
    
            var approveRemarkParameter = approveRemark != null ?
                new ObjectParameter("ApproveRemark", approveRemark) :
                new ObjectParameter("ApproveRemark", typeof(string));
    
            var updatedByUserIdParameter = updatedByUserId.HasValue ?
                new ObjectParameter("UpdatedByUserId", updatedByUserId) :
                new ObjectParameter("UpdatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RequestCancel_Approve_Update_Result>("usp_RequestCancel_Approve_Update", requestCancelIdParameter, approveStatusIdParameter, approveCauseIdParameter, approveRemarkParameter, updatedByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_ApproveStatus_Select_Result> usp_ApproveStatus_Select(Nullable<int> approveStatusId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var approveStatusIdParameter = approveStatusId.HasValue ?
                new ObjectParameter("ApproveStatusId", approveStatusId) :
                new ObjectParameter("ApproveStatusId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApproveStatus_Select_Result>("usp_ApproveStatus_Select", approveStatusIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_CancelCause_Select_Result> usp_CancelCause_Select(Nullable<int> cancelCauseId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var cancelCauseIdParameter = cancelCauseId.HasValue ?
                new ObjectParameter("CancelCauseId", cancelCauseId) :
                new ObjectParameter("CancelCauseId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CancelCause_Select_Result>("usp_CancelCause_Select", cancelCauseIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_RequestCancel_Update_Result> usp_RequestCancel_Update(Nullable<int> requestCancelId, Nullable<System.DateTime> cancelDate, Nullable<int> cancelCauseId, string cancelRemark, Nullable<int> updatedByUserId)
        {
            var requestCancelIdParameter = requestCancelId.HasValue ?
                new ObjectParameter("RequestCancelId", requestCancelId) :
                new ObjectParameter("RequestCancelId", typeof(int));
    
            var cancelDateParameter = cancelDate.HasValue ?
                new ObjectParameter("CancelDate", cancelDate) :
                new ObjectParameter("CancelDate", typeof(System.DateTime));
    
            var cancelCauseIdParameter = cancelCauseId.HasValue ?
                new ObjectParameter("CancelCauseId", cancelCauseId) :
                new ObjectParameter("CancelCauseId", typeof(int));
    
            var cancelRemarkParameter = cancelRemark != null ?
                new ObjectParameter("CancelRemark", cancelRemark) :
                new ObjectParameter("CancelRemark", typeof(string));
    
            var updatedByUserIdParameter = updatedByUserId.HasValue ?
                new ObjectParameter("UpdatedByUserId", updatedByUserId) :
                new ObjectParameter("UpdatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RequestCancel_Update_Result>("usp_RequestCancel_Update", requestCancelIdParameter, cancelDateParameter, cancelCauseIdParameter, cancelRemarkParameter, updatedByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_Heir_Delete_Result> usp_Heir_Delete(Nullable<int> personRelateApplicationId, Nullable<int> updatedByUserId)
        {
            var personRelateApplicationIdParameter = personRelateApplicationId.HasValue ?
                new ObjectParameter("PersonRelateApplicationId", personRelateApplicationId) :
                new ObjectParameter("PersonRelateApplicationId", typeof(int));
    
            var updatedByUserIdParameter = updatedByUserId.HasValue ?
                new ObjectParameter("UpdatedByUserId", updatedByUserId) :
                new ObjectParameter("UpdatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Heir_Delete_Result>("usp_Heir_Delete", personRelateApplicationIdParameter, updatedByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_Heir_Insert_Result> usp_Heir_Insert(Nullable<int> applicationId, Nullable<int> relationId, Nullable<int> titleId, string firstName, string lastName, string buildingName, string villageName, string no, string moo, string floor, string soi, string road, string subDistrictId, Nullable<int> createdByUserId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var relationIdParameter = relationId.HasValue ?
                new ObjectParameter("RelationId", relationId) :
                new ObjectParameter("RelationId", typeof(int));
    
            var titleIdParameter = titleId.HasValue ?
                new ObjectParameter("TitleId", titleId) :
                new ObjectParameter("TitleId", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var buildingNameParameter = buildingName != null ?
                new ObjectParameter("BuildingName", buildingName) :
                new ObjectParameter("BuildingName", typeof(string));
    
            var villageNameParameter = villageName != null ?
                new ObjectParameter("VillageName", villageName) :
                new ObjectParameter("VillageName", typeof(string));
    
            var noParameter = no != null ?
                new ObjectParameter("No", no) :
                new ObjectParameter("No", typeof(string));
    
            var mooParameter = moo != null ?
                new ObjectParameter("Moo", moo) :
                new ObjectParameter("Moo", typeof(string));
    
            var floorParameter = floor != null ?
                new ObjectParameter("Floor", floor) :
                new ObjectParameter("Floor", typeof(string));
    
            var soiParameter = soi != null ?
                new ObjectParameter("Soi", soi) :
                new ObjectParameter("Soi", typeof(string));
    
            var roadParameter = road != null ?
                new ObjectParameter("Road", road) :
                new ObjectParameter("Road", typeof(string));
    
            var subDistrictIdParameter = subDistrictId != null ?
                new ObjectParameter("SubDistrictId", subDistrictId) :
                new ObjectParameter("SubDistrictId", typeof(string));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Heir_Insert_Result>("usp_Heir_Insert", applicationIdParameter, relationIdParameter, titleIdParameter, firstNameParameter, lastNameParameter, buildingNameParameter, villageNameParameter, noParameter, mooParameter, floorParameter, soiParameter, roadParameter, subDistrictIdParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_Heir_Update_Result> usp_Heir_Update(Nullable<int> personRelateApplicationId, Nullable<int> relationId, Nullable<int> titleId, string firstName, string lastName, string buildingName, string villageName, string no, string moo, string floor, string soi, string road, string subDistrictId, Nullable<int> updatedByUserId)
        {
            var personRelateApplicationIdParameter = personRelateApplicationId.HasValue ?
                new ObjectParameter("PersonRelateApplicationId", personRelateApplicationId) :
                new ObjectParameter("PersonRelateApplicationId", typeof(int));
    
            var relationIdParameter = relationId.HasValue ?
                new ObjectParameter("RelationId", relationId) :
                new ObjectParameter("RelationId", typeof(int));
    
            var titleIdParameter = titleId.HasValue ?
                new ObjectParameter("TitleId", titleId) :
                new ObjectParameter("TitleId", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var buildingNameParameter = buildingName != null ?
                new ObjectParameter("BuildingName", buildingName) :
                new ObjectParameter("BuildingName", typeof(string));
    
            var villageNameParameter = villageName != null ?
                new ObjectParameter("VillageName", villageName) :
                new ObjectParameter("VillageName", typeof(string));
    
            var noParameter = no != null ?
                new ObjectParameter("No", no) :
                new ObjectParameter("No", typeof(string));
    
            var mooParameter = moo != null ?
                new ObjectParameter("Moo", moo) :
                new ObjectParameter("Moo", typeof(string));
    
            var floorParameter = floor != null ?
                new ObjectParameter("Floor", floor) :
                new ObjectParameter("Floor", typeof(string));
    
            var soiParameter = soi != null ?
                new ObjectParameter("Soi", soi) :
                new ObjectParameter("Soi", typeof(string));
    
            var roadParameter = road != null ?
                new ObjectParameter("Road", road) :
                new ObjectParameter("Road", typeof(string));
    
            var subDistrictIdParameter = subDistrictId != null ?
                new ObjectParameter("SubDistrictId", subDistrictId) :
                new ObjectParameter("SubDistrictId", typeof(string));
    
            var updatedByUserIdParameter = updatedByUserId.HasValue ?
                new ObjectParameter("UpdatedByUserId", updatedByUserId) :
                new ObjectParameter("UpdatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Heir_Update_Result>("usp_Heir_Update", personRelateApplicationIdParameter, relationIdParameter, titleIdParameter, firstNameParameter, lastNameParameter, buildingNameParameter, villageNameParameter, noParameter, mooParameter, floorParameter, soiParameter, roadParameter, subDistrictIdParameter, updatedByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_Organize_Select_Result> usp_Organize_Select(Nullable<int> organizeId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var organizeIdParameter = organizeId.HasValue ?
                new ObjectParameter("OrganizeId", organizeId) :
                new ObjectParameter("OrganizeId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Organize_Select_Result>("usp_Organize_Select", organizeIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_CheckDocument_Validate_Result> usp_CheckDocument_Validate(Nullable<int> applicationId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CheckDocument_Validate_Result>("usp_CheckDocument_Validate", applicationIdParameter);
        }
    
        public virtual ObjectResult<usp_ReportApplicationFullDetail_Select_Result> usp_ReportApplicationFullDetail_Select(Nullable<int> dateTypeId, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, Nullable<int> branchId, string applicationStatusIdList, Nullable<int> employeeId)
        {
            var dateTypeIdParameter = dateTypeId.HasValue ?
                new ObjectParameter("DateTypeId", dateTypeId) :
                new ObjectParameter("DateTypeId", typeof(int));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var applicationStatusIdListParameter = applicationStatusIdList != null ?
                new ObjectParameter("ApplicationStatusIdList", applicationStatusIdList) :
                new ObjectParameter("ApplicationStatusIdList", typeof(string));
    
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReportApplicationFullDetail_Select_Result>("usp_ReportApplicationFullDetail_Select", dateTypeIdParameter, dateFromParameter, dateToParameter, branchIdParameter, applicationStatusIdListParameter, employeeIdParameter);
        }
    
        public virtual ObjectResult<usp_CheckProductXAgeAtRegister_Validate_Result> usp_CheckProductXAgeAtRegister_Validate(Nullable<int> applicationId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CheckProductXAgeAtRegister_Validate_Result>("usp_CheckProductXAgeAtRegister_Validate", applicationIdParameter);
        }
    
        public virtual ObjectResult<usp_CheckMaxCover_Validate_Result> usp_CheckMaxCover_Validate(Nullable<int> applicationId, Nullable<int> productId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CheckMaxCover_Validate_Result>("usp_CheckMaxCover_Validate", applicationIdParameter, productIdParameter);
        }
    
        public virtual ObjectResult<usp_CalculateBMI_Select_Result> usp_CalculateBMI_Select(Nullable<int> applicationId, Nullable<System.DateTime> startCoverDate)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var startCoverDateParameter = startCoverDate.HasValue ?
                new ObjectParameter("StartCoverDate", startCoverDate) :
                new ObjectParameter("StartCoverDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CalculateBMI_Select_Result>("usp_CalculateBMI_Select", applicationIdParameter, startCoverDateParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> usp_GetNextDcrForCreatedNewApp_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("usp_GetNextDcrForCreatedNewApp_Select");
        }
    
        public virtual ObjectResult<usp_WebServiceLog_Insert_Result> usp_WebServiceLog_Insert(Nullable<int> applicationId, Nullable<bool> isCallSuccess, string errorText, Nullable<System.DateTime> invokeDateTime, string message_Code, string message_Desc, string policyNo, string appNo, string fullResultReturn, string jsonOutput, Nullable<int> createdByUserId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var isCallSuccessParameter = isCallSuccess.HasValue ?
                new ObjectParameter("IsCallSuccess", isCallSuccess) :
                new ObjectParameter("IsCallSuccess", typeof(bool));
    
            var errorTextParameter = errorText != null ?
                new ObjectParameter("ErrorText", errorText) :
                new ObjectParameter("ErrorText", typeof(string));
    
            var invokeDateTimeParameter = invokeDateTime.HasValue ?
                new ObjectParameter("InvokeDateTime", invokeDateTime) :
                new ObjectParameter("InvokeDateTime", typeof(System.DateTime));
    
            var message_CodeParameter = message_Code != null ?
                new ObjectParameter("Message_Code", message_Code) :
                new ObjectParameter("Message_Code", typeof(string));
    
            var message_DescParameter = message_Desc != null ?
                new ObjectParameter("Message_Desc", message_Desc) :
                new ObjectParameter("Message_Desc", typeof(string));
    
            var policyNoParameter = policyNo != null ?
                new ObjectParameter("PolicyNo", policyNo) :
                new ObjectParameter("PolicyNo", typeof(string));
    
            var appNoParameter = appNo != null ?
                new ObjectParameter("AppNo", appNo) :
                new ObjectParameter("AppNo", typeof(string));
    
            var fullResultReturnParameter = fullResultReturn != null ?
                new ObjectParameter("FullResultReturn", fullResultReturn) :
                new ObjectParameter("FullResultReturn", typeof(string));
    
            var jsonOutputParameter = jsonOutput != null ?
                new ObjectParameter("JsonOutput", jsonOutput) :
                new ObjectParameter("JsonOutput", typeof(string));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebServiceLog_Insert_Result>("usp_WebServiceLog_Insert", applicationIdParameter, isCallSuccessParameter, errorTextParameter, invokeDateTimeParameter, message_CodeParameter, message_DescParameter, policyNoParameter, appNoParameter, fullResultReturnParameter, jsonOutputParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_IssuePolicy_validate_Result> usp_IssuePolicy_validate(Nullable<int> applicationId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IssuePolicy_validate_Result>("usp_IssuePolicy_validate", applicationIdParameter);
        }
    
        public virtual int usp_ConfirmPolicy_Select(Nullable<int> confirmPolicyId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var confirmPolicyIdParameter = confirmPolicyId.HasValue ?
                new ObjectParameter("ConfirmPolicyId", confirmPolicyId) :
                new ObjectParameter("ConfirmPolicyId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ConfirmPolicy_Select", confirmPolicyIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_RequestPolicy_Select_Result> usp_RequestPolicy_Select(Nullable<int> applicationID, Nullable<System.DateTime> period, string applicationStatusIdList, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationIDParameter = applicationID.HasValue ?
                new ObjectParameter("ApplicationID", applicationID) :
                new ObjectParameter("ApplicationID", typeof(int));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            var applicationStatusIdListParameter = applicationStatusIdList != null ?
                new ObjectParameter("ApplicationStatusIdList", applicationStatusIdList) :
                new ObjectParameter("ApplicationStatusIdList", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RequestPolicy_Select_Result>("usp_RequestPolicy_Select", applicationIDParameter, periodParameter, applicationStatusIdListParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_CancelBeforeDcr_Update_Result> usp_CancelBeforeDcr_Update(Nullable<int> applicationId, Nullable<int> updateByUSerId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var updateByUSerIdParameter = updateByUSerId.HasValue ?
                new ObjectParameter("UpdateByUSerId", updateByUSerId) :
                new ObjectParameter("UpdateByUSerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CancelBeforeDcr_Update_Result>("usp_CancelBeforeDcr_Update", applicationIdParameter, updateByUSerIdParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> usp_GetNextCancelDateForRequestCancel_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("usp_GetNextCancelDateForRequestCancel_Select");
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> usp_GetAllowCancelDateFromForRequestCancel_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("usp_GetAllowCancelDateFromForRequestCancel_Select");
        }
    
        public virtual ObjectResult<usp_CovidApplication_Insert_Result> usp_CovidApplication_Insert(Nullable<int> productId, Nullable<System.DateTime> startCoverDate, string firstName, string lastName, string identityCardNo, Nullable<int> sexId, Nullable<System.DateTime> birthDate, string mobilePhoneNumber, string email, string lineId, string address, string subDistrictId, string saleId, Nullable<int> createdByUserId, Nullable<int> occupationId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var startCoverDateParameter = startCoverDate.HasValue ?
                new ObjectParameter("StartCoverDate", startCoverDate) :
                new ObjectParameter("StartCoverDate", typeof(System.DateTime));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var identityCardNoParameter = identityCardNo != null ?
                new ObjectParameter("IdentityCardNo", identityCardNo) :
                new ObjectParameter("IdentityCardNo", typeof(string));
    
            var sexIdParameter = sexId.HasValue ?
                new ObjectParameter("SexId", sexId) :
                new ObjectParameter("SexId", typeof(int));
    
            var birthDateParameter = birthDate.HasValue ?
                new ObjectParameter("BirthDate", birthDate) :
                new ObjectParameter("BirthDate", typeof(System.DateTime));
    
            var mobilePhoneNumberParameter = mobilePhoneNumber != null ?
                new ObjectParameter("MobilePhoneNumber", mobilePhoneNumber) :
                new ObjectParameter("MobilePhoneNumber", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var lineIdParameter = lineId != null ?
                new ObjectParameter("LineId", lineId) :
                new ObjectParameter("LineId", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var subDistrictIdParameter = subDistrictId != null ?
                new ObjectParameter("SubDistrictId", subDistrictId) :
                new ObjectParameter("SubDistrictId", typeof(string));
    
            var saleIdParameter = saleId != null ?
                new ObjectParameter("SaleId", saleId) :
                new ObjectParameter("SaleId", typeof(string));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            var occupationIdParameter = occupationId.HasValue ?
                new ObjectParameter("OccupationId", occupationId) :
                new ObjectParameter("OccupationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CovidApplication_Insert_Result>("usp_CovidApplication_Insert", productIdParameter, startCoverDateParameter, firstNameParameter, lastNameParameter, identityCardNoParameter, sexIdParameter, birthDateParameter, mobilePhoneNumberParameter, emailParameter, lineIdParameter, addressParameter, subDistrictIdParameter, saleIdParameter, createdByUserIdParameter, occupationIdParameter);
        }
    
        public virtual ObjectResult<usp_ProductCovid_Select_Result> usp_ProductCovid_Select(Nullable<int> productId, Nullable<int> insuranceCompanyId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var insuranceCompanyIdParameter = insuranceCompanyId.HasValue ?
                new ObjectParameter("InsuranceCompanyId", insuranceCompanyId) :
                new ObjectParameter("InsuranceCompanyId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProductCovid_Select_Result>("usp_ProductCovid_Select", productIdParameter, insuranceCompanyIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_CovidApplication_Select_Result1> usp_CovidApplication_Select(string employeeCode, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail, Nullable<bool> isSendCover)
        {
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            var isSendCoverParameter = isSendCover.HasValue ?
                new ObjectParameter("IsSendCover", isSendCover) :
                new ObjectParameter("IsSendCover", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CovidApplication_Select_Result1>("usp_CovidApplication_Select", employeeCodeParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter, isSendCoverParameter);
        }
    
        public virtual ObjectResult<usp_CovidApplicationByAppId_Select_Result1> usp_CovidApplicationByAppId_Select(Nullable<int> covidApplicationId)
        {
            var covidApplicationIdParameter = covidApplicationId.HasValue ?
                new ObjectParameter("CovidApplicationId", covidApplicationId) :
                new ObjectParameter("CovidApplicationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CovidApplicationByAppId_Select_Result1>("usp_CovidApplicationByAppId_Select", covidApplicationIdParameter);
        }
    
        public virtual ObjectResult<usp_CovidApplicationByAppId_Update_Result1> usp_CovidApplicationByAppId_Update(Nullable<int> covidApplicationId, Nullable<int> productId, Nullable<System.DateTime> startCoverDate, string firstName, string lastName, string identityCardNo, Nullable<int> sexId, Nullable<System.DateTime> birthDate, string mobilePhoneNumber, string email, string lineId, string address, string subDistrictId, string saleId, Nullable<int> updatedByUserId, Nullable<int> occupationId)
        {
            var covidApplicationIdParameter = covidApplicationId.HasValue ?
                new ObjectParameter("CovidApplicationId", covidApplicationId) :
                new ObjectParameter("CovidApplicationId", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var startCoverDateParameter = startCoverDate.HasValue ?
                new ObjectParameter("StartCoverDate", startCoverDate) :
                new ObjectParameter("StartCoverDate", typeof(System.DateTime));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var identityCardNoParameter = identityCardNo != null ?
                new ObjectParameter("IdentityCardNo", identityCardNo) :
                new ObjectParameter("IdentityCardNo", typeof(string));
    
            var sexIdParameter = sexId.HasValue ?
                new ObjectParameter("SexId", sexId) :
                new ObjectParameter("SexId", typeof(int));
    
            var birthDateParameter = birthDate.HasValue ?
                new ObjectParameter("BirthDate", birthDate) :
                new ObjectParameter("BirthDate", typeof(System.DateTime));
    
            var mobilePhoneNumberParameter = mobilePhoneNumber != null ?
                new ObjectParameter("MobilePhoneNumber", mobilePhoneNumber) :
                new ObjectParameter("MobilePhoneNumber", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var lineIdParameter = lineId != null ?
                new ObjectParameter("LineId", lineId) :
                new ObjectParameter("LineId", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var subDistrictIdParameter = subDistrictId != null ?
                new ObjectParameter("SubDistrictId", subDistrictId) :
                new ObjectParameter("SubDistrictId", typeof(string));
    
            var saleIdParameter = saleId != null ?
                new ObjectParameter("SaleId", saleId) :
                new ObjectParameter("SaleId", typeof(string));
    
            var updatedByUserIdParameter = updatedByUserId.HasValue ?
                new ObjectParameter("UpdatedByUserId", updatedByUserId) :
                new ObjectParameter("UpdatedByUserId", typeof(int));
    
            var occupationIdParameter = occupationId.HasValue ?
                new ObjectParameter("OccupationId", occupationId) :
                new ObjectParameter("OccupationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CovidApplicationByAppId_Update_Result1>("usp_CovidApplicationByAppId_Update", covidApplicationIdParameter, productIdParameter, startCoverDateParameter, firstNameParameter, lastNameParameter, identityCardNoParameter, sexIdParameter, birthDateParameter, mobilePhoneNumberParameter, emailParameter, lineIdParameter, addressParameter, subDistrictIdParameter, saleIdParameter, updatedByUserIdParameter, occupationIdParameter);
        }
    
        public virtual ObjectResult<usp_CheckIdentityIDCardCovidDupplicate_Select_Result> usp_CheckIdentityIDCardCovidDupplicate_Select(string identityIDCard)
        {
            var identityIDCardParameter = identityIDCard != null ?
                new ObjectParameter("IdentityIDCard", identityIDCard) :
                new ObjectParameter("IdentityIDCard", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CheckIdentityIDCardCovidDupplicate_Select_Result>("usp_CheckIdentityIDCardCovidDupplicate_Select", identityIDCardParameter);
        }
    
        public virtual ObjectResult<usp_CovidApplicationDeleteByAppId_Update_Result> usp_CovidApplicationDeleteByAppId_Update(Nullable<int> covidApplicationId, Nullable<int> updatedByUserId)
        {
            var covidApplicationIdParameter = covidApplicationId.HasValue ?
                new ObjectParameter("CovidApplicationId", covidApplicationId) :
                new ObjectParameter("CovidApplicationId", typeof(int));
    
            var updatedByUserIdParameter = updatedByUserId.HasValue ?
                new ObjectParameter("UpdatedByUserId", updatedByUserId) :
                new ObjectParameter("UpdatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CovidApplicationDeleteByAppId_Update_Result>("usp_CovidApplicationDeleteByAppId_Update", covidApplicationIdParameter, updatedByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationReNew_Select_Result> usp_ApplicationReNew_Select(Nullable<System.DateTime> period, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationReNew_Select_Result>("usp_ApplicationReNew_Select", periodParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual int usp_CustomerApplication_CI_Person_InsertOrUpdate(Nullable<int> applicationId, string type, Nullable<int> createdByUserId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CustomerApplication_CI_Person_InsertOrUpdate", applicationIdParameter, typeParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_CovidApplicationSendCoverReport_Select_Result> usp_CovidApplicationSendCoverReport_Select(Nullable<System.DateTime> startCoverDate, Nullable<int> generatedByUserId)
        {
            var startCoverDateParameter = startCoverDate.HasValue ?
                new ObjectParameter("StartCoverDate", startCoverDate) :
                new ObjectParameter("StartCoverDate", typeof(System.DateTime));
    
            var generatedByUserIdParameter = generatedByUserId.HasValue ?
                new ObjectParameter("GeneratedByUserId", generatedByUserId) :
                new ObjectParameter("GeneratedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CovidApplicationSendCoverReport_Select_Result>("usp_CovidApplicationSendCoverReport_Select", startCoverDateParameter, generatedByUserIdParameter);
        }
    
        public virtual int usp_CRMLead_Insert(string applicationCode, Nullable<int> projectId, string leadCode)
        {
            var applicationCodeParameter = applicationCode != null ?
                new ObjectParameter("ApplicationCode", applicationCode) :
                new ObjectParameter("ApplicationCode", typeof(string));
    
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(int));
    
            var leadCodeParameter = leadCode != null ?
                new ObjectParameter("LeadCode", leadCode) :
                new ObjectParameter("LeadCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CRMLead_Insert", applicationCodeParameter, projectIdParameter, leadCodeParameter);
        }
    
        public virtual int usp_CustomerApplication_CV_Person_InsertOrUpdate(Nullable<int> applicationId, string type, Nullable<int> createdByUserId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CustomerApplication_CV_Person_InsertOrUpdate", applicationIdParameter, typeParameter, createdByUserIdParameter);
        }
    
        public virtual ObjectResult<usp_CovidApplicationCoverage_Validate_Result> usp_CovidApplicationCoverage_Validate(string identityCardNo)
        {
            var identityCardNoParameter = identityCardNo != null ?
                new ObjectParameter("IdentityCardNo", identityCardNo) :
                new ObjectParameter("IdentityCardNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CovidApplicationCoverage_Validate_Result>("usp_CovidApplicationCoverage_Validate", identityCardNoParameter);
        }
    
        public virtual ObjectResult<usp_CovidApplicationView_Insert_Result> usp_CovidApplicationView_Insert(Nullable<int> covidApplicationId, string remark)
        {
            var covidApplicationIdParameter = covidApplicationId.HasValue ?
                new ObjectParameter("CovidApplicationId", covidApplicationId) :
                new ObjectParameter("CovidApplicationId", typeof(int));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CovidApplicationView_Insert_Result>("usp_CovidApplicationView_Insert", covidApplicationIdParameter, remarkParameter);
        }
    
        public virtual ObjectResult<usp_CovidApplicationCompensateReport_Select_Result> usp_CovidApplicationCompensateReport_Select(Nullable<System.DateTime> startCoverDate)
        {
            var startCoverDateParameter = startCoverDate.HasValue ?
                new ObjectParameter("StartCoverDate", startCoverDate) :
                new ObjectParameter("StartCoverDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CovidApplicationCompensateReport_Select_Result>("usp_CovidApplicationCompensateReport_Select", startCoverDateParameter);
        }
    
        public virtual int usp_aj_ApplicationPolicyCancel_Update(Nullable<System.DateTime> period, Nullable<int> updatedByUserID, string remark)
        {
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            var updatedByUserIDParameter = updatedByUserID.HasValue ?
                new ObjectParameter("UpdatedByUserID", updatedByUserID) :
                new ObjectParameter("UpdatedByUserID", typeof(int));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_aj_ApplicationPolicyCancel_Update", periodParameter, updatedByUserIDParameter, remarkParameter);
        }
    
        public virtual ObjectResult<usp_CovidApplication_Validate_Result> usp_CovidApplication_Validate(string identityCardNo, Nullable<int> productId)
        {
            var identityCardNoParameter = identityCardNo != null ?
                new ObjectParameter("IdentityCardNo", identityCardNo) :
                new ObjectParameter("IdentityCardNo", typeof(string));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CovidApplication_Validate_Result>("usp_CovidApplication_Validate", identityCardNoParameter, productIdParameter);
        }
    
        public virtual ObjectResult<xusp_NewApp_Customer_UpdateV2_Result> xusp_NewApp_Customer_UpdateV2(Nullable<int> applicationId, Nullable<int> titleId, string firstName, string lastName, Nullable<System.DateTime> birthDate, string identityCardNo, string passportNo, Nullable<int> sexId, Nullable<int> maritalStatusId, Nullable<int> bloodTypeId, Nullable<int> occupationLevelId, string position, string jobDetail, Nullable<double> salary1, Nullable<double> salary2, Nullable<double> weight, Nullable<double> height, string mobilePhoneNumber, string officePhoneNumber, string email, string h_BuildingName, string h_VillageName, string h_No, string h_Moo, string h_Floor, string h_Soi, string h_Road, string h_SubDistrictId, string w_BuildingName, string w_VillageName, string w_No, string w_Moo, string w_Floor, string w_Soi, string w_Road, string w_SubDistrictId, string c_BuildingName, string c_VillageName, string c_No, string c_Moo, string c_Floor, string c_Soi, string c_Road, string c_SubDistrictId, Nullable<int> updatedByUserId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var titleIdParameter = titleId.HasValue ?
                new ObjectParameter("TitleId", titleId) :
                new ObjectParameter("TitleId", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var birthDateParameter = birthDate.HasValue ?
                new ObjectParameter("BirthDate", birthDate) :
                new ObjectParameter("BirthDate", typeof(System.DateTime));
    
            var identityCardNoParameter = identityCardNo != null ?
                new ObjectParameter("IdentityCardNo", identityCardNo) :
                new ObjectParameter("IdentityCardNo", typeof(string));
    
            var passportNoParameter = passportNo != null ?
                new ObjectParameter("PassportNo", passportNo) :
                new ObjectParameter("PassportNo", typeof(string));
    
            var sexIdParameter = sexId.HasValue ?
                new ObjectParameter("SexId", sexId) :
                new ObjectParameter("SexId", typeof(int));
    
            var maritalStatusIdParameter = maritalStatusId.HasValue ?
                new ObjectParameter("MaritalStatusId", maritalStatusId) :
                new ObjectParameter("MaritalStatusId", typeof(int));
    
            var bloodTypeIdParameter = bloodTypeId.HasValue ?
                new ObjectParameter("BloodTypeId", bloodTypeId) :
                new ObjectParameter("BloodTypeId", typeof(int));
    
            var occupationLevelIdParameter = occupationLevelId.HasValue ?
                new ObjectParameter("OccupationLevelId", occupationLevelId) :
                new ObjectParameter("OccupationLevelId", typeof(int));
    
            var positionParameter = position != null ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(string));
    
            var jobDetailParameter = jobDetail != null ?
                new ObjectParameter("JobDetail", jobDetail) :
                new ObjectParameter("JobDetail", typeof(string));
    
            var salary1Parameter = salary1.HasValue ?
                new ObjectParameter("Salary1", salary1) :
                new ObjectParameter("Salary1", typeof(double));
    
            var salary2Parameter = salary2.HasValue ?
                new ObjectParameter("Salary2", salary2) :
                new ObjectParameter("Salary2", typeof(double));
    
            var weightParameter = weight.HasValue ?
                new ObjectParameter("Weight", weight) :
                new ObjectParameter("Weight", typeof(double));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(double));
    
            var mobilePhoneNumberParameter = mobilePhoneNumber != null ?
                new ObjectParameter("MobilePhoneNumber", mobilePhoneNumber) :
                new ObjectParameter("MobilePhoneNumber", typeof(string));
    
            var officePhoneNumberParameter = officePhoneNumber != null ?
                new ObjectParameter("OfficePhoneNumber", officePhoneNumber) :
                new ObjectParameter("OfficePhoneNumber", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var h_BuildingNameParameter = h_BuildingName != null ?
                new ObjectParameter("H_BuildingName", h_BuildingName) :
                new ObjectParameter("H_BuildingName", typeof(string));
    
            var h_VillageNameParameter = h_VillageName != null ?
                new ObjectParameter("H_VillageName", h_VillageName) :
                new ObjectParameter("H_VillageName", typeof(string));
    
            var h_NoParameter = h_No != null ?
                new ObjectParameter("H_No", h_No) :
                new ObjectParameter("H_No", typeof(string));
    
            var h_MooParameter = h_Moo != null ?
                new ObjectParameter("H_Moo", h_Moo) :
                new ObjectParameter("H_Moo", typeof(string));
    
            var h_FloorParameter = h_Floor != null ?
                new ObjectParameter("H_Floor", h_Floor) :
                new ObjectParameter("H_Floor", typeof(string));
    
            var h_SoiParameter = h_Soi != null ?
                new ObjectParameter("H_Soi", h_Soi) :
                new ObjectParameter("H_Soi", typeof(string));
    
            var h_RoadParameter = h_Road != null ?
                new ObjectParameter("H_Road", h_Road) :
                new ObjectParameter("H_Road", typeof(string));
    
            var h_SubDistrictIdParameter = h_SubDistrictId != null ?
                new ObjectParameter("H_SubDistrictId", h_SubDistrictId) :
                new ObjectParameter("H_SubDistrictId", typeof(string));
    
            var w_BuildingNameParameter = w_BuildingName != null ?
                new ObjectParameter("W_BuildingName", w_BuildingName) :
                new ObjectParameter("W_BuildingName", typeof(string));
    
            var w_VillageNameParameter = w_VillageName != null ?
                new ObjectParameter("W_VillageName", w_VillageName) :
                new ObjectParameter("W_VillageName", typeof(string));
    
            var w_NoParameter = w_No != null ?
                new ObjectParameter("W_No", w_No) :
                new ObjectParameter("W_No", typeof(string));
    
            var w_MooParameter = w_Moo != null ?
                new ObjectParameter("W_Moo", w_Moo) :
                new ObjectParameter("W_Moo", typeof(string));
    
            var w_FloorParameter = w_Floor != null ?
                new ObjectParameter("W_Floor", w_Floor) :
                new ObjectParameter("W_Floor", typeof(string));
    
            var w_SoiParameter = w_Soi != null ?
                new ObjectParameter("W_Soi", w_Soi) :
                new ObjectParameter("W_Soi", typeof(string));
    
            var w_RoadParameter = w_Road != null ?
                new ObjectParameter("W_Road", w_Road) :
                new ObjectParameter("W_Road", typeof(string));
    
            var w_SubDistrictIdParameter = w_SubDistrictId != null ?
                new ObjectParameter("W_SubDistrictId", w_SubDistrictId) :
                new ObjectParameter("W_SubDistrictId", typeof(string));
    
            var c_BuildingNameParameter = c_BuildingName != null ?
                new ObjectParameter("C_BuildingName", c_BuildingName) :
                new ObjectParameter("C_BuildingName", typeof(string));
    
            var c_VillageNameParameter = c_VillageName != null ?
                new ObjectParameter("C_VillageName", c_VillageName) :
                new ObjectParameter("C_VillageName", typeof(string));
    
            var c_NoParameter = c_No != null ?
                new ObjectParameter("C_No", c_No) :
                new ObjectParameter("C_No", typeof(string));
    
            var c_MooParameter = c_Moo != null ?
                new ObjectParameter("C_Moo", c_Moo) :
                new ObjectParameter("C_Moo", typeof(string));
    
            var c_FloorParameter = c_Floor != null ?
                new ObjectParameter("C_Floor", c_Floor) :
                new ObjectParameter("C_Floor", typeof(string));
    
            var c_SoiParameter = c_Soi != null ?
                new ObjectParameter("C_Soi", c_Soi) :
                new ObjectParameter("C_Soi", typeof(string));
    
            var c_RoadParameter = c_Road != null ?
                new ObjectParameter("C_Road", c_Road) :
                new ObjectParameter("C_Road", typeof(string));
    
            var c_SubDistrictIdParameter = c_SubDistrictId != null ?
                new ObjectParameter("C_SubDistrictId", c_SubDistrictId) :
                new ObjectParameter("C_SubDistrictId", typeof(string));
    
            var updatedByUserIdParameter = updatedByUserId.HasValue ?
                new ObjectParameter("UpdatedByUserId", updatedByUserId) :
                new ObjectParameter("UpdatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xusp_NewApp_Customer_UpdateV2_Result>("xusp_NewApp_Customer_UpdateV2", applicationIdParameter, titleIdParameter, firstNameParameter, lastNameParameter, birthDateParameter, identityCardNoParameter, passportNoParameter, sexIdParameter, maritalStatusIdParameter, bloodTypeIdParameter, occupationLevelIdParameter, positionParameter, jobDetailParameter, salary1Parameter, salary2Parameter, weightParameter, heightParameter, mobilePhoneNumberParameter, officePhoneNumberParameter, emailParameter, h_BuildingNameParameter, h_VillageNameParameter, h_NoParameter, h_MooParameter, h_FloorParameter, h_SoiParameter, h_RoadParameter, h_SubDistrictIdParameter, w_BuildingNameParameter, w_VillageNameParameter, w_NoParameter, w_MooParameter, w_FloorParameter, w_SoiParameter, w_RoadParameter, w_SubDistrictIdParameter, c_BuildingNameParameter, c_VillageNameParameter, c_NoParameter, c_MooParameter, c_FloorParameter, c_SoiParameter, c_RoadParameter, c_SubDistrictIdParameter, updatedByUserIdParameter);
        }
    
        public virtual ObjectResult<xusp_NewApp_Payer_UpdateV2_Result> xusp_NewApp_Payer_UpdateV2(Nullable<int> applicationId, Nullable<int> relationTypeId, Nullable<int> titleId, string firstName, string lastName, string identityCardNo, string passportNo, Nullable<int> occupationLevelId, string mobilePhoneNumber, string email, string h_BuildingName, string h_VillageName, string h_No, string h_Moo, string h_Floor, string h_Soi, string h_Road, string h_SubDistrictId, string w_BuildingName, string w_VillageName, string w_No, string w_Moo, string w_Floor, string w_Soi, string w_Road, string w_SubDistrictId, Nullable<int> updatedByUserId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var relationTypeIdParameter = relationTypeId.HasValue ?
                new ObjectParameter("RelationTypeId", relationTypeId) :
                new ObjectParameter("RelationTypeId", typeof(int));
    
            var titleIdParameter = titleId.HasValue ?
                new ObjectParameter("TitleId", titleId) :
                new ObjectParameter("TitleId", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var identityCardNoParameter = identityCardNo != null ?
                new ObjectParameter("IdentityCardNo", identityCardNo) :
                new ObjectParameter("IdentityCardNo", typeof(string));
    
            var passportNoParameter = passportNo != null ?
                new ObjectParameter("PassportNo", passportNo) :
                new ObjectParameter("PassportNo", typeof(string));
    
            var occupationLevelIdParameter = occupationLevelId.HasValue ?
                new ObjectParameter("OccupationLevelId", occupationLevelId) :
                new ObjectParameter("OccupationLevelId", typeof(int));
    
            var mobilePhoneNumberParameter = mobilePhoneNumber != null ?
                new ObjectParameter("MobilePhoneNumber", mobilePhoneNumber) :
                new ObjectParameter("MobilePhoneNumber", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var h_BuildingNameParameter = h_BuildingName != null ?
                new ObjectParameter("H_BuildingName", h_BuildingName) :
                new ObjectParameter("H_BuildingName", typeof(string));
    
            var h_VillageNameParameter = h_VillageName != null ?
                new ObjectParameter("H_VillageName", h_VillageName) :
                new ObjectParameter("H_VillageName", typeof(string));
    
            var h_NoParameter = h_No != null ?
                new ObjectParameter("H_No", h_No) :
                new ObjectParameter("H_No", typeof(string));
    
            var h_MooParameter = h_Moo != null ?
                new ObjectParameter("H_Moo", h_Moo) :
                new ObjectParameter("H_Moo", typeof(string));
    
            var h_FloorParameter = h_Floor != null ?
                new ObjectParameter("H_Floor", h_Floor) :
                new ObjectParameter("H_Floor", typeof(string));
    
            var h_SoiParameter = h_Soi != null ?
                new ObjectParameter("H_Soi", h_Soi) :
                new ObjectParameter("H_Soi", typeof(string));
    
            var h_RoadParameter = h_Road != null ?
                new ObjectParameter("H_Road", h_Road) :
                new ObjectParameter("H_Road", typeof(string));
    
            var h_SubDistrictIdParameter = h_SubDistrictId != null ?
                new ObjectParameter("H_SubDistrictId", h_SubDistrictId) :
                new ObjectParameter("H_SubDistrictId", typeof(string));
    
            var w_BuildingNameParameter = w_BuildingName != null ?
                new ObjectParameter("W_BuildingName", w_BuildingName) :
                new ObjectParameter("W_BuildingName", typeof(string));
    
            var w_VillageNameParameter = w_VillageName != null ?
                new ObjectParameter("W_VillageName", w_VillageName) :
                new ObjectParameter("W_VillageName", typeof(string));
    
            var w_NoParameter = w_No != null ?
                new ObjectParameter("W_No", w_No) :
                new ObjectParameter("W_No", typeof(string));
    
            var w_MooParameter = w_Moo != null ?
                new ObjectParameter("W_Moo", w_Moo) :
                new ObjectParameter("W_Moo", typeof(string));
    
            var w_FloorParameter = w_Floor != null ?
                new ObjectParameter("W_Floor", w_Floor) :
                new ObjectParameter("W_Floor", typeof(string));
    
            var w_SoiParameter = w_Soi != null ?
                new ObjectParameter("W_Soi", w_Soi) :
                new ObjectParameter("W_Soi", typeof(string));
    
            var w_RoadParameter = w_Road != null ?
                new ObjectParameter("W_Road", w_Road) :
                new ObjectParameter("W_Road", typeof(string));
    
            var w_SubDistrictIdParameter = w_SubDistrictId != null ?
                new ObjectParameter("W_SubDistrictId", w_SubDistrictId) :
                new ObjectParameter("W_SubDistrictId", typeof(string));
    
            var updatedByUserIdParameter = updatedByUserId.HasValue ?
                new ObjectParameter("UpdatedByUserId", updatedByUserId) :
                new ObjectParameter("UpdatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xusp_NewApp_Payer_UpdateV2_Result>("xusp_NewApp_Payer_UpdateV2", applicationIdParameter, relationTypeIdParameter, titleIdParameter, firstNameParameter, lastNameParameter, identityCardNoParameter, passportNoParameter, occupationLevelIdParameter, mobilePhoneNumberParameter, emailParameter, h_BuildingNameParameter, h_VillageNameParameter, h_NoParameter, h_MooParameter, h_FloorParameter, h_SoiParameter, h_RoadParameter, h_SubDistrictIdParameter, w_BuildingNameParameter, w_VillageNameParameter, w_NoParameter, w_MooParameter, w_FloorParameter, w_SoiParameter, w_RoadParameter, w_SubDistrictIdParameter, updatedByUserIdParameter);
        }
    
        public virtual ObjectResult<xusp_NewApp_Policy_UpdateV2_Result> xusp_NewApp_Policy_UpdateV2(Nullable<int> applicationId, Nullable<int> productId, Nullable<System.DateTime> startCoverDate, Nullable<System.DateTime> endCoverDate, string billBook, string billNo, Nullable<System.DateTime> billDate, Nullable<int> disclosureStatusId, Nullable<int> saleEmpId, Nullable<int> zebraId, Nullable<int> zebraOwnerEmpId, Nullable<int> updatedByUserId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var startCoverDateParameter = startCoverDate.HasValue ?
                new ObjectParameter("StartCoverDate", startCoverDate) :
                new ObjectParameter("StartCoverDate", typeof(System.DateTime));
    
            var endCoverDateParameter = endCoverDate.HasValue ?
                new ObjectParameter("EndCoverDate", endCoverDate) :
                new ObjectParameter("EndCoverDate", typeof(System.DateTime));
    
            var billBookParameter = billBook != null ?
                new ObjectParameter("BillBook", billBook) :
                new ObjectParameter("BillBook", typeof(string));
    
            var billNoParameter = billNo != null ?
                new ObjectParameter("BillNo", billNo) :
                new ObjectParameter("BillNo", typeof(string));
    
            var billDateParameter = billDate.HasValue ?
                new ObjectParameter("BillDate", billDate) :
                new ObjectParameter("BillDate", typeof(System.DateTime));
    
            var disclosureStatusIdParameter = disclosureStatusId.HasValue ?
                new ObjectParameter("DisclosureStatusId", disclosureStatusId) :
                new ObjectParameter("DisclosureStatusId", typeof(int));
    
            var saleEmpIdParameter = saleEmpId.HasValue ?
                new ObjectParameter("SaleEmpId", saleEmpId) :
                new ObjectParameter("SaleEmpId", typeof(int));
    
            var zebraIdParameter = zebraId.HasValue ?
                new ObjectParameter("ZebraId", zebraId) :
                new ObjectParameter("ZebraId", typeof(int));
    
            var zebraOwnerEmpIdParameter = zebraOwnerEmpId.HasValue ?
                new ObjectParameter("ZebraOwnerEmpId", zebraOwnerEmpId) :
                new ObjectParameter("ZebraOwnerEmpId", typeof(int));
    
            var updatedByUserIdParameter = updatedByUserId.HasValue ?
                new ObjectParameter("UpdatedByUserId", updatedByUserId) :
                new ObjectParameter("UpdatedByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xusp_NewApp_Policy_UpdateV2_Result>("xusp_NewApp_Policy_UpdateV2", applicationIdParameter, productIdParameter, startCoverDateParameter, endCoverDateParameter, billBookParameter, billNoParameter, billDateParameter, disclosureStatusIdParameter, saleEmpIdParameter, zebraIdParameter, zebraOwnerEmpIdParameter, updatedByUserIdParameter);
        }
    
        public virtual int usp_CustomerDetail_Covid_UpdateByDataCenter(string applicationCode, Nullable<int> personId, Nullable<int> createdByUserId, Nullable<int> listUpdateDetailId, Nullable<bool> isPartiallyFix)
        {
            var applicationCodeParameter = applicationCode != null ?
                new ObjectParameter("ApplicationCode", applicationCode) :
                new ObjectParameter("ApplicationCode", typeof(string));
    
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            var listUpdateDetailIdParameter = listUpdateDetailId.HasValue ?
                new ObjectParameter("ListUpdateDetailId", listUpdateDetailId) :
                new ObjectParameter("ListUpdateDetailId", typeof(int));
    
            var isPartiallyFixParameter = isPartiallyFix.HasValue ?
                new ObjectParameter("IsPartiallyFix", isPartiallyFix) :
                new ObjectParameter("IsPartiallyFix", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CustomerDetail_Covid_UpdateByDataCenter", applicationCodeParameter, personIdParameter, createdByUserIdParameter, listUpdateDetailIdParameter, isPartiallyFixParameter);
        }
    
        public virtual int usp_CustomerDetail_CriticalIllness_UpdateByDataCenter(string applicationCode, Nullable<int> personId, Nullable<bool> isCustomer, Nullable<bool> isPayer, Nullable<int> createdByUserId, Nullable<int> listUpdateDetailId, Nullable<bool> isPartiallyFix)
        {
            var applicationCodeParameter = applicationCode != null ?
                new ObjectParameter("ApplicationCode", applicationCode) :
                new ObjectParameter("ApplicationCode", typeof(string));
    
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            var isCustomerParameter = isCustomer.HasValue ?
                new ObjectParameter("IsCustomer", isCustomer) :
                new ObjectParameter("IsCustomer", typeof(bool));
    
            var isPayerParameter = isPayer.HasValue ?
                new ObjectParameter("IsPayer", isPayer) :
                new ObjectParameter("IsPayer", typeof(bool));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            var listUpdateDetailIdParameter = listUpdateDetailId.HasValue ?
                new ObjectParameter("ListUpdateDetailId", listUpdateDetailId) :
                new ObjectParameter("ListUpdateDetailId", typeof(int));
    
            var isPartiallyFixParameter = isPartiallyFix.HasValue ?
                new ObjectParameter("IsPartiallyFix", isPartiallyFix) :
                new ObjectParameter("IsPartiallyFix", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CustomerDetail_CriticalIllness_UpdateByDataCenter", applicationCodeParameter, personIdParameter, isCustomerParameter, isPayerParameter, createdByUserIdParameter, listUpdateDetailIdParameter, isPartiallyFixParameter);
        }
    
        [DbFunction("CriticalIllnessEntities", "func_CalculateAge")]
        public virtual IQueryable<func_CalculateAge_Result> func_CalculateAge(Nullable<System.DateTime> date1, Nullable<System.DateTime> date2)
        {
            var date1Parameter = date1.HasValue ?
                new ObjectParameter("Date1", date1) :
                new ObjectParameter("Date1", typeof(System.DateTime));
    
            var date2Parameter = date2.HasValue ?
                new ObjectParameter("Date2", date2) :
                new ObjectParameter("Date2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<func_CalculateAge_Result>("[CriticalIllnessEntities].[func_CalculateAge](@Date1, @Date2)", date1Parameter, date2Parameter);
        }
    
        [DbFunction("CriticalIllnessEntities", "func_RecurringEmp_Covid_Select")]
        public virtual IQueryable<func_RecurringEmp_Covid_Select_Result> func_RecurringEmp_Covid_Select(Nullable<System.DateTime> startCoverDateFrom)
        {
            var startCoverDateFromParameter = startCoverDateFrom.HasValue ?
                new ObjectParameter("StartCoverDateFrom", startCoverDateFrom) :
                new ObjectParameter("StartCoverDateFrom", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<func_RecurringEmp_Covid_Select_Result>("[CriticalIllnessEntities].[func_RecurringEmp_Covid_Select](@StartCoverDateFrom)", startCoverDateFromParameter);
        }
    
        [DbFunction("CriticalIllnessEntities", "func_RecurringEmp_CriticalIllness_None_Select")]
        public virtual IQueryable<func_RecurringEmp_CriticalIllness_None_Select_Result> func_RecurringEmp_CriticalIllness_None_Select(Nullable<System.DateTime> startCoverDateFrom)
        {
            var startCoverDateFromParameter = startCoverDateFrom.HasValue ?
                new ObjectParameter("StartCoverDateFrom", startCoverDateFrom) :
                new ObjectParameter("StartCoverDateFrom", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<func_RecurringEmp_CriticalIllness_None_Select_Result>("[CriticalIllnessEntities].[func_RecurringEmp_CriticalIllness_None_Select](@StartCoverDateFrom)", startCoverDateFromParameter);
        }
    
        [DbFunction("CriticalIllnessEntities", "func_RecurringEmp_CriticalIllness_Select")]
        public virtual IQueryable<func_RecurringEmp_CriticalIllness_Select_Result> func_RecurringEmp_CriticalIllness_Select(Nullable<System.DateTime> startCoverDateFrom)
        {
            var startCoverDateFromParameter = startCoverDateFrom.HasValue ?
                new ObjectParameter("StartCoverDateFrom", startCoverDateFrom) :
                new ObjectParameter("StartCoverDateFrom", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<func_RecurringEmp_CriticalIllness_Select_Result>("[CriticalIllnessEntities].[func_RecurringEmp_CriticalIllness_Select](@StartCoverDateFrom)", startCoverDateFromParameter);
        }
    
        [DbFunction("CriticalIllnessEntities", "func_RecurringEmpxxx")]
        public virtual IQueryable<func_RecurringEmpxxx_Result> func_RecurringEmpxxx(Nullable<System.DateTime> l_StartCoverDate)
        {
            var l_StartCoverDateParameter = l_StartCoverDate.HasValue ?
                new ObjectParameter("l_StartCoverDate", l_StartCoverDate) :
                new ObjectParameter("l_StartCoverDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<func_RecurringEmpxxx_Result>("[CriticalIllnessEntities].[func_RecurringEmpxxx](@l_StartCoverDate)", l_StartCoverDateParameter);
        }
    
        [DbFunction("CriticalIllnessEntities", "func_SplitStringToTable")]
        public virtual IQueryable<func_SplitStringToTable_Result> func_SplitStringToTable(string stringToSplit, string delimiter)
        {
            var stringToSplitParameter = stringToSplit != null ?
                new ObjectParameter("StringToSplit", stringToSplit) :
                new ObjectParameter("StringToSplit", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("Delimiter", delimiter) :
                new ObjectParameter("Delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<func_SplitStringToTable_Result>("[CriticalIllnessEntities].[func_SplitStringToTable](@StringToSplit, @Delimiter)", stringToSplitParameter, delimiterParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int usp_AddressDetail1_Select(string buildingName, string villageName, string no, string moo, string floor, string soi, string road, ObjectParameter fullDetail)
        {
            var buildingNameParameter = buildingName != null ?
                new ObjectParameter("BuildingName", buildingName) :
                new ObjectParameter("BuildingName", typeof(string));
    
            var villageNameParameter = villageName != null ?
                new ObjectParameter("VillageName", villageName) :
                new ObjectParameter("VillageName", typeof(string));
    
            var noParameter = no != null ?
                new ObjectParameter("No", no) :
                new ObjectParameter("No", typeof(string));
    
            var mooParameter = moo != null ?
                new ObjectParameter("Moo", moo) :
                new ObjectParameter("Moo", typeof(string));
    
            var floorParameter = floor != null ?
                new ObjectParameter("Floor", floor) :
                new ObjectParameter("Floor", typeof(string));
    
            var soiParameter = soi != null ?
                new ObjectParameter("Soi", soi) :
                new ObjectParameter("Soi", typeof(string));
    
            var roadParameter = road != null ?
                new ObjectParameter("Road", road) :
                new ObjectParameter("Road", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AddressDetail1_Select", buildingNameParameter, villageNameParameter, noParameter, mooParameter, floorParameter, soiParameter, roadParameter, fullDetail);
        }
    
        public virtual int usp_AddressDetail2_Select(string subDistrictId, ObjectParameter fullDetail)
        {
            var subDistrictIdParameter = subDistrictId != null ?
                new ObjectParameter("SubDistrictId", subDistrictId) :
                new ObjectParameter("SubDistrictId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AddressDetail2_Select", subDistrictIdParameter, fullDetail);
        }
    
        public virtual ObjectResult<usp_DocumentFileControlApplication_Select_Result> usp_DocumentFileControlApplication_Select(Nullable<int> documentFileControlHeaderId)
        {
            var documentFileControlHeaderIdParameter = documentFileControlHeaderId.HasValue ?
                new ObjectParameter("DocumentFileControlHeaderId", documentFileControlHeaderId) :
                new ObjectParameter("DocumentFileControlHeaderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DocumentFileControlApplication_Select_Result>("usp_DocumentFileControlApplication_Select", documentFileControlHeaderIdParameter);
        }
    
        public virtual ObjectResult<usp_DocumentFileControlApplication_Select_ForBatch_Result> usp_DocumentFileControlApplication_Select_ForBatch()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DocumentFileControlApplication_Select_ForBatch_Result>("usp_DocumentFileControlApplication_Select_ForBatch");
        }
    
        public virtual ObjectResult<usp_DocumentFileControlBatchLogHeader_Select_Result> usp_DocumentFileControlBatchLogHeader_Select(Nullable<int> pageStart, Nullable<int> pageSize, string sortField, string orderType, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var pageStartParameter = pageStart.HasValue ?
                new ObjectParameter("PageStart", pageStart) :
                new ObjectParameter("PageStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DocumentFileControlBatchLogHeader_Select_Result>("usp_DocumentFileControlBatchLogHeader_Select", pageStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<usp_DocumentFileControlDetail_Select_Result> usp_DocumentFileControlDetail_Select(Nullable<int> documentFileControlHeaderId)
        {
            var documentFileControlHeaderIdParameter = documentFileControlHeaderId.HasValue ?
                new ObjectParameter("DocumentFileControlHeaderId", documentFileControlHeaderId) :
                new ObjectParameter("DocumentFileControlHeaderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DocumentFileControlDetail_Select_Result>("usp_DocumentFileControlDetail_Select", documentFileControlHeaderIdParameter);
        }
    
        public virtual ObjectResult<usp_DocumentFileControlDetail_Select_ForBatch_Result> usp_DocumentFileControlDetail_Select_ForBatch()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DocumentFileControlDetail_Select_ForBatch_Result>("usp_DocumentFileControlDetail_Select_ForBatch");
        }
    
        public virtual int usp_GenerateCode_FromTo(string transactionCodeControlTypeDetail, Nullable<int> total, ObjectParameter yY, ObjectParameter mM, ObjectParameter runningFrom, ObjectParameter runningTo)
        {
            var transactionCodeControlTypeDetailParameter = transactionCodeControlTypeDetail != null ?
                new ObjectParameter("TransactionCodeControlTypeDetail", transactionCodeControlTypeDetail) :
                new ObjectParameter("TransactionCodeControlTypeDetail", typeof(string));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GenerateCode_FromTo", transactionCodeControlTypeDetailParameter, totalParameter, yY, mM, runningFrom, runningTo);
        }
    
        public virtual int usp_InsertDebtReceiveFormSSSCashReceive_Update()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertDebtReceiveFormSSSCashReceive_Update");
        }
    
        public virtual int usp_InsertDebtReceiveFormSSSCashReceive_UpdateV1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertDebtReceiveFormSSSCashReceive_UpdateV1");
        }
    
        public virtual int usp_InsertDebtReceiveFormSSSCashReceive_UpdateV2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertDebtReceiveFormSSSCashReceive_UpdateV2");
        }
    
        public virtual int usp_PortfolioHistory_Insert(Nullable<System.DateTime> period)
        {
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PortfolioHistory_Insert", periodParameter);
        }
    
        public virtual int usp_PortfolioHistory_Sheet_Cancel_Select(Nullable<System.DateTime> period)
        {
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PortfolioHistory_Sheet_Cancel_Select", periodParameter);
        }
    
        public virtual int usp_PortfolioHistory_Sheet_Detail_Select(Nullable<System.DateTime> period)
        {
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PortfolioHistory_Sheet_Detail_Select", periodParameter);
        }
    
        public virtual int usp_PortfolioHistory_Sheet_NewApp_Select(Nullable<System.DateTime> period)
        {
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PortfolioHistory_Sheet_NewApp_Select", periodParameter);
        }
    
        public virtual int usp_PortfolioHistory_Sheet_PayerBranch_Select(Nullable<System.DateTime> period)
        {
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PortfolioHistory_Sheet_PayerBranch_Select", periodParameter);
        }
    
        public virtual int usp_PortfolioHistory_Sheet_PayerStudyArea_Select(Nullable<System.DateTime> period)
        {
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PortfolioHistory_Sheet_PayerStudyArea_Select", periodParameter);
        }
    
        public virtual int usp_PortfolioHistory_Sheet_ReNew_Select(Nullable<System.DateTime> period)
        {
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PortfolioHistory_Sheet_ReNew_Select", periodParameter);
        }
    
        public virtual int usp_PortfolioHistory_Sheet_Sale_Select(Nullable<System.DateTime> period)
        {
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PortfolioHistory_Sheet_Sale_Select", periodParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationFullDetail_Select_Result> usp_ApplicationFullDetail_Select(Nullable<int> dateTypeId, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, Nullable<int> branchId, string applicationStatusIdList, string employeeId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var dateTypeIdParameter = dateTypeId.HasValue ?
                new ObjectParameter("DateTypeId", dateTypeId) :
                new ObjectParameter("DateTypeId", typeof(int));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var applicationStatusIdListParameter = applicationStatusIdList != null ?
                new ObjectParameter("ApplicationStatusIdList", applicationStatusIdList) :
                new ObjectParameter("ApplicationStatusIdList", typeof(string));
    
            var employeeIdParameter = employeeId != null ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(string));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationFullDetail_Select_Result>("usp_ApplicationFullDetail_Select", dateTypeIdParameter, dateFromParameter, dateToParameter, branchIdParameter, applicationStatusIdListParameter, employeeIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual int usp_ConfirmPolicy_Select1(Nullable<int> confirmPolicyId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var confirmPolicyIdParameter = confirmPolicyId.HasValue ?
                new ObjectParameter("ConfirmPolicyId", confirmPolicyId) :
                new ObjectParameter("ConfirmPolicyId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ConfirmPolicy_Select1", confirmPolicyIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual int usp_ConfirmPolicyType_Select(Nullable<int> confirmPolicyTypeId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var confirmPolicyTypeIdParameter = confirmPolicyTypeId.HasValue ?
                new ObjectParameter("ConfirmPolicyTypeId", confirmPolicyTypeId) :
                new ObjectParameter("ConfirmPolicyTypeId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ConfirmPolicyType_Select", confirmPolicyTypeIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    
        public virtual ObjectResult<usp_TransactionUdw_Select_Result> usp_TransactionUdw_Select(Nullable<int> applicationId, Nullable<int> indexStart, Nullable<int> pageSize, string sortField, string orderType, string searchDetail)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var indexStartParameter = indexStart.HasValue ?
                new ObjectParameter("IndexStart", indexStart) :
                new ObjectParameter("IndexStart", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortFieldParameter = sortField != null ?
                new ObjectParameter("SortField", sortField) :
                new ObjectParameter("SortField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var searchDetailParameter = searchDetail != null ?
                new ObjectParameter("SearchDetail", searchDetail) :
                new ObjectParameter("SearchDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TransactionUdw_Select_Result>("usp_TransactionUdw_Select", applicationIdParameter, indexStartParameter, pageSizeParameter, sortFieldParameter, orderTypeParameter, searchDetailParameter);
        }
    }
}
